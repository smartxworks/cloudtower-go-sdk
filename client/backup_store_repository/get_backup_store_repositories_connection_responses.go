// Code generated by go-swagger; DO NOT EDIT.

package backup_store_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetBackupStoreRepositoriesConnectionReader is a Reader for the GetBackupStoreRepositoriesConnection structure.
type GetBackupStoreRepositoriesConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackupStoreRepositoriesConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBackupStoreRepositoriesConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetBackupStoreRepositoriesConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetBackupStoreRepositoriesConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetBackupStoreRepositoriesConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBackupStoreRepositoriesConnectionOK creates a GetBackupStoreRepositoriesConnectionOK with default headers values
func NewGetBackupStoreRepositoriesConnectionOK() *GetBackupStoreRepositoriesConnectionOK {
	return &GetBackupStoreRepositoriesConnectionOK{}
}

/* GetBackupStoreRepositoriesConnectionOK describes a response with status code 200, with default header values.

GetBackupStoreRepositoriesConnectionOK get backup store repositories connection o k
*/
type GetBackupStoreRepositoriesConnectionOK struct {
	XTowerRequestID string

	Payload *models.BackupStoreRepositoryConnection
}

func (o *GetBackupStoreRepositoriesConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-backup-store-repositories-connection][%d] getBackupStoreRepositoriesConnectionOK  %+v", 200, o.Payload)
}
func (o *GetBackupStoreRepositoriesConnectionOK) GetPayload() *models.BackupStoreRepositoryConnection {
	return o.Payload
}

func (o *GetBackupStoreRepositoriesConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.BackupStoreRepositoryConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupStoreRepositoriesConnectionBadRequest creates a GetBackupStoreRepositoriesConnectionBadRequest with default headers values
func NewGetBackupStoreRepositoriesConnectionBadRequest() *GetBackupStoreRepositoriesConnectionBadRequest {
	return &GetBackupStoreRepositoriesConnectionBadRequest{}
}

/* GetBackupStoreRepositoriesConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetBackupStoreRepositoriesConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetBackupStoreRepositoriesConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-backup-store-repositories-connection][%d] getBackupStoreRepositoriesConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetBackupStoreRepositoriesConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetBackupStoreRepositoriesConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupStoreRepositoriesConnectionNotFound creates a GetBackupStoreRepositoriesConnectionNotFound with default headers values
func NewGetBackupStoreRepositoriesConnectionNotFound() *GetBackupStoreRepositoriesConnectionNotFound {
	return &GetBackupStoreRepositoriesConnectionNotFound{}
}

/* GetBackupStoreRepositoriesConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetBackupStoreRepositoriesConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetBackupStoreRepositoriesConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-backup-store-repositories-connection][%d] getBackupStoreRepositoriesConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetBackupStoreRepositoriesConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetBackupStoreRepositoriesConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupStoreRepositoriesConnectionInternalServerError creates a GetBackupStoreRepositoriesConnectionInternalServerError with default headers values
func NewGetBackupStoreRepositoriesConnectionInternalServerError() *GetBackupStoreRepositoriesConnectionInternalServerError {
	return &GetBackupStoreRepositoriesConnectionInternalServerError{}
}

/* GetBackupStoreRepositoriesConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetBackupStoreRepositoriesConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetBackupStoreRepositoriesConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-backup-store-repositories-connection][%d] getBackupStoreRepositoriesConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetBackupStoreRepositoriesConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetBackupStoreRepositoriesConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
