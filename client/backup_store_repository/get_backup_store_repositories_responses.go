// Code generated by go-swagger; DO NOT EDIT.

package backup_store_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetBackupStoreRepositoriesReader is a Reader for the GetBackupStoreRepositories structure.
type GetBackupStoreRepositoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackupStoreRepositoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBackupStoreRepositoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetBackupStoreRepositoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetBackupStoreRepositoriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetBackupStoreRepositoriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBackupStoreRepositoriesOK creates a GetBackupStoreRepositoriesOK with default headers values
func NewGetBackupStoreRepositoriesOK() *GetBackupStoreRepositoriesOK {
	return &GetBackupStoreRepositoriesOK{}
}

/* GetBackupStoreRepositoriesOK describes a response with status code 200, with default header values.

GetBackupStoreRepositoriesOK get backup store repositories o k
*/
type GetBackupStoreRepositoriesOK struct {
	XTowerRequestID string

	Payload []*models.BackupStoreRepository
}

func (o *GetBackupStoreRepositoriesOK) Error() string {
	return fmt.Sprintf("[POST /get-backup-store-repositories][%d] getBackupStoreRepositoriesOK  %+v", 200, o.Payload)
}
func (o *GetBackupStoreRepositoriesOK) GetPayload() []*models.BackupStoreRepository {
	return o.Payload
}

func (o *GetBackupStoreRepositoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupStoreRepositoriesBadRequest creates a GetBackupStoreRepositoriesBadRequest with default headers values
func NewGetBackupStoreRepositoriesBadRequest() *GetBackupStoreRepositoriesBadRequest {
	return &GetBackupStoreRepositoriesBadRequest{}
}

/* GetBackupStoreRepositoriesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetBackupStoreRepositoriesBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetBackupStoreRepositoriesBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-backup-store-repositories][%d] getBackupStoreRepositoriesBadRequest  %+v", 400, o.Payload)
}
func (o *GetBackupStoreRepositoriesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetBackupStoreRepositoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupStoreRepositoriesNotFound creates a GetBackupStoreRepositoriesNotFound with default headers values
func NewGetBackupStoreRepositoriesNotFound() *GetBackupStoreRepositoriesNotFound {
	return &GetBackupStoreRepositoriesNotFound{}
}

/* GetBackupStoreRepositoriesNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetBackupStoreRepositoriesNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetBackupStoreRepositoriesNotFound) Error() string {
	return fmt.Sprintf("[POST /get-backup-store-repositories][%d] getBackupStoreRepositoriesNotFound  %+v", 404, o.Payload)
}
func (o *GetBackupStoreRepositoriesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetBackupStoreRepositoriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupStoreRepositoriesInternalServerError creates a GetBackupStoreRepositoriesInternalServerError with default headers values
func NewGetBackupStoreRepositoriesInternalServerError() *GetBackupStoreRepositoriesInternalServerError {
	return &GetBackupStoreRepositoriesInternalServerError{}
}

/* GetBackupStoreRepositoriesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetBackupStoreRepositoriesInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetBackupStoreRepositoriesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-backup-store-repositories][%d] getBackupStoreRepositoriesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetBackupStoreRepositoriesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetBackupStoreRepositoriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
