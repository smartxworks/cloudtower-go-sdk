// Code generated by go-swagger; DO NOT EDIT.

package network_policy_rule_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpdateNetworkPolicyRuleServiceReader is a Reader for the UpdateNetworkPolicyRuleService structure.
type UpdateNetworkPolicyRuleServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetworkPolicyRuleServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetworkPolicyRuleServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewUpdateNetworkPolicyRuleServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpdateNetworkPolicyRuleServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpdateNetworkPolicyRuleServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNetworkPolicyRuleServiceOK creates a UpdateNetworkPolicyRuleServiceOK with default headers values
func NewUpdateNetworkPolicyRuleServiceOK() *UpdateNetworkPolicyRuleServiceOK {
	return &UpdateNetworkPolicyRuleServiceOK{}
}

/* UpdateNetworkPolicyRuleServiceOK describes a response with status code 200, with default header values.

UpdateNetworkPolicyRuleServiceOK update network policy rule service o k
*/
type UpdateNetworkPolicyRuleServiceOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskNetworkPolicyRuleService
}

func (o *UpdateNetworkPolicyRuleServiceOK) Error() string {
	return fmt.Sprintf("[POST /update-network-policy-rule-service][%d] updateNetworkPolicyRuleServiceOK  %+v", 200, o.Payload)
}
func (o *UpdateNetworkPolicyRuleServiceOK) GetPayload() []*models.WithTaskNetworkPolicyRuleService {
	return o.Payload
}

func (o *UpdateNetworkPolicyRuleServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNetworkPolicyRuleServiceBadRequest creates a UpdateNetworkPolicyRuleServiceBadRequest with default headers values
func NewUpdateNetworkPolicyRuleServiceBadRequest() *UpdateNetworkPolicyRuleServiceBadRequest {
	return &UpdateNetworkPolicyRuleServiceBadRequest{}
}

/* UpdateNetworkPolicyRuleServiceBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateNetworkPolicyRuleServiceBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateNetworkPolicyRuleServiceBadRequest) Error() string {
	return fmt.Sprintf("[POST /update-network-policy-rule-service][%d] updateNetworkPolicyRuleServiceBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateNetworkPolicyRuleServiceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateNetworkPolicyRuleServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNetworkPolicyRuleServiceNotFound creates a UpdateNetworkPolicyRuleServiceNotFound with default headers values
func NewUpdateNetworkPolicyRuleServiceNotFound() *UpdateNetworkPolicyRuleServiceNotFound {
	return &UpdateNetworkPolicyRuleServiceNotFound{}
}

/* UpdateNetworkPolicyRuleServiceNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateNetworkPolicyRuleServiceNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateNetworkPolicyRuleServiceNotFound) Error() string {
	return fmt.Sprintf("[POST /update-network-policy-rule-service][%d] updateNetworkPolicyRuleServiceNotFound  %+v", 404, o.Payload)
}
func (o *UpdateNetworkPolicyRuleServiceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateNetworkPolicyRuleServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNetworkPolicyRuleServiceInternalServerError creates a UpdateNetworkPolicyRuleServiceInternalServerError with default headers values
func NewUpdateNetworkPolicyRuleServiceInternalServerError() *UpdateNetworkPolicyRuleServiceInternalServerError {
	return &UpdateNetworkPolicyRuleServiceInternalServerError{}
}

/* UpdateNetworkPolicyRuleServiceInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateNetworkPolicyRuleServiceInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateNetworkPolicyRuleServiceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update-network-policy-rule-service][%d] updateNetworkPolicyRuleServiceInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateNetworkPolicyRuleServiceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateNetworkPolicyRuleServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
