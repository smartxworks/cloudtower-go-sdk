// Code generated by go-swagger; DO NOT EDIT.

package network_policy_rule_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetNetworkPolicyRuleServicesConnectionReader is a Reader for the GetNetworkPolicyRuleServicesConnection structure.
type GetNetworkPolicyRuleServicesConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkPolicyRuleServicesConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkPolicyRuleServicesConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNetworkPolicyRuleServicesConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNetworkPolicyRuleServicesConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNetworkPolicyRuleServicesConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNetworkPolicyRuleServicesConnectionOK creates a GetNetworkPolicyRuleServicesConnectionOK with default headers values
func NewGetNetworkPolicyRuleServicesConnectionOK() *GetNetworkPolicyRuleServicesConnectionOK {
	return &GetNetworkPolicyRuleServicesConnectionOK{}
}

/* GetNetworkPolicyRuleServicesConnectionOK describes a response with status code 200, with default header values.

GetNetworkPolicyRuleServicesConnectionOK get network policy rule services connection o k
*/
type GetNetworkPolicyRuleServicesConnectionOK struct {
	XTowerRequestID string

	Payload *models.NetworkPolicyRuleServiceConnection
}

func (o *GetNetworkPolicyRuleServicesConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-network-policy-rule-services-connection][%d] getNetworkPolicyRuleServicesConnectionOK  %+v", 200, o.Payload)
}
func (o *GetNetworkPolicyRuleServicesConnectionOK) GetPayload() *models.NetworkPolicyRuleServiceConnection {
	return o.Payload
}

func (o *GetNetworkPolicyRuleServicesConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.NetworkPolicyRuleServiceConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkPolicyRuleServicesConnectionBadRequest creates a GetNetworkPolicyRuleServicesConnectionBadRequest with default headers values
func NewGetNetworkPolicyRuleServicesConnectionBadRequest() *GetNetworkPolicyRuleServicesConnectionBadRequest {
	return &GetNetworkPolicyRuleServicesConnectionBadRequest{}
}

/* GetNetworkPolicyRuleServicesConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetNetworkPolicyRuleServicesConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNetworkPolicyRuleServicesConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-network-policy-rule-services-connection][%d] getNetworkPolicyRuleServicesConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetNetworkPolicyRuleServicesConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNetworkPolicyRuleServicesConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkPolicyRuleServicesConnectionNotFound creates a GetNetworkPolicyRuleServicesConnectionNotFound with default headers values
func NewGetNetworkPolicyRuleServicesConnectionNotFound() *GetNetworkPolicyRuleServicesConnectionNotFound {
	return &GetNetworkPolicyRuleServicesConnectionNotFound{}
}

/* GetNetworkPolicyRuleServicesConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetNetworkPolicyRuleServicesConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNetworkPolicyRuleServicesConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-network-policy-rule-services-connection][%d] getNetworkPolicyRuleServicesConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetNetworkPolicyRuleServicesConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNetworkPolicyRuleServicesConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkPolicyRuleServicesConnectionInternalServerError creates a GetNetworkPolicyRuleServicesConnectionInternalServerError with default headers values
func NewGetNetworkPolicyRuleServicesConnectionInternalServerError() *GetNetworkPolicyRuleServicesConnectionInternalServerError {
	return &GetNetworkPolicyRuleServicesConnectionInternalServerError{}
}

/* GetNetworkPolicyRuleServicesConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetNetworkPolicyRuleServicesConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNetworkPolicyRuleServicesConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-network-policy-rule-services-connection][%d] getNetworkPolicyRuleServicesConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetNetworkPolicyRuleServicesConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNetworkPolicyRuleServicesConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
