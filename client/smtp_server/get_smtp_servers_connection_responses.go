// Code generated by go-swagger; DO NOT EDIT.

package smtp_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetSMTPServersConnectionReader is a Reader for the GetSMTPServersConnection structure.
type GetSMTPServersConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSMTPServersConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSMTPServersConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetSMTPServersConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetSMTPServersConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetSMTPServersConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSMTPServersConnectionOK creates a GetSMTPServersConnectionOK with default headers values
func NewGetSMTPServersConnectionOK() *GetSMTPServersConnectionOK {
	return &GetSMTPServersConnectionOK{}
}

/* GetSMTPServersConnectionOK describes a response with status code 200, with default header values.

GetSMTPServersConnectionOK get Smtp servers connection o k
*/
type GetSMTPServersConnectionOK struct {
	XTowerRequestID string

	Payload *models.SMTPServerConnection
}

func (o *GetSMTPServersConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-smtp-servers-connection][%d] getSmtpServersConnectionOK  %+v", 200, o.Payload)
}
func (o *GetSMTPServersConnectionOK) GetPayload() *models.SMTPServerConnection {
	return o.Payload
}

func (o *GetSMTPServersConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.SMTPServerConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSMTPServersConnectionBadRequest creates a GetSMTPServersConnectionBadRequest with default headers values
func NewGetSMTPServersConnectionBadRequest() *GetSMTPServersConnectionBadRequest {
	return &GetSMTPServersConnectionBadRequest{}
}

/* GetSMTPServersConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSMTPServersConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSMTPServersConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-smtp-servers-connection][%d] getSmtpServersConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetSMTPServersConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSMTPServersConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSMTPServersConnectionNotFound creates a GetSMTPServersConnectionNotFound with default headers values
func NewGetSMTPServersConnectionNotFound() *GetSMTPServersConnectionNotFound {
	return &GetSMTPServersConnectionNotFound{}
}

/* GetSMTPServersConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSMTPServersConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSMTPServersConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-smtp-servers-connection][%d] getSmtpServersConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetSMTPServersConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSMTPServersConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSMTPServersConnectionInternalServerError creates a GetSMTPServersConnectionInternalServerError with default headers values
func NewGetSMTPServersConnectionInternalServerError() *GetSMTPServersConnectionInternalServerError {
	return &GetSMTPServersConnectionInternalServerError{}
}

/* GetSMTPServersConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetSMTPServersConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSMTPServersConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-smtp-servers-connection][%d] getSmtpServersConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSMTPServersConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSMTPServersConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
