// Code generated by go-swagger; DO NOT EDIT.

package vm_placement_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVMPlacementGroupsReader is a Reader for the GetVMPlacementGroups structure.
type GetVMPlacementGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMPlacementGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMPlacementGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVMPlacementGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVMPlacementGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVMPlacementGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVMPlacementGroupsOK creates a GetVMPlacementGroupsOK with default headers values
func NewGetVMPlacementGroupsOK() *GetVMPlacementGroupsOK {
	return &GetVMPlacementGroupsOK{}
}

/* GetVMPlacementGroupsOK describes a response with status code 200, with default header values.

GetVMPlacementGroupsOK get Vm placement groups o k
*/
type GetVMPlacementGroupsOK struct {
	XTowerRequestID string

	Payload []*models.VMPlacementGroup
}

func (o *GetVMPlacementGroupsOK) Error() string {
	return fmt.Sprintf("[POST /get-vm-placement-groups][%d] getVmPlacementGroupsOK  %+v", 200, o.Payload)
}
func (o *GetVMPlacementGroupsOK) GetPayload() []*models.VMPlacementGroup {
	return o.Payload
}

func (o *GetVMPlacementGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMPlacementGroupsBadRequest creates a GetVMPlacementGroupsBadRequest with default headers values
func NewGetVMPlacementGroupsBadRequest() *GetVMPlacementGroupsBadRequest {
	return &GetVMPlacementGroupsBadRequest{}
}

/* GetVMPlacementGroupsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVMPlacementGroupsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMPlacementGroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-vm-placement-groups][%d] getVmPlacementGroupsBadRequest  %+v", 400, o.Payload)
}
func (o *GetVMPlacementGroupsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMPlacementGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMPlacementGroupsNotFound creates a GetVMPlacementGroupsNotFound with default headers values
func NewGetVMPlacementGroupsNotFound() *GetVMPlacementGroupsNotFound {
	return &GetVMPlacementGroupsNotFound{}
}

/* GetVMPlacementGroupsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVMPlacementGroupsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMPlacementGroupsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-vm-placement-groups][%d] getVmPlacementGroupsNotFound  %+v", 404, o.Payload)
}
func (o *GetVMPlacementGroupsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMPlacementGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMPlacementGroupsInternalServerError creates a GetVMPlacementGroupsInternalServerError with default headers values
func NewGetVMPlacementGroupsInternalServerError() *GetVMPlacementGroupsInternalServerError {
	return &GetVMPlacementGroupsInternalServerError{}
}

/* GetVMPlacementGroupsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVMPlacementGroupsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMPlacementGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-vm-placement-groups][%d] getVmPlacementGroupsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVMPlacementGroupsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMPlacementGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
