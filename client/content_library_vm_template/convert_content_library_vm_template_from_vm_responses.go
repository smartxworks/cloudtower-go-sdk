// Code generated by go-swagger; DO NOT EDIT.

package content_library_vm_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// ConvertContentLibraryVMTemplateFromVMReader is a Reader for the ConvertContentLibraryVMTemplateFromVM structure.
type ConvertContentLibraryVMTemplateFromVMReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConvertContentLibraryVMTemplateFromVMReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConvertContentLibraryVMTemplateFromVMOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewConvertContentLibraryVMTemplateFromVMBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewConvertContentLibraryVMTemplateFromVMNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewConvertContentLibraryVMTemplateFromVMInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewConvertContentLibraryVMTemplateFromVMOK creates a ConvertContentLibraryVMTemplateFromVMOK with default headers values
func NewConvertContentLibraryVMTemplateFromVMOK() *ConvertContentLibraryVMTemplateFromVMOK {
	return &ConvertContentLibraryVMTemplateFromVMOK{}
}

/* ConvertContentLibraryVMTemplateFromVMOK describes a response with status code 200, with default header values.

ConvertContentLibraryVMTemplateFromVMOK convert content library Vm template from Vm o k
*/
type ConvertContentLibraryVMTemplateFromVMOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskContentLibraryVMTemplate
}

func (o *ConvertContentLibraryVMTemplateFromVMOK) Error() string {
	return fmt.Sprintf("[POST /convert-content-library-vm-template-from-vm][%d] convertContentLibraryVmTemplateFromVmOK  %+v", 200, o.Payload)
}
func (o *ConvertContentLibraryVMTemplateFromVMOK) GetPayload() []*models.WithTaskContentLibraryVMTemplate {
	return o.Payload
}

func (o *ConvertContentLibraryVMTemplateFromVMOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConvertContentLibraryVMTemplateFromVMBadRequest creates a ConvertContentLibraryVMTemplateFromVMBadRequest with default headers values
func NewConvertContentLibraryVMTemplateFromVMBadRequest() *ConvertContentLibraryVMTemplateFromVMBadRequest {
	return &ConvertContentLibraryVMTemplateFromVMBadRequest{}
}

/* ConvertContentLibraryVMTemplateFromVMBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ConvertContentLibraryVMTemplateFromVMBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *ConvertContentLibraryVMTemplateFromVMBadRequest) Error() string {
	return fmt.Sprintf("[POST /convert-content-library-vm-template-from-vm][%d] convertContentLibraryVmTemplateFromVmBadRequest  %+v", 400, o.Payload)
}
func (o *ConvertContentLibraryVMTemplateFromVMBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *ConvertContentLibraryVMTemplateFromVMBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConvertContentLibraryVMTemplateFromVMNotFound creates a ConvertContentLibraryVMTemplateFromVMNotFound with default headers values
func NewConvertContentLibraryVMTemplateFromVMNotFound() *ConvertContentLibraryVMTemplateFromVMNotFound {
	return &ConvertContentLibraryVMTemplateFromVMNotFound{}
}

/* ConvertContentLibraryVMTemplateFromVMNotFound describes a response with status code 404, with default header values.

Not found
*/
type ConvertContentLibraryVMTemplateFromVMNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *ConvertContentLibraryVMTemplateFromVMNotFound) Error() string {
	return fmt.Sprintf("[POST /convert-content-library-vm-template-from-vm][%d] convertContentLibraryVmTemplateFromVmNotFound  %+v", 404, o.Payload)
}
func (o *ConvertContentLibraryVMTemplateFromVMNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *ConvertContentLibraryVMTemplateFromVMNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConvertContentLibraryVMTemplateFromVMInternalServerError creates a ConvertContentLibraryVMTemplateFromVMInternalServerError with default headers values
func NewConvertContentLibraryVMTemplateFromVMInternalServerError() *ConvertContentLibraryVMTemplateFromVMInternalServerError {
	return &ConvertContentLibraryVMTemplateFromVMInternalServerError{}
}

/* ConvertContentLibraryVMTemplateFromVMInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type ConvertContentLibraryVMTemplateFromVMInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *ConvertContentLibraryVMTemplateFromVMInternalServerError) Error() string {
	return fmt.Sprintf("[POST /convert-content-library-vm-template-from-vm][%d] convertContentLibraryVmTemplateFromVmInternalServerError  %+v", 500, o.Payload)
}
func (o *ConvertContentLibraryVMTemplateFromVMInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *ConvertContentLibraryVMTemplateFromVMInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
