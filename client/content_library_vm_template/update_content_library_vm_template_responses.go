// Code generated by go-swagger; DO NOT EDIT.

package content_library_vm_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpdateContentLibraryVMTemplateReader is a Reader for the UpdateContentLibraryVMTemplate structure.
type UpdateContentLibraryVMTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateContentLibraryVMTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateContentLibraryVMTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewUpdateContentLibraryVMTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpdateContentLibraryVMTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpdateContentLibraryVMTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateContentLibraryVMTemplateOK creates a UpdateContentLibraryVMTemplateOK with default headers values
func NewUpdateContentLibraryVMTemplateOK() *UpdateContentLibraryVMTemplateOK {
	return &UpdateContentLibraryVMTemplateOK{}
}

/* UpdateContentLibraryVMTemplateOK describes a response with status code 200, with default header values.

UpdateContentLibraryVMTemplateOK update content library Vm template o k
*/
type UpdateContentLibraryVMTemplateOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskContentLibraryVMTemplate
}

func (o *UpdateContentLibraryVMTemplateOK) Error() string {
	return fmt.Sprintf("[POST /update-content-library-vm-template][%d] updateContentLibraryVmTemplateOK  %+v", 200, o.Payload)
}
func (o *UpdateContentLibraryVMTemplateOK) GetPayload() []*models.WithTaskContentLibraryVMTemplate {
	return o.Payload
}

func (o *UpdateContentLibraryVMTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContentLibraryVMTemplateBadRequest creates a UpdateContentLibraryVMTemplateBadRequest with default headers values
func NewUpdateContentLibraryVMTemplateBadRequest() *UpdateContentLibraryVMTemplateBadRequest {
	return &UpdateContentLibraryVMTemplateBadRequest{}
}

/* UpdateContentLibraryVMTemplateBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateContentLibraryVMTemplateBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateContentLibraryVMTemplateBadRequest) Error() string {
	return fmt.Sprintf("[POST /update-content-library-vm-template][%d] updateContentLibraryVmTemplateBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateContentLibraryVMTemplateBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateContentLibraryVMTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContentLibraryVMTemplateNotFound creates a UpdateContentLibraryVMTemplateNotFound with default headers values
func NewUpdateContentLibraryVMTemplateNotFound() *UpdateContentLibraryVMTemplateNotFound {
	return &UpdateContentLibraryVMTemplateNotFound{}
}

/* UpdateContentLibraryVMTemplateNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateContentLibraryVMTemplateNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateContentLibraryVMTemplateNotFound) Error() string {
	return fmt.Sprintf("[POST /update-content-library-vm-template][%d] updateContentLibraryVmTemplateNotFound  %+v", 404, o.Payload)
}
func (o *UpdateContentLibraryVMTemplateNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateContentLibraryVMTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContentLibraryVMTemplateInternalServerError creates a UpdateContentLibraryVMTemplateInternalServerError with default headers values
func NewUpdateContentLibraryVMTemplateInternalServerError() *UpdateContentLibraryVMTemplateInternalServerError {
	return &UpdateContentLibraryVMTemplateInternalServerError{}
}

/* UpdateContentLibraryVMTemplateInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateContentLibraryVMTemplateInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateContentLibraryVMTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update-content-library-vm-template][%d] updateContentLibraryVmTemplateInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateContentLibraryVMTemplateInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateContentLibraryVMTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
