// Code generated by go-swagger; DO NOT EDIT.

package content_library_vm_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DistributeContentLibraryVmtemplateClustersReader is a Reader for the DistributeContentLibraryVmtemplateClusters structure.
type DistributeContentLibraryVmtemplateClustersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DistributeContentLibraryVmtemplateClustersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDistributeContentLibraryVmtemplateClustersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDistributeContentLibraryVmtemplateClustersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDistributeContentLibraryVmtemplateClustersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDistributeContentLibraryVmtemplateClustersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDistributeContentLibraryVmtemplateClustersOK creates a DistributeContentLibraryVmtemplateClustersOK with default headers values
func NewDistributeContentLibraryVmtemplateClustersOK() *DistributeContentLibraryVmtemplateClustersOK {
	return &DistributeContentLibraryVmtemplateClustersOK{}
}

/* DistributeContentLibraryVmtemplateClustersOK describes a response with status code 200, with default header values.

DistributeContentLibraryVmtemplateClustersOK distribute content library vmtemplate clusters o k
*/
type DistributeContentLibraryVmtemplateClustersOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskContentLibraryVMTemplate
}

func (o *DistributeContentLibraryVmtemplateClustersOK) Error() string {
	return fmt.Sprintf("[POST /distribute-content-library-vm-template-clusters][%d] distributeContentLibraryVmtemplateClustersOK  %+v", 200, o.Payload)
}
func (o *DistributeContentLibraryVmtemplateClustersOK) GetPayload() []*models.WithTaskContentLibraryVMTemplate {
	return o.Payload
}

func (o *DistributeContentLibraryVmtemplateClustersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistributeContentLibraryVmtemplateClustersBadRequest creates a DistributeContentLibraryVmtemplateClustersBadRequest with default headers values
func NewDistributeContentLibraryVmtemplateClustersBadRequest() *DistributeContentLibraryVmtemplateClustersBadRequest {
	return &DistributeContentLibraryVmtemplateClustersBadRequest{}
}

/* DistributeContentLibraryVmtemplateClustersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DistributeContentLibraryVmtemplateClustersBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DistributeContentLibraryVmtemplateClustersBadRequest) Error() string {
	return fmt.Sprintf("[POST /distribute-content-library-vm-template-clusters][%d] distributeContentLibraryVmtemplateClustersBadRequest  %+v", 400, o.Payload)
}
func (o *DistributeContentLibraryVmtemplateClustersBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DistributeContentLibraryVmtemplateClustersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistributeContentLibraryVmtemplateClustersNotFound creates a DistributeContentLibraryVmtemplateClustersNotFound with default headers values
func NewDistributeContentLibraryVmtemplateClustersNotFound() *DistributeContentLibraryVmtemplateClustersNotFound {
	return &DistributeContentLibraryVmtemplateClustersNotFound{}
}

/* DistributeContentLibraryVmtemplateClustersNotFound describes a response with status code 404, with default header values.

Not found
*/
type DistributeContentLibraryVmtemplateClustersNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DistributeContentLibraryVmtemplateClustersNotFound) Error() string {
	return fmt.Sprintf("[POST /distribute-content-library-vm-template-clusters][%d] distributeContentLibraryVmtemplateClustersNotFound  %+v", 404, o.Payload)
}
func (o *DistributeContentLibraryVmtemplateClustersNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DistributeContentLibraryVmtemplateClustersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistributeContentLibraryVmtemplateClustersInternalServerError creates a DistributeContentLibraryVmtemplateClustersInternalServerError with default headers values
func NewDistributeContentLibraryVmtemplateClustersInternalServerError() *DistributeContentLibraryVmtemplateClustersInternalServerError {
	return &DistributeContentLibraryVmtemplateClustersInternalServerError{}
}

/* DistributeContentLibraryVmtemplateClustersInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DistributeContentLibraryVmtemplateClustersInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DistributeContentLibraryVmtemplateClustersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /distribute-content-library-vm-template-clusters][%d] distributeContentLibraryVmtemplateClustersInternalServerError  %+v", 500, o.Payload)
}
func (o *DistributeContentLibraryVmtemplateClustersInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DistributeContentLibraryVmtemplateClustersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
