// Code generated by go-swagger; DO NOT EDIT.

package user_role_next

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetUserRoleNextsReader is a Reader for the GetUserRoleNexts structure.
type GetUserRoleNextsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserRoleNextsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserRoleNextsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetUserRoleNextsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetUserRoleNextsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetUserRoleNextsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserRoleNextsOK creates a GetUserRoleNextsOK with default headers values
func NewGetUserRoleNextsOK() *GetUserRoleNextsOK {
	return &GetUserRoleNextsOK{}
}

/* GetUserRoleNextsOK describes a response with status code 200, with default header values.

GetUserRoleNextsOK get user role nexts o k
*/
type GetUserRoleNextsOK struct {
	XTowerRequestID string

	Payload []*models.UserRoleNext
}

func (o *GetUserRoleNextsOK) Error() string {
	return fmt.Sprintf("[POST /get-user-role-nexts][%d] getUserRoleNextsOK  %+v", 200, o.Payload)
}
func (o *GetUserRoleNextsOK) GetPayload() []*models.UserRoleNext {
	return o.Payload
}

func (o *GetUserRoleNextsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoleNextsBadRequest creates a GetUserRoleNextsBadRequest with default headers values
func NewGetUserRoleNextsBadRequest() *GetUserRoleNextsBadRequest {
	return &GetUserRoleNextsBadRequest{}
}

/* GetUserRoleNextsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUserRoleNextsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetUserRoleNextsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-user-role-nexts][%d] getUserRoleNextsBadRequest  %+v", 400, o.Payload)
}
func (o *GetUserRoleNextsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoleNextsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoleNextsNotFound creates a GetUserRoleNextsNotFound with default headers values
func NewGetUserRoleNextsNotFound() *GetUserRoleNextsNotFound {
	return &GetUserRoleNextsNotFound{}
}

/* GetUserRoleNextsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetUserRoleNextsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetUserRoleNextsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-user-role-nexts][%d] getUserRoleNextsNotFound  %+v", 404, o.Payload)
}
func (o *GetUserRoleNextsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoleNextsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoleNextsInternalServerError creates a GetUserRoleNextsInternalServerError with default headers values
func NewGetUserRoleNextsInternalServerError() *GetUserRoleNextsInternalServerError {
	return &GetUserRoleNextsInternalServerError{}
}

/* GetUserRoleNextsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetUserRoleNextsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetUserRoleNextsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-user-role-nexts][%d] getUserRoleNextsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetUserRoleNextsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoleNextsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
