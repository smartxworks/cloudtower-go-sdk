// Code generated by go-swagger; DO NOT EDIT.

package user_role_next

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetUserRoleNextsConnectionReader is a Reader for the GetUserRoleNextsConnection structure.
type GetUserRoleNextsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserRoleNextsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserRoleNextsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetUserRoleNextsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetUserRoleNextsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetUserRoleNextsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserRoleNextsConnectionOK creates a GetUserRoleNextsConnectionOK with default headers values
func NewGetUserRoleNextsConnectionOK() *GetUserRoleNextsConnectionOK {
	return &GetUserRoleNextsConnectionOK{}
}

/* GetUserRoleNextsConnectionOK describes a response with status code 200, with default header values.

GetUserRoleNextsConnectionOK get user role nexts connection o k
*/
type GetUserRoleNextsConnectionOK struct {
	XTowerRequestID string

	Payload *models.UserRoleNextConnection
}

func (o *GetUserRoleNextsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-user-role-nexts-connection][%d] getUserRoleNextsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetUserRoleNextsConnectionOK) GetPayload() *models.UserRoleNextConnection {
	return o.Payload
}

func (o *GetUserRoleNextsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.UserRoleNextConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoleNextsConnectionBadRequest creates a GetUserRoleNextsConnectionBadRequest with default headers values
func NewGetUserRoleNextsConnectionBadRequest() *GetUserRoleNextsConnectionBadRequest {
	return &GetUserRoleNextsConnectionBadRequest{}
}

/* GetUserRoleNextsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUserRoleNextsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetUserRoleNextsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-user-role-nexts-connection][%d] getUserRoleNextsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetUserRoleNextsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoleNextsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoleNextsConnectionNotFound creates a GetUserRoleNextsConnectionNotFound with default headers values
func NewGetUserRoleNextsConnectionNotFound() *GetUserRoleNextsConnectionNotFound {
	return &GetUserRoleNextsConnectionNotFound{}
}

/* GetUserRoleNextsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetUserRoleNextsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetUserRoleNextsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-user-role-nexts-connection][%d] getUserRoleNextsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetUserRoleNextsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoleNextsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRoleNextsConnectionInternalServerError creates a GetUserRoleNextsConnectionInternalServerError with default headers values
func NewGetUserRoleNextsConnectionInternalServerError() *GetUserRoleNextsConnectionInternalServerError {
	return &GetUserRoleNextsConnectionInternalServerError{}
}

/* GetUserRoleNextsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetUserRoleNextsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetUserRoleNextsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-user-role-nexts-connection][%d] getUserRoleNextsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetUserRoleNextsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetUserRoleNextsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
