// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeleteVirtualPrivateCloudReader is a Reader for the DeleteVirtualPrivateCloud structure.
type DeleteVirtualPrivateCloudReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVirtualPrivateCloudReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVirtualPrivateCloudOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeleteVirtualPrivateCloudBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeleteVirtualPrivateCloudNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeleteVirtualPrivateCloudInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteVirtualPrivateCloudOK creates a DeleteVirtualPrivateCloudOK with default headers values
func NewDeleteVirtualPrivateCloudOK() *DeleteVirtualPrivateCloudOK {
	return &DeleteVirtualPrivateCloudOK{}
}

/* DeleteVirtualPrivateCloudOK describes a response with status code 200, with default header values.

DeleteVirtualPrivateCloudOK delete virtual private cloud o k
*/
type DeleteVirtualPrivateCloudOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDeleteVirtualPrivateCloud
}

func (o *DeleteVirtualPrivateCloudOK) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud][%d] deleteVirtualPrivateCloudOK  %+v", 200, o.Payload)
}
func (o *DeleteVirtualPrivateCloudOK) GetPayload() []*models.WithTaskDeleteVirtualPrivateCloud {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualPrivateCloudBadRequest creates a DeleteVirtualPrivateCloudBadRequest with default headers values
func NewDeleteVirtualPrivateCloudBadRequest() *DeleteVirtualPrivateCloudBadRequest {
	return &DeleteVirtualPrivateCloudBadRequest{}
}

/* DeleteVirtualPrivateCloudBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteVirtualPrivateCloudBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteVirtualPrivateCloudBadRequest) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud][%d] deleteVirtualPrivateCloudBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteVirtualPrivateCloudBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualPrivateCloudNotFound creates a DeleteVirtualPrivateCloudNotFound with default headers values
func NewDeleteVirtualPrivateCloudNotFound() *DeleteVirtualPrivateCloudNotFound {
	return &DeleteVirtualPrivateCloudNotFound{}
}

/* DeleteVirtualPrivateCloudNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteVirtualPrivateCloudNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteVirtualPrivateCloudNotFound) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud][%d] deleteVirtualPrivateCloudNotFound  %+v", 404, o.Payload)
}
func (o *DeleteVirtualPrivateCloudNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualPrivateCloudInternalServerError creates a DeleteVirtualPrivateCloudInternalServerError with default headers values
func NewDeleteVirtualPrivateCloudInternalServerError() *DeleteVirtualPrivateCloudInternalServerError {
	return &DeleteVirtualPrivateCloudInternalServerError{}
}

/* DeleteVirtualPrivateCloudInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteVirtualPrivateCloudInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteVirtualPrivateCloudInternalServerError) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud][%d] deleteVirtualPrivateCloudInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteVirtualPrivateCloudInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
