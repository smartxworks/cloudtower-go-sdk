// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudsConnectionReader is a Reader for the GetVirtualPrivateCloudsConnection structure.
type GetVirtualPrivateCloudsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudsConnectionOK creates a GetVirtualPrivateCloudsConnectionOK with default headers values
func NewGetVirtualPrivateCloudsConnectionOK() *GetVirtualPrivateCloudsConnectionOK {
	return &GetVirtualPrivateCloudsConnectionOK{}
}

/* GetVirtualPrivateCloudsConnectionOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudsConnectionOK get virtual private clouds connection o k
*/
type GetVirtualPrivateCloudsConnectionOK struct {
	XTowerRequestID string

	Payload *models.VirtualPrivateCloudConnection
}

func (o *GetVirtualPrivateCloudsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-clouds-connection][%d] getVirtualPrivateCloudsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudsConnectionOK) GetPayload() *models.VirtualPrivateCloudConnection {
	return o.Payload
}

func (o *GetVirtualPrivateCloudsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.VirtualPrivateCloudConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudsConnectionBadRequest creates a GetVirtualPrivateCloudsConnectionBadRequest with default headers values
func NewGetVirtualPrivateCloudsConnectionBadRequest() *GetVirtualPrivateCloudsConnectionBadRequest {
	return &GetVirtualPrivateCloudsConnectionBadRequest{}
}

/* GetVirtualPrivateCloudsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-clouds-connection][%d] getVirtualPrivateCloudsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudsConnectionNotFound creates a GetVirtualPrivateCloudsConnectionNotFound with default headers values
func NewGetVirtualPrivateCloudsConnectionNotFound() *GetVirtualPrivateCloudsConnectionNotFound {
	return &GetVirtualPrivateCloudsConnectionNotFound{}
}

/* GetVirtualPrivateCloudsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-clouds-connection][%d] getVirtualPrivateCloudsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudsConnectionInternalServerError creates a GetVirtualPrivateCloudsConnectionInternalServerError with default headers values
func NewGetVirtualPrivateCloudsConnectionInternalServerError() *GetVirtualPrivateCloudsConnectionInternalServerError {
	return &GetVirtualPrivateCloudsConnectionInternalServerError{}
}

/* GetVirtualPrivateCloudsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-clouds-connection][%d] getVirtualPrivateCloudsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
