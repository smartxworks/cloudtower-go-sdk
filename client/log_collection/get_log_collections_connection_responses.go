// Code generated by go-swagger; DO NOT EDIT.

package log_collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetLogCollectionsConnectionReader is a Reader for the GetLogCollectionsConnection structure.
type GetLogCollectionsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogCollectionsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLogCollectionsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetLogCollectionsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetLogCollectionsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetLogCollectionsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLogCollectionsConnectionOK creates a GetLogCollectionsConnectionOK with default headers values
func NewGetLogCollectionsConnectionOK() *GetLogCollectionsConnectionOK {
	return &GetLogCollectionsConnectionOK{}
}

/* GetLogCollectionsConnectionOK describes a response with status code 200, with default header values.

GetLogCollectionsConnectionOK get log collections connection o k
*/
type GetLogCollectionsConnectionOK struct {
	XTowerRequestID string

	Payload *models.LogCollectionConnection
}

func (o *GetLogCollectionsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-log-collections-connection][%d] getLogCollectionsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetLogCollectionsConnectionOK) GetPayload() *models.LogCollectionConnection {
	return o.Payload
}

func (o *GetLogCollectionsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.LogCollectionConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogCollectionsConnectionBadRequest creates a GetLogCollectionsConnectionBadRequest with default headers values
func NewGetLogCollectionsConnectionBadRequest() *GetLogCollectionsConnectionBadRequest {
	return &GetLogCollectionsConnectionBadRequest{}
}

/* GetLogCollectionsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetLogCollectionsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetLogCollectionsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-log-collections-connection][%d] getLogCollectionsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetLogCollectionsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLogCollectionsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogCollectionsConnectionNotFound creates a GetLogCollectionsConnectionNotFound with default headers values
func NewGetLogCollectionsConnectionNotFound() *GetLogCollectionsConnectionNotFound {
	return &GetLogCollectionsConnectionNotFound{}
}

/* GetLogCollectionsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetLogCollectionsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetLogCollectionsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-log-collections-connection][%d] getLogCollectionsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetLogCollectionsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLogCollectionsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogCollectionsConnectionInternalServerError creates a GetLogCollectionsConnectionInternalServerError with default headers values
func NewGetLogCollectionsConnectionInternalServerError() *GetLogCollectionsConnectionInternalServerError {
	return &GetLogCollectionsConnectionInternalServerError{}
}

/* GetLogCollectionsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetLogCollectionsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetLogCollectionsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-log-collections-connection][%d] getLogCollectionsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetLogCollectionsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetLogCollectionsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
