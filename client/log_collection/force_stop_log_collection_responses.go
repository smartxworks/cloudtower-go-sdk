// Code generated by go-swagger; DO NOT EDIT.

package log_collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// ForceStopLogCollectionReader is a Reader for the ForceStopLogCollection structure.
type ForceStopLogCollectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ForceStopLogCollectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewForceStopLogCollectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewForceStopLogCollectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewForceStopLogCollectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewForceStopLogCollectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewForceStopLogCollectionOK creates a ForceStopLogCollectionOK with default headers values
func NewForceStopLogCollectionOK() *ForceStopLogCollectionOK {
	return &ForceStopLogCollectionOK{}
}

/* ForceStopLogCollectionOK describes a response with status code 200, with default header values.

ForceStopLogCollectionOK force stop log collection o k
*/
type ForceStopLogCollectionOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskLogCollection
}

func (o *ForceStopLogCollectionOK) Error() string {
	return fmt.Sprintf("[POST /force-stop-log-collection][%d] forceStopLogCollectionOK  %+v", 200, o.Payload)
}
func (o *ForceStopLogCollectionOK) GetPayload() []*models.WithTaskLogCollection {
	return o.Payload
}

func (o *ForceStopLogCollectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForceStopLogCollectionBadRequest creates a ForceStopLogCollectionBadRequest with default headers values
func NewForceStopLogCollectionBadRequest() *ForceStopLogCollectionBadRequest {
	return &ForceStopLogCollectionBadRequest{}
}

/* ForceStopLogCollectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ForceStopLogCollectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *ForceStopLogCollectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /force-stop-log-collection][%d] forceStopLogCollectionBadRequest  %+v", 400, o.Payload)
}
func (o *ForceStopLogCollectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *ForceStopLogCollectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForceStopLogCollectionNotFound creates a ForceStopLogCollectionNotFound with default headers values
func NewForceStopLogCollectionNotFound() *ForceStopLogCollectionNotFound {
	return &ForceStopLogCollectionNotFound{}
}

/* ForceStopLogCollectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type ForceStopLogCollectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *ForceStopLogCollectionNotFound) Error() string {
	return fmt.Sprintf("[POST /force-stop-log-collection][%d] forceStopLogCollectionNotFound  %+v", 404, o.Payload)
}
func (o *ForceStopLogCollectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *ForceStopLogCollectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForceStopLogCollectionInternalServerError creates a ForceStopLogCollectionInternalServerError with default headers values
func NewForceStopLogCollectionInternalServerError() *ForceStopLogCollectionInternalServerError {
	return &ForceStopLogCollectionInternalServerError{}
}

/* ForceStopLogCollectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type ForceStopLogCollectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *ForceStopLogCollectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /force-stop-log-collection][%d] forceStopLogCollectionInternalServerError  %+v", 500, o.Payload)
}
func (o *ForceStopLogCollectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *ForceStopLogCollectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
