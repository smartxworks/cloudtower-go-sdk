// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_subnet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudSubnetsReader is a Reader for the GetVirtualPrivateCloudSubnets structure.
type GetVirtualPrivateCloudSubnetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudSubnetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudSubnetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudSubnetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudSubnetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudSubnetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudSubnetsOK creates a GetVirtualPrivateCloudSubnetsOK with default headers values
func NewGetVirtualPrivateCloudSubnetsOK() *GetVirtualPrivateCloudSubnetsOK {
	return &GetVirtualPrivateCloudSubnetsOK{}
}

/* GetVirtualPrivateCloudSubnetsOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudSubnetsOK get virtual private cloud subnets o k
*/
type GetVirtualPrivateCloudSubnetsOK struct {
	XTowerRequestID string

	Payload []*models.VirtualPrivateCloudSubnet
}

func (o *GetVirtualPrivateCloudSubnetsOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-subnets][%d] getVirtualPrivateCloudSubnetsOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudSubnetsOK) GetPayload() []*models.VirtualPrivateCloudSubnet {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSubnetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudSubnetsBadRequest creates a GetVirtualPrivateCloudSubnetsBadRequest with default headers values
func NewGetVirtualPrivateCloudSubnetsBadRequest() *GetVirtualPrivateCloudSubnetsBadRequest {
	return &GetVirtualPrivateCloudSubnetsBadRequest{}
}

/* GetVirtualPrivateCloudSubnetsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudSubnetsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudSubnetsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-subnets][%d] getVirtualPrivateCloudSubnetsBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudSubnetsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSubnetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudSubnetsNotFound creates a GetVirtualPrivateCloudSubnetsNotFound with default headers values
func NewGetVirtualPrivateCloudSubnetsNotFound() *GetVirtualPrivateCloudSubnetsNotFound {
	return &GetVirtualPrivateCloudSubnetsNotFound{}
}

/* GetVirtualPrivateCloudSubnetsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudSubnetsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudSubnetsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-subnets][%d] getVirtualPrivateCloudSubnetsNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudSubnetsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSubnetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudSubnetsInternalServerError creates a GetVirtualPrivateCloudSubnetsInternalServerError with default headers values
func NewGetVirtualPrivateCloudSubnetsInternalServerError() *GetVirtualPrivateCloudSubnetsInternalServerError {
	return &GetVirtualPrivateCloudSubnetsInternalServerError{}
}

/* GetVirtualPrivateCloudSubnetsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudSubnetsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudSubnetsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-subnets][%d] getVirtualPrivateCloudSubnetsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudSubnetsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSubnetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
