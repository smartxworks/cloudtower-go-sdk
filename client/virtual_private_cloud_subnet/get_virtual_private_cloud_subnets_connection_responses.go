// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_subnet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudSubnetsConnectionReader is a Reader for the GetVirtualPrivateCloudSubnetsConnection structure.
type GetVirtualPrivateCloudSubnetsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudSubnetsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudSubnetsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudSubnetsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudSubnetsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudSubnetsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudSubnetsConnectionOK creates a GetVirtualPrivateCloudSubnetsConnectionOK with default headers values
func NewGetVirtualPrivateCloudSubnetsConnectionOK() *GetVirtualPrivateCloudSubnetsConnectionOK {
	return &GetVirtualPrivateCloudSubnetsConnectionOK{}
}

/* GetVirtualPrivateCloudSubnetsConnectionOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudSubnetsConnectionOK get virtual private cloud subnets connection o k
*/
type GetVirtualPrivateCloudSubnetsConnectionOK struct {
	XTowerRequestID string

	Payload *models.VirtualPrivateCloudSubnetConnection
}

func (o *GetVirtualPrivateCloudSubnetsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-subnets-connection][%d] getVirtualPrivateCloudSubnetsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudSubnetsConnectionOK) GetPayload() *models.VirtualPrivateCloudSubnetConnection {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSubnetsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.VirtualPrivateCloudSubnetConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudSubnetsConnectionBadRequest creates a GetVirtualPrivateCloudSubnetsConnectionBadRequest with default headers values
func NewGetVirtualPrivateCloudSubnetsConnectionBadRequest() *GetVirtualPrivateCloudSubnetsConnectionBadRequest {
	return &GetVirtualPrivateCloudSubnetsConnectionBadRequest{}
}

/* GetVirtualPrivateCloudSubnetsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudSubnetsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudSubnetsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-subnets-connection][%d] getVirtualPrivateCloudSubnetsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudSubnetsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSubnetsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudSubnetsConnectionNotFound creates a GetVirtualPrivateCloudSubnetsConnectionNotFound with default headers values
func NewGetVirtualPrivateCloudSubnetsConnectionNotFound() *GetVirtualPrivateCloudSubnetsConnectionNotFound {
	return &GetVirtualPrivateCloudSubnetsConnectionNotFound{}
}

/* GetVirtualPrivateCloudSubnetsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudSubnetsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudSubnetsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-subnets-connection][%d] getVirtualPrivateCloudSubnetsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudSubnetsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSubnetsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudSubnetsConnectionInternalServerError creates a GetVirtualPrivateCloudSubnetsConnectionInternalServerError with default headers values
func NewGetVirtualPrivateCloudSubnetsConnectionInternalServerError() *GetVirtualPrivateCloudSubnetsConnectionInternalServerError {
	return &GetVirtualPrivateCloudSubnetsConnectionInternalServerError{}
}

/* GetVirtualPrivateCloudSubnetsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudSubnetsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudSubnetsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-subnets-connection][%d] getVirtualPrivateCloudSubnetsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudSubnetsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSubnetsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
