// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetApplicationsConnectionReader is a Reader for the GetApplicationsConnection structure.
type GetApplicationsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetApplicationsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetApplicationsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetApplicationsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetApplicationsConnectionOK creates a GetApplicationsConnectionOK with default headers values
func NewGetApplicationsConnectionOK() *GetApplicationsConnectionOK {
	return &GetApplicationsConnectionOK{}
}

/* GetApplicationsConnectionOK describes a response with status code 200, with default header values.

GetApplicationsConnectionOK get applications connection o k
*/
type GetApplicationsConnectionOK struct {
	XTowerRequestID string

	Payload *models.ApplicationConnection
}

func (o *GetApplicationsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-applications-connection][%d] getApplicationsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetApplicationsConnectionOK) GetPayload() *models.ApplicationConnection {
	return o.Payload
}

func (o *GetApplicationsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ApplicationConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationsConnectionBadRequest creates a GetApplicationsConnectionBadRequest with default headers values
func NewGetApplicationsConnectionBadRequest() *GetApplicationsConnectionBadRequest {
	return &GetApplicationsConnectionBadRequest{}
}

/* GetApplicationsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetApplicationsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetApplicationsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-applications-connection][%d] getApplicationsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetApplicationsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetApplicationsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationsConnectionNotFound creates a GetApplicationsConnectionNotFound with default headers values
func NewGetApplicationsConnectionNotFound() *GetApplicationsConnectionNotFound {
	return &GetApplicationsConnectionNotFound{}
}

/* GetApplicationsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetApplicationsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetApplicationsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-applications-connection][%d] getApplicationsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetApplicationsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetApplicationsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationsConnectionInternalServerError creates a GetApplicationsConnectionInternalServerError with default headers values
func NewGetApplicationsConnectionInternalServerError() *GetApplicationsConnectionInternalServerError {
	return &GetApplicationsConnectionInternalServerError{}
}

/* GetApplicationsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetApplicationsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetApplicationsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-applications-connection][%d] getApplicationsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetApplicationsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetApplicationsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
