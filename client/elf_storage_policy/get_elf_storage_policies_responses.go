// Code generated by go-swagger; DO NOT EDIT.

package elf_storage_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetElfStoragePoliciesReader is a Reader for the GetElfStoragePolicies structure.
type GetElfStoragePoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetElfStoragePoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetElfStoragePoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetElfStoragePoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetElfStoragePoliciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetElfStoragePoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetElfStoragePoliciesOK creates a GetElfStoragePoliciesOK with default headers values
func NewGetElfStoragePoliciesOK() *GetElfStoragePoliciesOK {
	return &GetElfStoragePoliciesOK{}
}

/* GetElfStoragePoliciesOK describes a response with status code 200, with default header values.

GetElfStoragePoliciesOK get elf storage policies o k
*/
type GetElfStoragePoliciesOK struct {
	XTowerRequestID string

	Payload []*models.ElfStoragePolicy
}

func (o *GetElfStoragePoliciesOK) Error() string {
	return fmt.Sprintf("[POST /get-elf-storage-policies][%d] getElfStoragePoliciesOK  %+v", 200, o.Payload)
}
func (o *GetElfStoragePoliciesOK) GetPayload() []*models.ElfStoragePolicy {
	return o.Payload
}

func (o *GetElfStoragePoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetElfStoragePoliciesBadRequest creates a GetElfStoragePoliciesBadRequest with default headers values
func NewGetElfStoragePoliciesBadRequest() *GetElfStoragePoliciesBadRequest {
	return &GetElfStoragePoliciesBadRequest{}
}

/* GetElfStoragePoliciesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetElfStoragePoliciesBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetElfStoragePoliciesBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-elf-storage-policies][%d] getElfStoragePoliciesBadRequest  %+v", 400, o.Payload)
}
func (o *GetElfStoragePoliciesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetElfStoragePoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetElfStoragePoliciesNotFound creates a GetElfStoragePoliciesNotFound with default headers values
func NewGetElfStoragePoliciesNotFound() *GetElfStoragePoliciesNotFound {
	return &GetElfStoragePoliciesNotFound{}
}

/* GetElfStoragePoliciesNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetElfStoragePoliciesNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetElfStoragePoliciesNotFound) Error() string {
	return fmt.Sprintf("[POST /get-elf-storage-policies][%d] getElfStoragePoliciesNotFound  %+v", 404, o.Payload)
}
func (o *GetElfStoragePoliciesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetElfStoragePoliciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetElfStoragePoliciesInternalServerError creates a GetElfStoragePoliciesInternalServerError with default headers values
func NewGetElfStoragePoliciesInternalServerError() *GetElfStoragePoliciesInternalServerError {
	return &GetElfStoragePoliciesInternalServerError{}
}

/* GetElfStoragePoliciesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetElfStoragePoliciesInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetElfStoragePoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-elf-storage-policies][%d] getElfStoragePoliciesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetElfStoragePoliciesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetElfStoragePoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
