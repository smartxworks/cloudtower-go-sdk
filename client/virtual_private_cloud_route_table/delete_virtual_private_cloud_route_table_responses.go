// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_route_table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeleteVirtualPrivateCloudRouteTableReader is a Reader for the DeleteVirtualPrivateCloudRouteTable structure.
type DeleteVirtualPrivateCloudRouteTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVirtualPrivateCloudRouteTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVirtualPrivateCloudRouteTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeleteVirtualPrivateCloudRouteTableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeleteVirtualPrivateCloudRouteTableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeleteVirtualPrivateCloudRouteTableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteVirtualPrivateCloudRouteTableOK creates a DeleteVirtualPrivateCloudRouteTableOK with default headers values
func NewDeleteVirtualPrivateCloudRouteTableOK() *DeleteVirtualPrivateCloudRouteTableOK {
	return &DeleteVirtualPrivateCloudRouteTableOK{}
}

/* DeleteVirtualPrivateCloudRouteTableOK describes a response with status code 200, with default header values.

DeleteVirtualPrivateCloudRouteTableOK delete virtual private cloud route table o k
*/
type DeleteVirtualPrivateCloudRouteTableOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDeleteVirtualPrivateCloudRouteTable
}

func (o *DeleteVirtualPrivateCloudRouteTableOK) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud-route-table][%d] deleteVirtualPrivateCloudRouteTableOK  %+v", 200, o.Payload)
}
func (o *DeleteVirtualPrivateCloudRouteTableOK) GetPayload() []*models.WithTaskDeleteVirtualPrivateCloudRouteTable {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudRouteTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualPrivateCloudRouteTableBadRequest creates a DeleteVirtualPrivateCloudRouteTableBadRequest with default headers values
func NewDeleteVirtualPrivateCloudRouteTableBadRequest() *DeleteVirtualPrivateCloudRouteTableBadRequest {
	return &DeleteVirtualPrivateCloudRouteTableBadRequest{}
}

/* DeleteVirtualPrivateCloudRouteTableBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteVirtualPrivateCloudRouteTableBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteVirtualPrivateCloudRouteTableBadRequest) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud-route-table][%d] deleteVirtualPrivateCloudRouteTableBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteVirtualPrivateCloudRouteTableBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudRouteTableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualPrivateCloudRouteTableNotFound creates a DeleteVirtualPrivateCloudRouteTableNotFound with default headers values
func NewDeleteVirtualPrivateCloudRouteTableNotFound() *DeleteVirtualPrivateCloudRouteTableNotFound {
	return &DeleteVirtualPrivateCloudRouteTableNotFound{}
}

/* DeleteVirtualPrivateCloudRouteTableNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteVirtualPrivateCloudRouteTableNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteVirtualPrivateCloudRouteTableNotFound) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud-route-table][%d] deleteVirtualPrivateCloudRouteTableNotFound  %+v", 404, o.Payload)
}
func (o *DeleteVirtualPrivateCloudRouteTableNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudRouteTableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualPrivateCloudRouteTableInternalServerError creates a DeleteVirtualPrivateCloudRouteTableInternalServerError with default headers values
func NewDeleteVirtualPrivateCloudRouteTableInternalServerError() *DeleteVirtualPrivateCloudRouteTableInternalServerError {
	return &DeleteVirtualPrivateCloudRouteTableInternalServerError{}
}

/* DeleteVirtualPrivateCloudRouteTableInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteVirtualPrivateCloudRouteTableInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteVirtualPrivateCloudRouteTableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud-route-table][%d] deleteVirtualPrivateCloudRouteTableInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteVirtualPrivateCloudRouteTableInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudRouteTableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
