// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_route_table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudRouteTablesReader is a Reader for the GetVirtualPrivateCloudRouteTables structure.
type GetVirtualPrivateCloudRouteTablesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudRouteTablesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudRouteTablesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudRouteTablesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudRouteTablesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudRouteTablesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudRouteTablesOK creates a GetVirtualPrivateCloudRouteTablesOK with default headers values
func NewGetVirtualPrivateCloudRouteTablesOK() *GetVirtualPrivateCloudRouteTablesOK {
	return &GetVirtualPrivateCloudRouteTablesOK{}
}

/* GetVirtualPrivateCloudRouteTablesOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudRouteTablesOK get virtual private cloud route tables o k
*/
type GetVirtualPrivateCloudRouteTablesOK struct {
	XTowerRequestID string

	Payload []*models.VirtualPrivateCloudRouteTable
}

func (o *GetVirtualPrivateCloudRouteTablesOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-route-tables][%d] getVirtualPrivateCloudRouteTablesOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudRouteTablesOK) GetPayload() []*models.VirtualPrivateCloudRouteTable {
	return o.Payload
}

func (o *GetVirtualPrivateCloudRouteTablesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudRouteTablesBadRequest creates a GetVirtualPrivateCloudRouteTablesBadRequest with default headers values
func NewGetVirtualPrivateCloudRouteTablesBadRequest() *GetVirtualPrivateCloudRouteTablesBadRequest {
	return &GetVirtualPrivateCloudRouteTablesBadRequest{}
}

/* GetVirtualPrivateCloudRouteTablesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudRouteTablesBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudRouteTablesBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-route-tables][%d] getVirtualPrivateCloudRouteTablesBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudRouteTablesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudRouteTablesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudRouteTablesNotFound creates a GetVirtualPrivateCloudRouteTablesNotFound with default headers values
func NewGetVirtualPrivateCloudRouteTablesNotFound() *GetVirtualPrivateCloudRouteTablesNotFound {
	return &GetVirtualPrivateCloudRouteTablesNotFound{}
}

/* GetVirtualPrivateCloudRouteTablesNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudRouteTablesNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudRouteTablesNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-route-tables][%d] getVirtualPrivateCloudRouteTablesNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudRouteTablesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudRouteTablesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudRouteTablesInternalServerError creates a GetVirtualPrivateCloudRouteTablesInternalServerError with default headers values
func NewGetVirtualPrivateCloudRouteTablesInternalServerError() *GetVirtualPrivateCloudRouteTablesInternalServerError {
	return &GetVirtualPrivateCloudRouteTablesInternalServerError{}
}

/* GetVirtualPrivateCloudRouteTablesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudRouteTablesInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudRouteTablesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-route-tables][%d] getVirtualPrivateCloudRouteTablesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudRouteTablesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudRouteTablesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
