// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// CreateTaskReader is a Reader for the CreateTask structure.
type CreateTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewCreateTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewCreateTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewCreateTaskInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateTaskOK creates a CreateTaskOK with default headers values
func NewCreateTaskOK() *CreateTaskOK {
	return &CreateTaskOK{}
}

/* CreateTaskOK describes a response with status code 200, with default header values.

CreateTaskOK create task o k
*/
type CreateTaskOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskTask
}

func (o *CreateTaskOK) Error() string {
	return fmt.Sprintf("[POST /create-task][%d] createTaskOK  %+v", 200, o.Payload)
}
func (o *CreateTaskOK) GetPayload() []*models.WithTaskTask {
	return o.Payload
}

func (o *CreateTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTaskBadRequest creates a CreateTaskBadRequest with default headers values
func NewCreateTaskBadRequest() *CreateTaskBadRequest {
	return &CreateTaskBadRequest{}
}

/* CreateTaskBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateTaskBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateTaskBadRequest) Error() string {
	return fmt.Sprintf("[POST /create-task][%d] createTaskBadRequest  %+v", 400, o.Payload)
}
func (o *CreateTaskBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTaskNotFound creates a CreateTaskNotFound with default headers values
func NewCreateTaskNotFound() *CreateTaskNotFound {
	return &CreateTaskNotFound{}
}

/* CreateTaskNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateTaskNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateTaskNotFound) Error() string {
	return fmt.Sprintf("[POST /create-task][%d] createTaskNotFound  %+v", 404, o.Payload)
}
func (o *CreateTaskNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTaskInternalServerError creates a CreateTaskInternalServerError with default headers values
func NewCreateTaskInternalServerError() *CreateTaskInternalServerError {
	return &CreateTaskInternalServerError{}
}

/* CreateTaskInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateTaskInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateTaskInternalServerError) Error() string {
	return fmt.Sprintf("[POST /create-task][%d] createTaskInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateTaskInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateTaskInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
