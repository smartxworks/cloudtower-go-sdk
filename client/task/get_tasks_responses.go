// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetTasksReader is a Reader for the GetTasks structure.
type GetTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetTasksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTasksOK creates a GetTasksOK with default headers values
func NewGetTasksOK() *GetTasksOK {
	return &GetTasksOK{}
}

/* GetTasksOK describes a response with status code 200, with default header values.

GetTasksOK get tasks o k
*/
type GetTasksOK struct {
	XTowerRequestID string

	Payload []*models.Task
}

func (o *GetTasksOK) Error() string {
	return fmt.Sprintf("[POST /get-tasks][%d] getTasksOK  %+v", 200, o.Payload)
}
func (o *GetTasksOK) GetPayload() []*models.Task {
	return o.Payload
}

func (o *GetTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTasksBadRequest creates a GetTasksBadRequest with default headers values
func NewGetTasksBadRequest() *GetTasksBadRequest {
	return &GetTasksBadRequest{}
}

/* GetTasksBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetTasksBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetTasksBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-tasks][%d] getTasksBadRequest  %+v", 400, o.Payload)
}
func (o *GetTasksBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTasksNotFound creates a GetTasksNotFound with default headers values
func NewGetTasksNotFound() *GetTasksNotFound {
	return &GetTasksNotFound{}
}

/* GetTasksNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetTasksNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetTasksNotFound) Error() string {
	return fmt.Sprintf("[POST /get-tasks][%d] getTasksNotFound  %+v", 404, o.Payload)
}
func (o *GetTasksNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTasksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTasksInternalServerError creates a GetTasksInternalServerError with default headers values
func NewGetTasksInternalServerError() *GetTasksInternalServerError {
	return &GetTasksInternalServerError{}
}

/* GetTasksInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetTasksInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetTasksInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-tasks][%d] getTasksInternalServerError  %+v", 500, o.Payload)
}
func (o *GetTasksInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
