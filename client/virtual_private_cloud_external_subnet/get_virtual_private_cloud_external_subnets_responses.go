// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_external_subnet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudExternalSubnetsReader is a Reader for the GetVirtualPrivateCloudExternalSubnets structure.
type GetVirtualPrivateCloudExternalSubnetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudExternalSubnetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudExternalSubnetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudExternalSubnetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudExternalSubnetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudExternalSubnetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudExternalSubnetsOK creates a GetVirtualPrivateCloudExternalSubnetsOK with default headers values
func NewGetVirtualPrivateCloudExternalSubnetsOK() *GetVirtualPrivateCloudExternalSubnetsOK {
	return &GetVirtualPrivateCloudExternalSubnetsOK{}
}

/* GetVirtualPrivateCloudExternalSubnetsOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudExternalSubnetsOK get virtual private cloud external subnets o k
*/
type GetVirtualPrivateCloudExternalSubnetsOK struct {
	XTowerRequestID string

	Payload []*models.VirtualPrivateCloudExternalSubnet
}

func (o *GetVirtualPrivateCloudExternalSubnetsOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnets][%d] getVirtualPrivateCloudExternalSubnetsOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetsOK) GetPayload() []*models.VirtualPrivateCloudExternalSubnet {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudExternalSubnetsBadRequest creates a GetVirtualPrivateCloudExternalSubnetsBadRequest with default headers values
func NewGetVirtualPrivateCloudExternalSubnetsBadRequest() *GetVirtualPrivateCloudExternalSubnetsBadRequest {
	return &GetVirtualPrivateCloudExternalSubnetsBadRequest{}
}

/* GetVirtualPrivateCloudExternalSubnetsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudExternalSubnetsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudExternalSubnetsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnets][%d] getVirtualPrivateCloudExternalSubnetsBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudExternalSubnetsNotFound creates a GetVirtualPrivateCloudExternalSubnetsNotFound with default headers values
func NewGetVirtualPrivateCloudExternalSubnetsNotFound() *GetVirtualPrivateCloudExternalSubnetsNotFound {
	return &GetVirtualPrivateCloudExternalSubnetsNotFound{}
}

/* GetVirtualPrivateCloudExternalSubnetsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudExternalSubnetsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudExternalSubnetsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnets][%d] getVirtualPrivateCloudExternalSubnetsNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudExternalSubnetsInternalServerError creates a GetVirtualPrivateCloudExternalSubnetsInternalServerError with default headers values
func NewGetVirtualPrivateCloudExternalSubnetsInternalServerError() *GetVirtualPrivateCloudExternalSubnetsInternalServerError {
	return &GetVirtualPrivateCloudExternalSubnetsInternalServerError{}
}

/* GetVirtualPrivateCloudExternalSubnetsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudExternalSubnetsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudExternalSubnetsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnets][%d] getVirtualPrivateCloudExternalSubnetsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
