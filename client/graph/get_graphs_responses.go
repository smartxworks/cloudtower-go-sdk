// Code generated by go-swagger; DO NOT EDIT.

package graph

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetGraphsReader is a Reader for the GetGraphs structure.
type GetGraphsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGraphsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGraphsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetGraphsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetGraphsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetGraphsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGraphsOK creates a GetGraphsOK with default headers values
func NewGetGraphsOK() *GetGraphsOK {
	return &GetGraphsOK{}
}

/* GetGraphsOK describes a response with status code 200, with default header values.

GetGraphsOK get graphs o k
*/
type GetGraphsOK struct {
	XTowerRequestID string

	Payload []*models.Graph
}

func (o *GetGraphsOK) Error() string {
	return fmt.Sprintf("[POST /get-graphs][%d] getGraphsOK  %+v", 200, o.Payload)
}
func (o *GetGraphsOK) GetPayload() []*models.Graph {
	return o.Payload
}

func (o *GetGraphsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGraphsBadRequest creates a GetGraphsBadRequest with default headers values
func NewGetGraphsBadRequest() *GetGraphsBadRequest {
	return &GetGraphsBadRequest{}
}

/* GetGraphsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetGraphsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetGraphsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-graphs][%d] getGraphsBadRequest  %+v", 400, o.Payload)
}
func (o *GetGraphsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGraphsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGraphsNotFound creates a GetGraphsNotFound with default headers values
func NewGetGraphsNotFound() *GetGraphsNotFound {
	return &GetGraphsNotFound{}
}

/* GetGraphsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetGraphsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetGraphsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-graphs][%d] getGraphsNotFound  %+v", 404, o.Payload)
}
func (o *GetGraphsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGraphsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGraphsInternalServerError creates a GetGraphsInternalServerError with default headers values
func NewGetGraphsInternalServerError() *GetGraphsInternalServerError {
	return &GetGraphsInternalServerError{}
}

/* GetGraphsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetGraphsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetGraphsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-graphs][%d] getGraphsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetGraphsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGraphsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
