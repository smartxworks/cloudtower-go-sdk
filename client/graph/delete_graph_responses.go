// Code generated by go-swagger; DO NOT EDIT.

package graph

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeleteGraphReader is a Reader for the DeleteGraph structure.
type DeleteGraphReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGraphReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteGraphOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeleteGraphBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeleteGraphNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeleteGraphInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteGraphOK creates a DeleteGraphOK with default headers values
func NewDeleteGraphOK() *DeleteGraphOK {
	return &DeleteGraphOK{}
}

/* DeleteGraphOK describes a response with status code 200, with default header values.

DeleteGraphOK delete graph o k
*/
type DeleteGraphOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDeleteGraph
}

func (o *DeleteGraphOK) Error() string {
	return fmt.Sprintf("[POST /delete-graph][%d] deleteGraphOK  %+v", 200, o.Payload)
}
func (o *DeleteGraphOK) GetPayload() []*models.WithTaskDeleteGraph {
	return o.Payload
}

func (o *DeleteGraphOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGraphBadRequest creates a DeleteGraphBadRequest with default headers values
func NewDeleteGraphBadRequest() *DeleteGraphBadRequest {
	return &DeleteGraphBadRequest{}
}

/* DeleteGraphBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteGraphBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteGraphBadRequest) Error() string {
	return fmt.Sprintf("[POST /delete-graph][%d] deleteGraphBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteGraphBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGraphBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGraphNotFound creates a DeleteGraphNotFound with default headers values
func NewDeleteGraphNotFound() *DeleteGraphNotFound {
	return &DeleteGraphNotFound{}
}

/* DeleteGraphNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteGraphNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteGraphNotFound) Error() string {
	return fmt.Sprintf("[POST /delete-graph][%d] deleteGraphNotFound  %+v", 404, o.Payload)
}
func (o *DeleteGraphNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGraphNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGraphInternalServerError creates a DeleteGraphInternalServerError with default headers values
func NewDeleteGraphInternalServerError() *DeleteGraphInternalServerError {
	return &DeleteGraphInternalServerError{}
}

/* DeleteGraphInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteGraphInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteGraphInternalServerError) Error() string {
	return fmt.Sprintf("[POST /delete-graph][%d] deleteGraphInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteGraphInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteGraphInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
