// Code generated by go-swagger; DO NOT EDIT.

package report_task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetReportTasksConnectionReader is a Reader for the GetReportTasksConnection structure.
type GetReportTasksConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReportTasksConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReportTasksConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetReportTasksConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetReportTasksConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetReportTasksConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReportTasksConnectionOK creates a GetReportTasksConnectionOK with default headers values
func NewGetReportTasksConnectionOK() *GetReportTasksConnectionOK {
	return &GetReportTasksConnectionOK{}
}

/* GetReportTasksConnectionOK describes a response with status code 200, with default header values.

GetReportTasksConnectionOK get report tasks connection o k
*/
type GetReportTasksConnectionOK struct {
	XTowerRequestID string

	Payload *models.ReportTaskConnection
}

func (o *GetReportTasksConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-report-tasks-connection][%d] getReportTasksConnectionOK  %+v", 200, o.Payload)
}
func (o *GetReportTasksConnectionOK) GetPayload() *models.ReportTaskConnection {
	return o.Payload
}

func (o *GetReportTasksConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ReportTaskConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportTasksConnectionBadRequest creates a GetReportTasksConnectionBadRequest with default headers values
func NewGetReportTasksConnectionBadRequest() *GetReportTasksConnectionBadRequest {
	return &GetReportTasksConnectionBadRequest{}
}

/* GetReportTasksConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetReportTasksConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReportTasksConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-report-tasks-connection][%d] getReportTasksConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetReportTasksConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReportTasksConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportTasksConnectionNotFound creates a GetReportTasksConnectionNotFound with default headers values
func NewGetReportTasksConnectionNotFound() *GetReportTasksConnectionNotFound {
	return &GetReportTasksConnectionNotFound{}
}

/* GetReportTasksConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetReportTasksConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReportTasksConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-report-tasks-connection][%d] getReportTasksConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetReportTasksConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReportTasksConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportTasksConnectionInternalServerError creates a GetReportTasksConnectionInternalServerError with default headers values
func NewGetReportTasksConnectionInternalServerError() *GetReportTasksConnectionInternalServerError {
	return &GetReportTasksConnectionInternalServerError{}
}

/* GetReportTasksConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetReportTasksConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReportTasksConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-report-tasks-connection][%d] getReportTasksConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetReportTasksConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReportTasksConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
