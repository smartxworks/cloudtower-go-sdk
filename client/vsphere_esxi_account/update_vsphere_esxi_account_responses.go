// Code generated by go-swagger; DO NOT EDIT.

package vsphere_esxi_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpdateVsphereEsxiAccountReader is a Reader for the UpdateVsphereEsxiAccount structure.
type UpdateVsphereEsxiAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateVsphereEsxiAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateVsphereEsxiAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 304:
		result := NewUpdateVsphereEsxiAccountNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 400:
		result := NewUpdateVsphereEsxiAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpdateVsphereEsxiAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpdateVsphereEsxiAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateVsphereEsxiAccountOK creates a UpdateVsphereEsxiAccountOK with default headers values
func NewUpdateVsphereEsxiAccountOK() *UpdateVsphereEsxiAccountOK {
	return &UpdateVsphereEsxiAccountOK{}
}

/* UpdateVsphereEsxiAccountOK describes a response with status code 200, with default header values.

UpdateVsphereEsxiAccountOK update vsphere esxi account o k
*/
type UpdateVsphereEsxiAccountOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskVsphereEsxiAccountArray
}

func (o *UpdateVsphereEsxiAccountOK) Error() string {
	return fmt.Sprintf("[POST /update-vsphere-esxi-account][%d] updateVsphereEsxiAccountOK  %+v", 200, o.Payload)
}
func (o *UpdateVsphereEsxiAccountOK) GetPayload() []*models.WithTaskVsphereEsxiAccountArray {
	return o.Payload
}

func (o *UpdateVsphereEsxiAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVsphereEsxiAccountNotModified creates a UpdateVsphereEsxiAccountNotModified with default headers values
func NewUpdateVsphereEsxiAccountNotModified() *UpdateVsphereEsxiAccountNotModified {
	return &UpdateVsphereEsxiAccountNotModified{}
}

/* UpdateVsphereEsxiAccountNotModified describes a response with status code 304, with default header values.

Not modified
*/
type UpdateVsphereEsxiAccountNotModified struct {
}

func (o *UpdateVsphereEsxiAccountNotModified) Error() string {
	return fmt.Sprintf("[POST /update-vsphere-esxi-account][%d] updateVsphereEsxiAccountNotModified ", 304)
}

func (o *UpdateVsphereEsxiAccountNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateVsphereEsxiAccountBadRequest creates a UpdateVsphereEsxiAccountBadRequest with default headers values
func NewUpdateVsphereEsxiAccountBadRequest() *UpdateVsphereEsxiAccountBadRequest {
	return &UpdateVsphereEsxiAccountBadRequest{}
}

/* UpdateVsphereEsxiAccountBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateVsphereEsxiAccountBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVsphereEsxiAccountBadRequest) Error() string {
	return fmt.Sprintf("[POST /update-vsphere-esxi-account][%d] updateVsphereEsxiAccountBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateVsphereEsxiAccountBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVsphereEsxiAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVsphereEsxiAccountNotFound creates a UpdateVsphereEsxiAccountNotFound with default headers values
func NewUpdateVsphereEsxiAccountNotFound() *UpdateVsphereEsxiAccountNotFound {
	return &UpdateVsphereEsxiAccountNotFound{}
}

/* UpdateVsphereEsxiAccountNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateVsphereEsxiAccountNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVsphereEsxiAccountNotFound) Error() string {
	return fmt.Sprintf("[POST /update-vsphere-esxi-account][%d] updateVsphereEsxiAccountNotFound  %+v", 404, o.Payload)
}
func (o *UpdateVsphereEsxiAccountNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVsphereEsxiAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVsphereEsxiAccountInternalServerError creates a UpdateVsphereEsxiAccountInternalServerError with default headers values
func NewUpdateVsphereEsxiAccountInternalServerError() *UpdateVsphereEsxiAccountInternalServerError {
	return &UpdateVsphereEsxiAccountInternalServerError{}
}

/* UpdateVsphereEsxiAccountInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateVsphereEsxiAccountInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVsphereEsxiAccountInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update-vsphere-esxi-account][%d] updateVsphereEsxiAccountInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateVsphereEsxiAccountInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVsphereEsxiAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
