// Code generated by go-swagger; DO NOT EDIT.

package vsphere_esxi_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVsphereEsxiAccountsReader is a Reader for the GetVsphereEsxiAccounts structure.
type GetVsphereEsxiAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVsphereEsxiAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVsphereEsxiAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVsphereEsxiAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVsphereEsxiAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVsphereEsxiAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVsphereEsxiAccountsOK creates a GetVsphereEsxiAccountsOK with default headers values
func NewGetVsphereEsxiAccountsOK() *GetVsphereEsxiAccountsOK {
	return &GetVsphereEsxiAccountsOK{}
}

/* GetVsphereEsxiAccountsOK describes a response with status code 200, with default header values.

GetVsphereEsxiAccountsOK get vsphere esxi accounts o k
*/
type GetVsphereEsxiAccountsOK struct {
	XTowerRequestID string

	Payload []*models.VsphereEsxiAccount
}

func (o *GetVsphereEsxiAccountsOK) Error() string {
	return fmt.Sprintf("[POST /get-vsphere-esxi-accounts][%d] getVsphereEsxiAccountsOK  %+v", 200, o.Payload)
}
func (o *GetVsphereEsxiAccountsOK) GetPayload() []*models.VsphereEsxiAccount {
	return o.Payload
}

func (o *GetVsphereEsxiAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVsphereEsxiAccountsBadRequest creates a GetVsphereEsxiAccountsBadRequest with default headers values
func NewGetVsphereEsxiAccountsBadRequest() *GetVsphereEsxiAccountsBadRequest {
	return &GetVsphereEsxiAccountsBadRequest{}
}

/* GetVsphereEsxiAccountsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVsphereEsxiAccountsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVsphereEsxiAccountsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-vsphere-esxi-accounts][%d] getVsphereEsxiAccountsBadRequest  %+v", 400, o.Payload)
}
func (o *GetVsphereEsxiAccountsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVsphereEsxiAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVsphereEsxiAccountsNotFound creates a GetVsphereEsxiAccountsNotFound with default headers values
func NewGetVsphereEsxiAccountsNotFound() *GetVsphereEsxiAccountsNotFound {
	return &GetVsphereEsxiAccountsNotFound{}
}

/* GetVsphereEsxiAccountsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVsphereEsxiAccountsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVsphereEsxiAccountsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-vsphere-esxi-accounts][%d] getVsphereEsxiAccountsNotFound  %+v", 404, o.Payload)
}
func (o *GetVsphereEsxiAccountsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVsphereEsxiAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVsphereEsxiAccountsInternalServerError creates a GetVsphereEsxiAccountsInternalServerError with default headers values
func NewGetVsphereEsxiAccountsInternalServerError() *GetVsphereEsxiAccountsInternalServerError {
	return &GetVsphereEsxiAccountsInternalServerError{}
}

/* GetVsphereEsxiAccountsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVsphereEsxiAccountsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVsphereEsxiAccountsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-vsphere-esxi-accounts][%d] getVsphereEsxiAccountsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVsphereEsxiAccountsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVsphereEsxiAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
