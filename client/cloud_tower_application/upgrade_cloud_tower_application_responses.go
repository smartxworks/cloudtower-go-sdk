// Code generated by go-swagger; DO NOT EDIT.

package cloud_tower_application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpgradeCloudTowerApplicationReader is a Reader for the UpgradeCloudTowerApplication structure.
type UpgradeCloudTowerApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpgradeCloudTowerApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpgradeCloudTowerApplicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewUpgradeCloudTowerApplicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpgradeCloudTowerApplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpgradeCloudTowerApplicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpgradeCloudTowerApplicationOK creates a UpgradeCloudTowerApplicationOK with default headers values
func NewUpgradeCloudTowerApplicationOK() *UpgradeCloudTowerApplicationOK {
	return &UpgradeCloudTowerApplicationOK{}
}

/* UpgradeCloudTowerApplicationOK describes a response with status code 200, with default header values.

UpgradeCloudTowerApplicationOK upgrade cloud tower application o k
*/
type UpgradeCloudTowerApplicationOK struct {
	XTowerRequestID string

	Payload *models.CloudTowerApplication
}

func (o *UpgradeCloudTowerApplicationOK) Error() string {
	return fmt.Sprintf("[POST /upgrade-cloudtower-application][%d] upgradeCloudTowerApplicationOK  %+v", 200, o.Payload)
}
func (o *UpgradeCloudTowerApplicationOK) GetPayload() *models.CloudTowerApplication {
	return o.Payload
}

func (o *UpgradeCloudTowerApplicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.CloudTowerApplication)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpgradeCloudTowerApplicationBadRequest creates a UpgradeCloudTowerApplicationBadRequest with default headers values
func NewUpgradeCloudTowerApplicationBadRequest() *UpgradeCloudTowerApplicationBadRequest {
	return &UpgradeCloudTowerApplicationBadRequest{}
}

/* UpgradeCloudTowerApplicationBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpgradeCloudTowerApplicationBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpgradeCloudTowerApplicationBadRequest) Error() string {
	return fmt.Sprintf("[POST /upgrade-cloudtower-application][%d] upgradeCloudTowerApplicationBadRequest  %+v", 400, o.Payload)
}
func (o *UpgradeCloudTowerApplicationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpgradeCloudTowerApplicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpgradeCloudTowerApplicationNotFound creates a UpgradeCloudTowerApplicationNotFound with default headers values
func NewUpgradeCloudTowerApplicationNotFound() *UpgradeCloudTowerApplicationNotFound {
	return &UpgradeCloudTowerApplicationNotFound{}
}

/* UpgradeCloudTowerApplicationNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpgradeCloudTowerApplicationNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpgradeCloudTowerApplicationNotFound) Error() string {
	return fmt.Sprintf("[POST /upgrade-cloudtower-application][%d] upgradeCloudTowerApplicationNotFound  %+v", 404, o.Payload)
}
func (o *UpgradeCloudTowerApplicationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpgradeCloudTowerApplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpgradeCloudTowerApplicationInternalServerError creates a UpgradeCloudTowerApplicationInternalServerError with default headers values
func NewUpgradeCloudTowerApplicationInternalServerError() *UpgradeCloudTowerApplicationInternalServerError {
	return &UpgradeCloudTowerApplicationInternalServerError{}
}

/* UpgradeCloudTowerApplicationInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpgradeCloudTowerApplicationInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpgradeCloudTowerApplicationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /upgrade-cloudtower-application][%d] upgradeCloudTowerApplicationInternalServerError  %+v", 500, o.Payload)
}
func (o *UpgradeCloudTowerApplicationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpgradeCloudTowerApplicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
