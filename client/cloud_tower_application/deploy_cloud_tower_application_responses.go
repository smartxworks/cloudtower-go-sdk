// Code generated by go-swagger; DO NOT EDIT.

package cloud_tower_application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeployCloudTowerApplicationReader is a Reader for the DeployCloudTowerApplication structure.
type DeployCloudTowerApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeployCloudTowerApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeployCloudTowerApplicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeployCloudTowerApplicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeployCloudTowerApplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeployCloudTowerApplicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeployCloudTowerApplicationOK creates a DeployCloudTowerApplicationOK with default headers values
func NewDeployCloudTowerApplicationOK() *DeployCloudTowerApplicationOK {
	return &DeployCloudTowerApplicationOK{}
}

/* DeployCloudTowerApplicationOK describes a response with status code 200, with default header values.

DeployCloudTowerApplicationOK deploy cloud tower application o k
*/
type DeployCloudTowerApplicationOK struct {
	XTowerRequestID string

	Payload *models.CloudTowerApplication
}

func (o *DeployCloudTowerApplicationOK) Error() string {
	return fmt.Sprintf("[POST /deploy-cloudtower-application][%d] deployCloudTowerApplicationOK  %+v", 200, o.Payload)
}
func (o *DeployCloudTowerApplicationOK) GetPayload() *models.CloudTowerApplication {
	return o.Payload
}

func (o *DeployCloudTowerApplicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.CloudTowerApplication)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployCloudTowerApplicationBadRequest creates a DeployCloudTowerApplicationBadRequest with default headers values
func NewDeployCloudTowerApplicationBadRequest() *DeployCloudTowerApplicationBadRequest {
	return &DeployCloudTowerApplicationBadRequest{}
}

/* DeployCloudTowerApplicationBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeployCloudTowerApplicationBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeployCloudTowerApplicationBadRequest) Error() string {
	return fmt.Sprintf("[POST /deploy-cloudtower-application][%d] deployCloudTowerApplicationBadRequest  %+v", 400, o.Payload)
}
func (o *DeployCloudTowerApplicationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeployCloudTowerApplicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployCloudTowerApplicationNotFound creates a DeployCloudTowerApplicationNotFound with default headers values
func NewDeployCloudTowerApplicationNotFound() *DeployCloudTowerApplicationNotFound {
	return &DeployCloudTowerApplicationNotFound{}
}

/* DeployCloudTowerApplicationNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeployCloudTowerApplicationNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeployCloudTowerApplicationNotFound) Error() string {
	return fmt.Sprintf("[POST /deploy-cloudtower-application][%d] deployCloudTowerApplicationNotFound  %+v", 404, o.Payload)
}
func (o *DeployCloudTowerApplicationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeployCloudTowerApplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployCloudTowerApplicationInternalServerError creates a DeployCloudTowerApplicationInternalServerError with default headers values
func NewDeployCloudTowerApplicationInternalServerError() *DeployCloudTowerApplicationInternalServerError {
	return &DeployCloudTowerApplicationInternalServerError{}
}

/* DeployCloudTowerApplicationInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeployCloudTowerApplicationInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeployCloudTowerApplicationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /deploy-cloudtower-application][%d] deployCloudTowerApplicationInternalServerError  %+v", 500, o.Payload)
}
func (o *DeployCloudTowerApplicationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeployCloudTowerApplicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
