// Code generated by go-swagger; DO NOT EDIT.

package vm_snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVMSnapshotsConnectionReader is a Reader for the GetVMSnapshotsConnection structure.
type GetVMSnapshotsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMSnapshotsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMSnapshotsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVMSnapshotsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVMSnapshotsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVMSnapshotsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVMSnapshotsConnectionOK creates a GetVMSnapshotsConnectionOK with default headers values
func NewGetVMSnapshotsConnectionOK() *GetVMSnapshotsConnectionOK {
	return &GetVMSnapshotsConnectionOK{}
}

/* GetVMSnapshotsConnectionOK describes a response with status code 200, with default header values.

GetVMSnapshotsConnectionOK get Vm snapshots connection o k
*/
type GetVMSnapshotsConnectionOK struct {
	XTowerRequestID string

	Payload *models.VMSnapshotConnection
}

func (o *GetVMSnapshotsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-vm-snapshots-connection][%d] getVmSnapshotsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetVMSnapshotsConnectionOK) GetPayload() *models.VMSnapshotConnection {
	return o.Payload
}

func (o *GetVMSnapshotsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.VMSnapshotConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMSnapshotsConnectionBadRequest creates a GetVMSnapshotsConnectionBadRequest with default headers values
func NewGetVMSnapshotsConnectionBadRequest() *GetVMSnapshotsConnectionBadRequest {
	return &GetVMSnapshotsConnectionBadRequest{}
}

/* GetVMSnapshotsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVMSnapshotsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMSnapshotsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-vm-snapshots-connection][%d] getVmSnapshotsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetVMSnapshotsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMSnapshotsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMSnapshotsConnectionNotFound creates a GetVMSnapshotsConnectionNotFound with default headers values
func NewGetVMSnapshotsConnectionNotFound() *GetVMSnapshotsConnectionNotFound {
	return &GetVMSnapshotsConnectionNotFound{}
}

/* GetVMSnapshotsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVMSnapshotsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMSnapshotsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-vm-snapshots-connection][%d] getVmSnapshotsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetVMSnapshotsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMSnapshotsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMSnapshotsConnectionInternalServerError creates a GetVMSnapshotsConnectionInternalServerError with default headers values
func NewGetVMSnapshotsConnectionInternalServerError() *GetVMSnapshotsConnectionInternalServerError {
	return &GetVMSnapshotsConnectionInternalServerError{}
}

/* GetVMSnapshotsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVMSnapshotsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMSnapshotsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-vm-snapshots-connection][%d] getVmSnapshotsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVMSnapshotsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMSnapshotsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
