// Code generated by go-swagger; DO NOT EDIT.

package resource_change

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetResourceChangesParams creates a new GetResourceChangesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetResourceChangesParams() *GetResourceChangesParams {
	return &GetResourceChangesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetResourceChangesParamsWithTimeout creates a new GetResourceChangesParams object
// with the ability to set a timeout on a request.
func NewGetResourceChangesParamsWithTimeout(timeout time.Duration) *GetResourceChangesParams {
	return &GetResourceChangesParams{
		timeout: timeout,
	}
}

// NewGetResourceChangesParamsWithContext creates a new GetResourceChangesParams object
// with the ability to set a context for a request.
func NewGetResourceChangesParamsWithContext(ctx context.Context) *GetResourceChangesParams {
	return &GetResourceChangesParams{
		Context: ctx,
	}
}

// NewGetResourceChangesParamsWithHTTPClient creates a new GetResourceChangesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetResourceChangesParamsWithHTTPClient(client *http.Client) *GetResourceChangesParams {
	return &GetResourceChangesParams{
		HTTPClient: client,
	}
}

/* GetResourceChangesParams contains all the parameters to send to the API endpoint
   for the get resource changes operation.

   Typically these are written to a http.Request.
*/
type GetResourceChangesParams struct {

	// Action.
	Action *string

	// Limit.
	//
	// Format: int32
	Limit *int32

	// ResourceID.
	ResourceID *string

	// ResourceType.
	ResourceType *string

	// StartRevision.
	StartRevision *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get resource changes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetResourceChangesParams) WithDefaults() *GetResourceChangesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get resource changes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetResourceChangesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get resource changes params
func (o *GetResourceChangesParams) WithTimeout(timeout time.Duration) *GetResourceChangesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get resource changes params
func (o *GetResourceChangesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get resource changes params
func (o *GetResourceChangesParams) WithContext(ctx context.Context) *GetResourceChangesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get resource changes params
func (o *GetResourceChangesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get resource changes params
func (o *GetResourceChangesParams) WithHTTPClient(client *http.Client) *GetResourceChangesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get resource changes params
func (o *GetResourceChangesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAction adds the action to the get resource changes params
func (o *GetResourceChangesParams) WithAction(action *string) *GetResourceChangesParams {
	o.SetAction(action)
	return o
}

// SetAction adds the action to the get resource changes params
func (o *GetResourceChangesParams) SetAction(action *string) {
	o.Action = action
}

// WithLimit adds the limit to the get resource changes params
func (o *GetResourceChangesParams) WithLimit(limit *int32) *GetResourceChangesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get resource changes params
func (o *GetResourceChangesParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithResourceID adds the resourceID to the get resource changes params
func (o *GetResourceChangesParams) WithResourceID(resourceID *string) *GetResourceChangesParams {
	o.SetResourceID(resourceID)
	return o
}

// SetResourceID adds the resourceId to the get resource changes params
func (o *GetResourceChangesParams) SetResourceID(resourceID *string) {
	o.ResourceID = resourceID
}

// WithResourceType adds the resourceType to the get resource changes params
func (o *GetResourceChangesParams) WithResourceType(resourceType *string) *GetResourceChangesParams {
	o.SetResourceType(resourceType)
	return o
}

// SetResourceType adds the resourceType to the get resource changes params
func (o *GetResourceChangesParams) SetResourceType(resourceType *string) {
	o.ResourceType = resourceType
}

// WithStartRevision adds the startRevision to the get resource changes params
func (o *GetResourceChangesParams) WithStartRevision(startRevision *string) *GetResourceChangesParams {
	o.SetStartRevision(startRevision)
	return o
}

// SetStartRevision adds the startRevision to the get resource changes params
func (o *GetResourceChangesParams) SetStartRevision(startRevision *string) {
	o.StartRevision = startRevision
}

// WriteToRequest writes these params to a swagger request
func (o *GetResourceChangesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Action != nil {

		// query param action
		var qrAction string

		if o.Action != nil {
			qrAction = *o.Action
		}
		qAction := qrAction
		if qAction != "" {

			if err := r.SetQueryParam("action", qAction); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.ResourceID != nil {

		// query param resource_id
		var qrResourceID string

		if o.ResourceID != nil {
			qrResourceID = *o.ResourceID
		}
		qResourceID := qrResourceID
		if qResourceID != "" {

			if err := r.SetQueryParam("resource_id", qResourceID); err != nil {
				return err
			}
		}
	}

	if o.ResourceType != nil {

		// query param resource_type
		var qrResourceType string

		if o.ResourceType != nil {
			qrResourceType = *o.ResourceType
		}
		qResourceType := qrResourceType
		if qResourceType != "" {

			if err := r.SetQueryParam("resource_type", qResourceType); err != nil {
				return err
			}
		}
	}

	if o.StartRevision != nil {

		// query param start_revision
		var qrStartRevision string

		if o.StartRevision != nil {
			qrStartRevision = *o.StartRevision
		}
		qStartRevision := qrStartRevision
		if qStartRevision != "" {

			if err := r.SetQueryParam("start_revision", qStartRevision); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
