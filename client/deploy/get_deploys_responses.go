// Code generated by go-swagger; DO NOT EDIT.

package deploy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetDeploysReader is a Reader for the GetDeploys structure.
type GetDeploysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetDeploysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetDeploysNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetDeploysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDeploysOK creates a GetDeploysOK with default headers values
func NewGetDeploysOK() *GetDeploysOK {
	return &GetDeploysOK{}
}

/* GetDeploysOK describes a response with status code 200, with default header values.

GetDeploysOK get deploys o k
*/
type GetDeploysOK struct {
	XTowerRequestID string

	Payload []*models.Deploy
}

func (o *GetDeploysOK) Error() string {
	return fmt.Sprintf("[POST /get-deploys][%d] getDeploysOK  %+v", 200, o.Payload)
}
func (o *GetDeploysOK) GetPayload() []*models.Deploy {
	return o.Payload
}

func (o *GetDeploysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploysBadRequest creates a GetDeploysBadRequest with default headers values
func NewGetDeploysBadRequest() *GetDeploysBadRequest {
	return &GetDeploysBadRequest{}
}

/* GetDeploysBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetDeploysBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetDeploysBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-deploys][%d] getDeploysBadRequest  %+v", 400, o.Payload)
}
func (o *GetDeploysBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDeploysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploysNotFound creates a GetDeploysNotFound with default headers values
func NewGetDeploysNotFound() *GetDeploysNotFound {
	return &GetDeploysNotFound{}
}

/* GetDeploysNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetDeploysNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetDeploysNotFound) Error() string {
	return fmt.Sprintf("[POST /get-deploys][%d] getDeploysNotFound  %+v", 404, o.Payload)
}
func (o *GetDeploysNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDeploysNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploysInternalServerError creates a GetDeploysInternalServerError with default headers values
func NewGetDeploysInternalServerError() *GetDeploysInternalServerError {
	return &GetDeploysInternalServerError{}
}

/* GetDeploysInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetDeploysInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetDeploysInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-deploys][%d] getDeploysInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDeploysInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDeploysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
