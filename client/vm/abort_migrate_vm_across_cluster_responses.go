// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// AbortMigrateVMAcrossClusterReader is a Reader for the AbortMigrateVMAcrossCluster structure.
type AbortMigrateVMAcrossClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AbortMigrateVMAcrossClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAbortMigrateVMAcrossClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewAbortMigrateVMAcrossClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewAbortMigrateVMAcrossClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewAbortMigrateVMAcrossClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAbortMigrateVMAcrossClusterOK creates a AbortMigrateVMAcrossClusterOK with default headers values
func NewAbortMigrateVMAcrossClusterOK() *AbortMigrateVMAcrossClusterOK {
	return &AbortMigrateVMAcrossClusterOK{}
}

/* AbortMigrateVMAcrossClusterOK describes a response with status code 200, with default header values.

AbortMigrateVMAcrossClusterOK abort migrate Vm across cluster o k
*/
type AbortMigrateVMAcrossClusterOK struct {
	XTowerRequestID string

	Payload []*models.Task
}

func (o *AbortMigrateVMAcrossClusterOK) Error() string {
	return fmt.Sprintf("[POST /abort-migrate-vm-across-cluster][%d] abortMigrateVmAcrossClusterOK  %+v", 200, o.Payload)
}
func (o *AbortMigrateVMAcrossClusterOK) GetPayload() []*models.Task {
	return o.Payload
}

func (o *AbortMigrateVMAcrossClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAbortMigrateVMAcrossClusterBadRequest creates a AbortMigrateVMAcrossClusterBadRequest with default headers values
func NewAbortMigrateVMAcrossClusterBadRequest() *AbortMigrateVMAcrossClusterBadRequest {
	return &AbortMigrateVMAcrossClusterBadRequest{}
}

/* AbortMigrateVMAcrossClusterBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AbortMigrateVMAcrossClusterBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AbortMigrateVMAcrossClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /abort-migrate-vm-across-cluster][%d] abortMigrateVmAcrossClusterBadRequest  %+v", 400, o.Payload)
}
func (o *AbortMigrateVMAcrossClusterBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AbortMigrateVMAcrossClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAbortMigrateVMAcrossClusterNotFound creates a AbortMigrateVMAcrossClusterNotFound with default headers values
func NewAbortMigrateVMAcrossClusterNotFound() *AbortMigrateVMAcrossClusterNotFound {
	return &AbortMigrateVMAcrossClusterNotFound{}
}

/* AbortMigrateVMAcrossClusterNotFound describes a response with status code 404, with default header values.

Not found
*/
type AbortMigrateVMAcrossClusterNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AbortMigrateVMAcrossClusterNotFound) Error() string {
	return fmt.Sprintf("[POST /abort-migrate-vm-across-cluster][%d] abortMigrateVmAcrossClusterNotFound  %+v", 404, o.Payload)
}
func (o *AbortMigrateVMAcrossClusterNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AbortMigrateVMAcrossClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAbortMigrateVMAcrossClusterInternalServerError creates a AbortMigrateVMAcrossClusterInternalServerError with default headers values
func NewAbortMigrateVMAcrossClusterInternalServerError() *AbortMigrateVMAcrossClusterInternalServerError {
	return &AbortMigrateVMAcrossClusterInternalServerError{}
}

/* AbortMigrateVMAcrossClusterInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type AbortMigrateVMAcrossClusterInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AbortMigrateVMAcrossClusterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /abort-migrate-vm-across-cluster][%d] abortMigrateVmAcrossClusterInternalServerError  %+v", 500, o.Payload)
}
func (o *AbortMigrateVMAcrossClusterInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AbortMigrateVMAcrossClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
