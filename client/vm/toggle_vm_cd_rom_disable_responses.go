// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// ToggleVMCdRomDisableReader is a Reader for the ToggleVMCdRomDisable structure.
type ToggleVMCdRomDisableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ToggleVMCdRomDisableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewToggleVMCdRomDisableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewToggleVMCdRomDisableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewToggleVMCdRomDisableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewToggleVMCdRomDisableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewToggleVMCdRomDisableOK creates a ToggleVMCdRomDisableOK with default headers values
func NewToggleVMCdRomDisableOK() *ToggleVMCdRomDisableOK {
	return &ToggleVMCdRomDisableOK{}
}

/* ToggleVMCdRomDisableOK describes a response with status code 200, with default header values.

ToggleVMCdRomDisableOK toggle Vm cd rom disable o k
*/
type ToggleVMCdRomDisableOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskVM
}

func (o *ToggleVMCdRomDisableOK) Error() string {
	return fmt.Sprintf("[POST /toggle-vm-cd-rom-disable][%d] toggleVmCdRomDisableOK  %+v", 200, o.Payload)
}
func (o *ToggleVMCdRomDisableOK) GetPayload() []*models.WithTaskVM {
	return o.Payload
}

func (o *ToggleVMCdRomDisableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewToggleVMCdRomDisableBadRequest creates a ToggleVMCdRomDisableBadRequest with default headers values
func NewToggleVMCdRomDisableBadRequest() *ToggleVMCdRomDisableBadRequest {
	return &ToggleVMCdRomDisableBadRequest{}
}

/* ToggleVMCdRomDisableBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ToggleVMCdRomDisableBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *ToggleVMCdRomDisableBadRequest) Error() string {
	return fmt.Sprintf("[POST /toggle-vm-cd-rom-disable][%d] toggleVmCdRomDisableBadRequest  %+v", 400, o.Payload)
}
func (o *ToggleVMCdRomDisableBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *ToggleVMCdRomDisableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewToggleVMCdRomDisableNotFound creates a ToggleVMCdRomDisableNotFound with default headers values
func NewToggleVMCdRomDisableNotFound() *ToggleVMCdRomDisableNotFound {
	return &ToggleVMCdRomDisableNotFound{}
}

/* ToggleVMCdRomDisableNotFound describes a response with status code 404, with default header values.

Not found
*/
type ToggleVMCdRomDisableNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *ToggleVMCdRomDisableNotFound) Error() string {
	return fmt.Sprintf("[POST /toggle-vm-cd-rom-disable][%d] toggleVmCdRomDisableNotFound  %+v", 404, o.Payload)
}
func (o *ToggleVMCdRomDisableNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *ToggleVMCdRomDisableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewToggleVMCdRomDisableInternalServerError creates a ToggleVMCdRomDisableInternalServerError with default headers values
func NewToggleVMCdRomDisableInternalServerError() *ToggleVMCdRomDisableInternalServerError {
	return &ToggleVMCdRomDisableInternalServerError{}
}

/* ToggleVMCdRomDisableInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type ToggleVMCdRomDisableInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *ToggleVMCdRomDisableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /toggle-vm-cd-rom-disable][%d] toggleVmCdRomDisableInternalServerError  %+v", 500, o.Payload)
}
func (o *ToggleVMCdRomDisableInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *ToggleVMCdRomDisableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
