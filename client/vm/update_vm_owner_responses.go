// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpdateVMOwnerReader is a Reader for the UpdateVMOwner structure.
type UpdateVMOwnerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateVMOwnerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateVMOwnerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 304:
		result := NewUpdateVMOwnerNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 400:
		result := NewUpdateVMOwnerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpdateVMOwnerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpdateVMOwnerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateVMOwnerOK creates a UpdateVMOwnerOK with default headers values
func NewUpdateVMOwnerOK() *UpdateVMOwnerOK {
	return &UpdateVMOwnerOK{}
}

/* UpdateVMOwnerOK describes a response with status code 200, with default header values.

UpdateVMOwnerOK update Vm owner o k
*/
type UpdateVMOwnerOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskVM
}

func (o *UpdateVMOwnerOK) Error() string {
	return fmt.Sprintf("[POST /update-vm-owner][%d] updateVmOwnerOK  %+v", 200, o.Payload)
}
func (o *UpdateVMOwnerOK) GetPayload() []*models.WithTaskVM {
	return o.Payload
}

func (o *UpdateVMOwnerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVMOwnerNotModified creates a UpdateVMOwnerNotModified with default headers values
func NewUpdateVMOwnerNotModified() *UpdateVMOwnerNotModified {
	return &UpdateVMOwnerNotModified{}
}

/* UpdateVMOwnerNotModified describes a response with status code 304, with default header values.

Not modified
*/
type UpdateVMOwnerNotModified struct {
}

func (o *UpdateVMOwnerNotModified) Error() string {
	return fmt.Sprintf("[POST /update-vm-owner][%d] updateVmOwnerNotModified ", 304)
}

func (o *UpdateVMOwnerNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateVMOwnerBadRequest creates a UpdateVMOwnerBadRequest with default headers values
func NewUpdateVMOwnerBadRequest() *UpdateVMOwnerBadRequest {
	return &UpdateVMOwnerBadRequest{}
}

/* UpdateVMOwnerBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateVMOwnerBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVMOwnerBadRequest) Error() string {
	return fmt.Sprintf("[POST /update-vm-owner][%d] updateVmOwnerBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateVMOwnerBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVMOwnerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVMOwnerNotFound creates a UpdateVMOwnerNotFound with default headers values
func NewUpdateVMOwnerNotFound() *UpdateVMOwnerNotFound {
	return &UpdateVMOwnerNotFound{}
}

/* UpdateVMOwnerNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateVMOwnerNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVMOwnerNotFound) Error() string {
	return fmt.Sprintf("[POST /update-vm-owner][%d] updateVmOwnerNotFound  %+v", 404, o.Payload)
}
func (o *UpdateVMOwnerNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVMOwnerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVMOwnerInternalServerError creates a UpdateVMOwnerInternalServerError with default headers values
func NewUpdateVMOwnerInternalServerError() *UpdateVMOwnerInternalServerError {
	return &UpdateVMOwnerInternalServerError{}
}

/* UpdateVMOwnerInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateVMOwnerInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVMOwnerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update-vm-owner][%d] updateVmOwnerInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateVMOwnerInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVMOwnerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
