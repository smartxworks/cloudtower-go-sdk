// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// AddVMPciNicReader is a Reader for the AddVMPciNic structure.
type AddVMPciNicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddVMPciNicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddVMPciNicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 304:
		result := NewAddVMPciNicNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 400:
		result := NewAddVMPciNicBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewAddVMPciNicNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewAddVMPciNicInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddVMPciNicOK creates a AddVMPciNicOK with default headers values
func NewAddVMPciNicOK() *AddVMPciNicOK {
	return &AddVMPciNicOK{}
}

/* AddVMPciNicOK describes a response with status code 200, with default header values.

AddVMPciNicOK add Vm pci nic o k
*/
type AddVMPciNicOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskVM
}

func (o *AddVMPciNicOK) Error() string {
	return fmt.Sprintf("[POST /add-vm-pci-nic][%d] addVmPciNicOK  %+v", 200, o.Payload)
}
func (o *AddVMPciNicOK) GetPayload() []*models.WithTaskVM {
	return o.Payload
}

func (o *AddVMPciNicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddVMPciNicNotModified creates a AddVMPciNicNotModified with default headers values
func NewAddVMPciNicNotModified() *AddVMPciNicNotModified {
	return &AddVMPciNicNotModified{}
}

/* AddVMPciNicNotModified describes a response with status code 304, with default header values.

Not modified
*/
type AddVMPciNicNotModified struct {
}

func (o *AddVMPciNicNotModified) Error() string {
	return fmt.Sprintf("[POST /add-vm-pci-nic][%d] addVmPciNicNotModified ", 304)
}

func (o *AddVMPciNicNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVMPciNicBadRequest creates a AddVMPciNicBadRequest with default headers values
func NewAddVMPciNicBadRequest() *AddVMPciNicBadRequest {
	return &AddVMPciNicBadRequest{}
}

/* AddVMPciNicBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddVMPciNicBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AddVMPciNicBadRequest) Error() string {
	return fmt.Sprintf("[POST /add-vm-pci-nic][%d] addVmPciNicBadRequest  %+v", 400, o.Payload)
}
func (o *AddVMPciNicBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AddVMPciNicBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddVMPciNicNotFound creates a AddVMPciNicNotFound with default headers values
func NewAddVMPciNicNotFound() *AddVMPciNicNotFound {
	return &AddVMPciNicNotFound{}
}

/* AddVMPciNicNotFound describes a response with status code 404, with default header values.

Not found
*/
type AddVMPciNicNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AddVMPciNicNotFound) Error() string {
	return fmt.Sprintf("[POST /add-vm-pci-nic][%d] addVmPciNicNotFound  %+v", 404, o.Payload)
}
func (o *AddVMPciNicNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AddVMPciNicNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddVMPciNicInternalServerError creates a AddVMPciNicInternalServerError with default headers values
func NewAddVMPciNicInternalServerError() *AddVMPciNicInternalServerError {
	return &AddVMPciNicInternalServerError{}
}

/* AddVMPciNicInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type AddVMPciNicInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AddVMPciNicInternalServerError) Error() string {
	return fmt.Sprintf("[POST /add-vm-pci-nic][%d] addVmPciNicInternalServerError  %+v", 500, o.Payload)
}
func (o *AddVMPciNicInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AddVMPciNicInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
