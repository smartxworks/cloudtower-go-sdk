// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVmsReader is a Reader for the GetVms structure.
type GetVmsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVmsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVmsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVmsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVmsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVmsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVmsOK creates a GetVmsOK with default headers values
func NewGetVmsOK() *GetVmsOK {
	return &GetVmsOK{}
}

/* GetVmsOK describes a response with status code 200, with default header values.

GetVmsOK get vms o k
*/
type GetVmsOK struct {
	XTowerRequestID string

	Payload []*models.VM
}

func (o *GetVmsOK) Error() string {
	return fmt.Sprintf("[POST /get-vms][%d] getVmsOK  %+v", 200, o.Payload)
}
func (o *GetVmsOK) GetPayload() []*models.VM {
	return o.Payload
}

func (o *GetVmsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVmsBadRequest creates a GetVmsBadRequest with default headers values
func NewGetVmsBadRequest() *GetVmsBadRequest {
	return &GetVmsBadRequest{}
}

/* GetVmsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVmsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVmsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-vms][%d] getVmsBadRequest  %+v", 400, o.Payload)
}
func (o *GetVmsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVmsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVmsNotFound creates a GetVmsNotFound with default headers values
func NewGetVmsNotFound() *GetVmsNotFound {
	return &GetVmsNotFound{}
}

/* GetVmsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVmsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVmsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-vms][%d] getVmsNotFound  %+v", 404, o.Payload)
}
func (o *GetVmsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVmsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVmsInternalServerError creates a GetVmsInternalServerError with default headers values
func NewGetVmsInternalServerError() *GetVmsInternalServerError {
	return &GetVmsInternalServerError{}
}

/* GetVmsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVmsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVmsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-vms][%d] getVmsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVmsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVmsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
