// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// StopVMInCutoverMigrationReader is a Reader for the StopVMInCutoverMigration structure.
type StopVMInCutoverMigrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StopVMInCutoverMigrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStopVMInCutoverMigrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewStopVMInCutoverMigrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewStopVMInCutoverMigrationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewStopVMInCutoverMigrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStopVMInCutoverMigrationOK creates a StopVMInCutoverMigrationOK with default headers values
func NewStopVMInCutoverMigrationOK() *StopVMInCutoverMigrationOK {
	return &StopVMInCutoverMigrationOK{}
}

/* StopVMInCutoverMigrationOK describes a response with status code 200, with default header values.

StopVMInCutoverMigrationOK stop Vm in cutover migration o k
*/
type StopVMInCutoverMigrationOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskVM
}

func (o *StopVMInCutoverMigrationOK) Error() string {
	return fmt.Sprintf("[POST /stop-vm-in-cutover-migration][%d] stopVmInCutoverMigrationOK  %+v", 200, o.Payload)
}
func (o *StopVMInCutoverMigrationOK) GetPayload() []*models.WithTaskVM {
	return o.Payload
}

func (o *StopVMInCutoverMigrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopVMInCutoverMigrationBadRequest creates a StopVMInCutoverMigrationBadRequest with default headers values
func NewStopVMInCutoverMigrationBadRequest() *StopVMInCutoverMigrationBadRequest {
	return &StopVMInCutoverMigrationBadRequest{}
}

/* StopVMInCutoverMigrationBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type StopVMInCutoverMigrationBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *StopVMInCutoverMigrationBadRequest) Error() string {
	return fmt.Sprintf("[POST /stop-vm-in-cutover-migration][%d] stopVmInCutoverMigrationBadRequest  %+v", 400, o.Payload)
}
func (o *StopVMInCutoverMigrationBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *StopVMInCutoverMigrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopVMInCutoverMigrationNotFound creates a StopVMInCutoverMigrationNotFound with default headers values
func NewStopVMInCutoverMigrationNotFound() *StopVMInCutoverMigrationNotFound {
	return &StopVMInCutoverMigrationNotFound{}
}

/* StopVMInCutoverMigrationNotFound describes a response with status code 404, with default header values.

Not found
*/
type StopVMInCutoverMigrationNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *StopVMInCutoverMigrationNotFound) Error() string {
	return fmt.Sprintf("[POST /stop-vm-in-cutover-migration][%d] stopVmInCutoverMigrationNotFound  %+v", 404, o.Payload)
}
func (o *StopVMInCutoverMigrationNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *StopVMInCutoverMigrationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopVMInCutoverMigrationInternalServerError creates a StopVMInCutoverMigrationInternalServerError with default headers values
func NewStopVMInCutoverMigrationInternalServerError() *StopVMInCutoverMigrationInternalServerError {
	return &StopVMInCutoverMigrationInternalServerError{}
}

/* StopVMInCutoverMigrationInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type StopVMInCutoverMigrationInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *StopVMInCutoverMigrationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /stop-vm-in-cutover-migration][%d] stopVmInCutoverMigrationInternalServerError  %+v", 500, o.Payload)
}
func (o *StopVMInCutoverMigrationInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *StopVMInCutoverMigrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
