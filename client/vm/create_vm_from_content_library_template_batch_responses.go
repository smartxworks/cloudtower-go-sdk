// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// CreateVMFromContentLibraryTemplateBatchReader is a Reader for the CreateVMFromContentLibraryTemplateBatch structure.
type CreateVMFromContentLibraryTemplateBatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateVMFromContentLibraryTemplateBatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateVMFromContentLibraryTemplateBatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewCreateVMFromContentLibraryTemplateBatchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewCreateVMFromContentLibraryTemplateBatchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewCreateVMFromContentLibraryTemplateBatchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateVMFromContentLibraryTemplateBatchOK creates a CreateVMFromContentLibraryTemplateBatchOK with default headers values
func NewCreateVMFromContentLibraryTemplateBatchOK() *CreateVMFromContentLibraryTemplateBatchOK {
	return &CreateVMFromContentLibraryTemplateBatchOK{}
}

/* CreateVMFromContentLibraryTemplateBatchOK describes a response with status code 200, with default header values.

CreateVMFromContentLibraryTemplateBatchOK create Vm from content library template batch o k
*/
type CreateVMFromContentLibraryTemplateBatchOK struct {
	XTowerRequestID string

	Payload *models.WithTaskVMArray
}

func (o *CreateVMFromContentLibraryTemplateBatchOK) Error() string {
	return fmt.Sprintf("[POST /create-vm-from-content-library-template-batch][%d] createVmFromContentLibraryTemplateBatchOK  %+v", 200, o.Payload)
}
func (o *CreateVMFromContentLibraryTemplateBatchOK) GetPayload() *models.WithTaskVMArray {
	return o.Payload
}

func (o *CreateVMFromContentLibraryTemplateBatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.WithTaskVMArray)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVMFromContentLibraryTemplateBatchBadRequest creates a CreateVMFromContentLibraryTemplateBatchBadRequest with default headers values
func NewCreateVMFromContentLibraryTemplateBatchBadRequest() *CreateVMFromContentLibraryTemplateBatchBadRequest {
	return &CreateVMFromContentLibraryTemplateBatchBadRequest{}
}

/* CreateVMFromContentLibraryTemplateBatchBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateVMFromContentLibraryTemplateBatchBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateVMFromContentLibraryTemplateBatchBadRequest) Error() string {
	return fmt.Sprintf("[POST /create-vm-from-content-library-template-batch][%d] createVmFromContentLibraryTemplateBatchBadRequest  %+v", 400, o.Payload)
}
func (o *CreateVMFromContentLibraryTemplateBatchBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateVMFromContentLibraryTemplateBatchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVMFromContentLibraryTemplateBatchNotFound creates a CreateVMFromContentLibraryTemplateBatchNotFound with default headers values
func NewCreateVMFromContentLibraryTemplateBatchNotFound() *CreateVMFromContentLibraryTemplateBatchNotFound {
	return &CreateVMFromContentLibraryTemplateBatchNotFound{}
}

/* CreateVMFromContentLibraryTemplateBatchNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateVMFromContentLibraryTemplateBatchNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateVMFromContentLibraryTemplateBatchNotFound) Error() string {
	return fmt.Sprintf("[POST /create-vm-from-content-library-template-batch][%d] createVmFromContentLibraryTemplateBatchNotFound  %+v", 404, o.Payload)
}
func (o *CreateVMFromContentLibraryTemplateBatchNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateVMFromContentLibraryTemplateBatchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVMFromContentLibraryTemplateBatchInternalServerError creates a CreateVMFromContentLibraryTemplateBatchInternalServerError with default headers values
func NewCreateVMFromContentLibraryTemplateBatchInternalServerError() *CreateVMFromContentLibraryTemplateBatchInternalServerError {
	return &CreateVMFromContentLibraryTemplateBatchInternalServerError{}
}

/* CreateVMFromContentLibraryTemplateBatchInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateVMFromContentLibraryTemplateBatchInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateVMFromContentLibraryTemplateBatchInternalServerError) Error() string {
	return fmt.Sprintf("[POST /create-vm-from-content-library-template-batch][%d] createVmFromContentLibraryTemplateBatchInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateVMFromContentLibraryTemplateBatchInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateVMFromContentLibraryTemplateBatchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
