// Code generated by go-swagger; DO NOT EDIT.

package host

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetHostsReader is a Reader for the GetHosts structure.
type GetHostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetHostsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetHostsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetHostsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHostsOK creates a GetHostsOK with default headers values
func NewGetHostsOK() *GetHostsOK {
	return &GetHostsOK{}
}

/* GetHostsOK describes a response with status code 200, with default header values.

GetHostsOK get hosts o k
*/
type GetHostsOK struct {
	XTowerRequestID string

	Payload []*models.Host
}

func (o *GetHostsOK) Error() string {
	return fmt.Sprintf("[POST /get-hosts][%d] getHostsOK  %+v", 200, o.Payload)
}
func (o *GetHostsOK) GetPayload() []*models.Host {
	return o.Payload
}

func (o *GetHostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsBadRequest creates a GetHostsBadRequest with default headers values
func NewGetHostsBadRequest() *GetHostsBadRequest {
	return &GetHostsBadRequest{}
}

/* GetHostsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetHostsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetHostsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-hosts][%d] getHostsBadRequest  %+v", 400, o.Payload)
}
func (o *GetHostsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetHostsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsNotFound creates a GetHostsNotFound with default headers values
func NewGetHostsNotFound() *GetHostsNotFound {
	return &GetHostsNotFound{}
}

/* GetHostsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetHostsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetHostsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-hosts][%d] getHostsNotFound  %+v", 404, o.Payload)
}
func (o *GetHostsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetHostsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsInternalServerError creates a GetHostsInternalServerError with default headers values
func NewGetHostsInternalServerError() *GetHostsInternalServerError {
	return &GetHostsInternalServerError{}
}

/* GetHostsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetHostsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetHostsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-hosts][%d] getHostsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetHostsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetHostsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
