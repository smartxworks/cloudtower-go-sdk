// Code generated by go-swagger; DO NOT EDIT.

package host

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// EnterMaintenanceModeReader is a Reader for the EnterMaintenanceMode structure.
type EnterMaintenanceModeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnterMaintenanceModeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEnterMaintenanceModeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewEnterMaintenanceModeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewEnterMaintenanceModeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewEnterMaintenanceModeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEnterMaintenanceModeOK creates a EnterMaintenanceModeOK with default headers values
func NewEnterMaintenanceModeOK() *EnterMaintenanceModeOK {
	return &EnterMaintenanceModeOK{}
}

/* EnterMaintenanceModeOK describes a response with status code 200, with default header values.

EnterMaintenanceModeOK enter maintenance mode o k
*/
type EnterMaintenanceModeOK struct {
	XTowerRequestID string

	Payload *models.WithTaskHost
}

func (o *EnterMaintenanceModeOK) Error() string {
	return fmt.Sprintf("[POST /enter-maintance-mode][%d] enterMaintenanceModeOK  %+v", 200, o.Payload)
}
func (o *EnterMaintenanceModeOK) GetPayload() *models.WithTaskHost {
	return o.Payload
}

func (o *EnterMaintenanceModeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.WithTaskHost)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnterMaintenanceModeBadRequest creates a EnterMaintenanceModeBadRequest with default headers values
func NewEnterMaintenanceModeBadRequest() *EnterMaintenanceModeBadRequest {
	return &EnterMaintenanceModeBadRequest{}
}

/* EnterMaintenanceModeBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type EnterMaintenanceModeBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *EnterMaintenanceModeBadRequest) Error() string {
	return fmt.Sprintf("[POST /enter-maintance-mode][%d] enterMaintenanceModeBadRequest  %+v", 400, o.Payload)
}
func (o *EnterMaintenanceModeBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *EnterMaintenanceModeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnterMaintenanceModeNotFound creates a EnterMaintenanceModeNotFound with default headers values
func NewEnterMaintenanceModeNotFound() *EnterMaintenanceModeNotFound {
	return &EnterMaintenanceModeNotFound{}
}

/* EnterMaintenanceModeNotFound describes a response with status code 404, with default header values.

Not found
*/
type EnterMaintenanceModeNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *EnterMaintenanceModeNotFound) Error() string {
	return fmt.Sprintf("[POST /enter-maintance-mode][%d] enterMaintenanceModeNotFound  %+v", 404, o.Payload)
}
func (o *EnterMaintenanceModeNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *EnterMaintenanceModeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnterMaintenanceModeInternalServerError creates a EnterMaintenanceModeInternalServerError with default headers values
func NewEnterMaintenanceModeInternalServerError() *EnterMaintenanceModeInternalServerError {
	return &EnterMaintenanceModeInternalServerError{}
}

/* EnterMaintenanceModeInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type EnterMaintenanceModeInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *EnterMaintenanceModeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /enter-maintance-mode][%d] enterMaintenanceModeInternalServerError  %+v", 500, o.Payload)
}
func (o *EnterMaintenanceModeInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *EnterMaintenanceModeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
