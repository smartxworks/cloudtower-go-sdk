// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpdateClusterHaSettingReader is a Reader for the UpdateClusterHaSetting structure.
type UpdateClusterHaSettingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterHaSettingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClusterHaSettingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewUpdateClusterHaSettingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpdateClusterHaSettingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpdateClusterHaSettingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateClusterHaSettingOK creates a UpdateClusterHaSettingOK with default headers values
func NewUpdateClusterHaSettingOK() *UpdateClusterHaSettingOK {
	return &UpdateClusterHaSettingOK{}
}

/* UpdateClusterHaSettingOK describes a response with status code 200, with default header values.

UpdateClusterHaSettingOK update cluster ha setting o k
*/
type UpdateClusterHaSettingOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskClusterSettings
}

func (o *UpdateClusterHaSettingOK) Error() string {
	return fmt.Sprintf("[POST /update-cluster-ha-setting][%d] updateClusterHaSettingOK  %+v", 200, o.Payload)
}
func (o *UpdateClusterHaSettingOK) GetPayload() []*models.WithTaskClusterSettings {
	return o.Payload
}

func (o *UpdateClusterHaSettingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterHaSettingBadRequest creates a UpdateClusterHaSettingBadRequest with default headers values
func NewUpdateClusterHaSettingBadRequest() *UpdateClusterHaSettingBadRequest {
	return &UpdateClusterHaSettingBadRequest{}
}

/* UpdateClusterHaSettingBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateClusterHaSettingBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateClusterHaSettingBadRequest) Error() string {
	return fmt.Sprintf("[POST /update-cluster-ha-setting][%d] updateClusterHaSettingBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateClusterHaSettingBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateClusterHaSettingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterHaSettingNotFound creates a UpdateClusterHaSettingNotFound with default headers values
func NewUpdateClusterHaSettingNotFound() *UpdateClusterHaSettingNotFound {
	return &UpdateClusterHaSettingNotFound{}
}

/* UpdateClusterHaSettingNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateClusterHaSettingNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateClusterHaSettingNotFound) Error() string {
	return fmt.Sprintf("[POST /update-cluster-ha-setting][%d] updateClusterHaSettingNotFound  %+v", 404, o.Payload)
}
func (o *UpdateClusterHaSettingNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateClusterHaSettingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterHaSettingInternalServerError creates a UpdateClusterHaSettingInternalServerError with default headers values
func NewUpdateClusterHaSettingInternalServerError() *UpdateClusterHaSettingInternalServerError {
	return &UpdateClusterHaSettingInternalServerError{}
}

/* UpdateClusterHaSettingInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateClusterHaSettingInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateClusterHaSettingInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update-cluster-ha-setting][%d] updateClusterHaSettingInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateClusterHaSettingInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateClusterHaSettingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
