// Code generated by go-swagger; DO NOT EDIT.

package replica_vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetReplicaVmsConnectionReader is a Reader for the GetReplicaVmsConnection structure.
type GetReplicaVmsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReplicaVmsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReplicaVmsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetReplicaVmsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetReplicaVmsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetReplicaVmsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReplicaVmsConnectionOK creates a GetReplicaVmsConnectionOK with default headers values
func NewGetReplicaVmsConnectionOK() *GetReplicaVmsConnectionOK {
	return &GetReplicaVmsConnectionOK{}
}

/* GetReplicaVmsConnectionOK describes a response with status code 200, with default header values.

GetReplicaVmsConnectionOK get replica vms connection o k
*/
type GetReplicaVmsConnectionOK struct {
	XTowerRequestID string

	Payload *models.ReplicaVMConnection
}

func (o *GetReplicaVmsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-replica-vms-connection][%d] getReplicaVmsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetReplicaVmsConnectionOK) GetPayload() *models.ReplicaVMConnection {
	return o.Payload
}

func (o *GetReplicaVmsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ReplicaVMConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicaVmsConnectionBadRequest creates a GetReplicaVmsConnectionBadRequest with default headers values
func NewGetReplicaVmsConnectionBadRequest() *GetReplicaVmsConnectionBadRequest {
	return &GetReplicaVmsConnectionBadRequest{}
}

/* GetReplicaVmsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetReplicaVmsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicaVmsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-replica-vms-connection][%d] getReplicaVmsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetReplicaVmsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicaVmsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicaVmsConnectionNotFound creates a GetReplicaVmsConnectionNotFound with default headers values
func NewGetReplicaVmsConnectionNotFound() *GetReplicaVmsConnectionNotFound {
	return &GetReplicaVmsConnectionNotFound{}
}

/* GetReplicaVmsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetReplicaVmsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicaVmsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-replica-vms-connection][%d] getReplicaVmsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetReplicaVmsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicaVmsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicaVmsConnectionInternalServerError creates a GetReplicaVmsConnectionInternalServerError with default headers values
func NewGetReplicaVmsConnectionInternalServerError() *GetReplicaVmsConnectionInternalServerError {
	return &GetReplicaVmsConnectionInternalServerError{}
}

/* GetReplicaVmsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetReplicaVmsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicaVmsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-replica-vms-connection][%d] getReplicaVmsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetReplicaVmsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicaVmsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
