// Code generated by go-swagger; DO NOT EDIT.

package snapshot_plan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetSnapshotPlansConnectionReader is a Reader for the GetSnapshotPlansConnection structure.
type GetSnapshotPlansConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnapshotPlansConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSnapshotPlansConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetSnapshotPlansConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetSnapshotPlansConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetSnapshotPlansConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSnapshotPlansConnectionOK creates a GetSnapshotPlansConnectionOK with default headers values
func NewGetSnapshotPlansConnectionOK() *GetSnapshotPlansConnectionOK {
	return &GetSnapshotPlansConnectionOK{}
}

/* GetSnapshotPlansConnectionOK describes a response with status code 200, with default header values.

GetSnapshotPlansConnectionOK get snapshot plans connection o k
*/
type GetSnapshotPlansConnectionOK struct {
	XTowerRequestID string

	Payload *models.SnapshotPlanConnection
}

func (o *GetSnapshotPlansConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-snapshot-plans-connection][%d] getSnapshotPlansConnectionOK  %+v", 200, o.Payload)
}
func (o *GetSnapshotPlansConnectionOK) GetPayload() *models.SnapshotPlanConnection {
	return o.Payload
}

func (o *GetSnapshotPlansConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.SnapshotPlanConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnapshotPlansConnectionBadRequest creates a GetSnapshotPlansConnectionBadRequest with default headers values
func NewGetSnapshotPlansConnectionBadRequest() *GetSnapshotPlansConnectionBadRequest {
	return &GetSnapshotPlansConnectionBadRequest{}
}

/* GetSnapshotPlansConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSnapshotPlansConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnapshotPlansConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-snapshot-plans-connection][%d] getSnapshotPlansConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetSnapshotPlansConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnapshotPlansConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnapshotPlansConnectionNotFound creates a GetSnapshotPlansConnectionNotFound with default headers values
func NewGetSnapshotPlansConnectionNotFound() *GetSnapshotPlansConnectionNotFound {
	return &GetSnapshotPlansConnectionNotFound{}
}

/* GetSnapshotPlansConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSnapshotPlansConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnapshotPlansConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-snapshot-plans-connection][%d] getSnapshotPlansConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetSnapshotPlansConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnapshotPlansConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnapshotPlansConnectionInternalServerError creates a GetSnapshotPlansConnectionInternalServerError with default headers values
func NewGetSnapshotPlansConnectionInternalServerError() *GetSnapshotPlansConnectionInternalServerError {
	return &GetSnapshotPlansConnectionInternalServerError{}
}

/* GetSnapshotPlansConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetSnapshotPlansConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnapshotPlansConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-snapshot-plans-connection][%d] getSnapshotPlansConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSnapshotPlansConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnapshotPlansConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
