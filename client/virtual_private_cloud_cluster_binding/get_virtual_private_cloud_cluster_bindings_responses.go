// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_cluster_binding

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudClusterBindingsReader is a Reader for the GetVirtualPrivateCloudClusterBindings structure.
type GetVirtualPrivateCloudClusterBindingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudClusterBindingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudClusterBindingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudClusterBindingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudClusterBindingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudClusterBindingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudClusterBindingsOK creates a GetVirtualPrivateCloudClusterBindingsOK with default headers values
func NewGetVirtualPrivateCloudClusterBindingsOK() *GetVirtualPrivateCloudClusterBindingsOK {
	return &GetVirtualPrivateCloudClusterBindingsOK{}
}

/* GetVirtualPrivateCloudClusterBindingsOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudClusterBindingsOK get virtual private cloud cluster bindings o k
*/
type GetVirtualPrivateCloudClusterBindingsOK struct {
	XTowerRequestID string

	Payload []*models.VirtualPrivateCloudClusterBinding
}

func (o *GetVirtualPrivateCloudClusterBindingsOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-cluster-bindings][%d] getVirtualPrivateCloudClusterBindingsOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudClusterBindingsOK) GetPayload() []*models.VirtualPrivateCloudClusterBinding {
	return o.Payload
}

func (o *GetVirtualPrivateCloudClusterBindingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudClusterBindingsBadRequest creates a GetVirtualPrivateCloudClusterBindingsBadRequest with default headers values
func NewGetVirtualPrivateCloudClusterBindingsBadRequest() *GetVirtualPrivateCloudClusterBindingsBadRequest {
	return &GetVirtualPrivateCloudClusterBindingsBadRequest{}
}

/* GetVirtualPrivateCloudClusterBindingsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudClusterBindingsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudClusterBindingsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-cluster-bindings][%d] getVirtualPrivateCloudClusterBindingsBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudClusterBindingsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudClusterBindingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudClusterBindingsNotFound creates a GetVirtualPrivateCloudClusterBindingsNotFound with default headers values
func NewGetVirtualPrivateCloudClusterBindingsNotFound() *GetVirtualPrivateCloudClusterBindingsNotFound {
	return &GetVirtualPrivateCloudClusterBindingsNotFound{}
}

/* GetVirtualPrivateCloudClusterBindingsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudClusterBindingsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudClusterBindingsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-cluster-bindings][%d] getVirtualPrivateCloudClusterBindingsNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudClusterBindingsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudClusterBindingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudClusterBindingsInternalServerError creates a GetVirtualPrivateCloudClusterBindingsInternalServerError with default headers values
func NewGetVirtualPrivateCloudClusterBindingsInternalServerError() *GetVirtualPrivateCloudClusterBindingsInternalServerError {
	return &GetVirtualPrivateCloudClusterBindingsInternalServerError{}
}

/* GetVirtualPrivateCloudClusterBindingsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudClusterBindingsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudClusterBindingsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-cluster-bindings][%d] getVirtualPrivateCloudClusterBindingsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudClusterBindingsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudClusterBindingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
