// Code generated by go-swagger; DO NOT EDIT.

package disk

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetDisksReader is a Reader for the GetDisks structure.
type GetDisksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDisksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDisksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetDisksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetDisksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetDisksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDisksOK creates a GetDisksOK with default headers values
func NewGetDisksOK() *GetDisksOK {
	return &GetDisksOK{}
}

/* GetDisksOK describes a response with status code 200, with default header values.

GetDisksOK get disks o k
*/
type GetDisksOK struct {
	XTowerRequestID string

	Payload []*models.Disk
}

func (o *GetDisksOK) Error() string {
	return fmt.Sprintf("[POST /get-disks][%d] getDisksOK  %+v", 200, o.Payload)
}
func (o *GetDisksOK) GetPayload() []*models.Disk {
	return o.Payload
}

func (o *GetDisksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDisksBadRequest creates a GetDisksBadRequest with default headers values
func NewGetDisksBadRequest() *GetDisksBadRequest {
	return &GetDisksBadRequest{}
}

/* GetDisksBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetDisksBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetDisksBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-disks][%d] getDisksBadRequest  %+v", 400, o.Payload)
}
func (o *GetDisksBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDisksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDisksNotFound creates a GetDisksNotFound with default headers values
func NewGetDisksNotFound() *GetDisksNotFound {
	return &GetDisksNotFound{}
}

/* GetDisksNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetDisksNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetDisksNotFound) Error() string {
	return fmt.Sprintf("[POST /get-disks][%d] getDisksNotFound  %+v", 404, o.Payload)
}
func (o *GetDisksNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDisksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDisksInternalServerError creates a GetDisksInternalServerError with default headers values
func NewGetDisksInternalServerError() *GetDisksInternalServerError {
	return &GetDisksInternalServerError{}
}

/* GetDisksInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetDisksInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetDisksInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-disks][%d] getDisksInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDisksInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetDisksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
