// Code generated by go-swagger; DO NOT EDIT.

package consistency_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// CreateConsistencyGroupReader is a Reader for the CreateConsistencyGroup structure.
type CreateConsistencyGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateConsistencyGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateConsistencyGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewCreateConsistencyGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewCreateConsistencyGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewCreateConsistencyGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateConsistencyGroupOK creates a CreateConsistencyGroupOK with default headers values
func NewCreateConsistencyGroupOK() *CreateConsistencyGroupOK {
	return &CreateConsistencyGroupOK{}
}

/* CreateConsistencyGroupOK describes a response with status code 200, with default header values.

CreateConsistencyGroupOK create consistency group o k
*/
type CreateConsistencyGroupOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskConsistencyGroup
}

func (o *CreateConsistencyGroupOK) Error() string {
	return fmt.Sprintf("[POST /create-consistency-group][%d] createConsistencyGroupOK  %+v", 200, o.Payload)
}
func (o *CreateConsistencyGroupOK) GetPayload() []*models.WithTaskConsistencyGroup {
	return o.Payload
}

func (o *CreateConsistencyGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConsistencyGroupBadRequest creates a CreateConsistencyGroupBadRequest with default headers values
func NewCreateConsistencyGroupBadRequest() *CreateConsistencyGroupBadRequest {
	return &CreateConsistencyGroupBadRequest{}
}

/* CreateConsistencyGroupBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateConsistencyGroupBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateConsistencyGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /create-consistency-group][%d] createConsistencyGroupBadRequest  %+v", 400, o.Payload)
}
func (o *CreateConsistencyGroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateConsistencyGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConsistencyGroupNotFound creates a CreateConsistencyGroupNotFound with default headers values
func NewCreateConsistencyGroupNotFound() *CreateConsistencyGroupNotFound {
	return &CreateConsistencyGroupNotFound{}
}

/* CreateConsistencyGroupNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateConsistencyGroupNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateConsistencyGroupNotFound) Error() string {
	return fmt.Sprintf("[POST /create-consistency-group][%d] createConsistencyGroupNotFound  %+v", 404, o.Payload)
}
func (o *CreateConsistencyGroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateConsistencyGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConsistencyGroupInternalServerError creates a CreateConsistencyGroupInternalServerError with default headers values
func NewCreateConsistencyGroupInternalServerError() *CreateConsistencyGroupInternalServerError {
	return &CreateConsistencyGroupInternalServerError{}
}

/* CreateConsistencyGroupInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateConsistencyGroupInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateConsistencyGroupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /create-consistency-group][%d] createConsistencyGroupInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateConsistencyGroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateConsistencyGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
