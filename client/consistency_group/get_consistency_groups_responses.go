// Code generated by go-swagger; DO NOT EDIT.

package consistency_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetConsistencyGroupsReader is a Reader for the GetConsistencyGroups structure.
type GetConsistencyGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConsistencyGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConsistencyGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetConsistencyGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetConsistencyGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetConsistencyGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConsistencyGroupsOK creates a GetConsistencyGroupsOK with default headers values
func NewGetConsistencyGroupsOK() *GetConsistencyGroupsOK {
	return &GetConsistencyGroupsOK{}
}

/* GetConsistencyGroupsOK describes a response with status code 200, with default header values.

GetConsistencyGroupsOK get consistency groups o k
*/
type GetConsistencyGroupsOK struct {
	XTowerRequestID string

	Payload []*models.ConsistencyGroup
}

func (o *GetConsistencyGroupsOK) Error() string {
	return fmt.Sprintf("[POST /get-consistency-groups][%d] getConsistencyGroupsOK  %+v", 200, o.Payload)
}
func (o *GetConsistencyGroupsOK) GetPayload() []*models.ConsistencyGroup {
	return o.Payload
}

func (o *GetConsistencyGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConsistencyGroupsBadRequest creates a GetConsistencyGroupsBadRequest with default headers values
func NewGetConsistencyGroupsBadRequest() *GetConsistencyGroupsBadRequest {
	return &GetConsistencyGroupsBadRequest{}
}

/* GetConsistencyGroupsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetConsistencyGroupsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetConsistencyGroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-consistency-groups][%d] getConsistencyGroupsBadRequest  %+v", 400, o.Payload)
}
func (o *GetConsistencyGroupsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConsistencyGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConsistencyGroupsNotFound creates a GetConsistencyGroupsNotFound with default headers values
func NewGetConsistencyGroupsNotFound() *GetConsistencyGroupsNotFound {
	return &GetConsistencyGroupsNotFound{}
}

/* GetConsistencyGroupsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetConsistencyGroupsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetConsistencyGroupsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-consistency-groups][%d] getConsistencyGroupsNotFound  %+v", 404, o.Payload)
}
func (o *GetConsistencyGroupsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConsistencyGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConsistencyGroupsInternalServerError creates a GetConsistencyGroupsInternalServerError with default headers values
func NewGetConsistencyGroupsInternalServerError() *GetConsistencyGroupsInternalServerError {
	return &GetConsistencyGroupsInternalServerError{}
}

/* GetConsistencyGroupsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetConsistencyGroupsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetConsistencyGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-consistency-groups][%d] getConsistencyGroupsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetConsistencyGroupsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConsistencyGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
