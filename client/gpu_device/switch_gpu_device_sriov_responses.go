// Code generated by go-swagger; DO NOT EDIT.

package gpu_device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// SwitchGpuDeviceSriovReader is a Reader for the SwitchGpuDeviceSriov structure.
type SwitchGpuDeviceSriovReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SwitchGpuDeviceSriovReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSwitchGpuDeviceSriovOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 304:
		result := NewSwitchGpuDeviceSriovNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 400:
		result := NewSwitchGpuDeviceSriovBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewSwitchGpuDeviceSriovNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewSwitchGpuDeviceSriovInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSwitchGpuDeviceSriovOK creates a SwitchGpuDeviceSriovOK with default headers values
func NewSwitchGpuDeviceSriovOK() *SwitchGpuDeviceSriovOK {
	return &SwitchGpuDeviceSriovOK{}
}

/* SwitchGpuDeviceSriovOK describes a response with status code 200, with default header values.

SwitchGpuDeviceSriovOK switch gpu device sriov o k
*/
type SwitchGpuDeviceSriovOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskGpuDevice
}

func (o *SwitchGpuDeviceSriovOK) Error() string {
	return fmt.Sprintf("[POST /switch-gpu-device-sriov][%d] switchGpuDeviceSriovOK  %+v", 200, o.Payload)
}
func (o *SwitchGpuDeviceSriovOK) GetPayload() []*models.WithTaskGpuDevice {
	return o.Payload
}

func (o *SwitchGpuDeviceSriovOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSwitchGpuDeviceSriovNotModified creates a SwitchGpuDeviceSriovNotModified with default headers values
func NewSwitchGpuDeviceSriovNotModified() *SwitchGpuDeviceSriovNotModified {
	return &SwitchGpuDeviceSriovNotModified{}
}

/* SwitchGpuDeviceSriovNotModified describes a response with status code 304, with default header values.

Not modified
*/
type SwitchGpuDeviceSriovNotModified struct {
}

func (o *SwitchGpuDeviceSriovNotModified) Error() string {
	return fmt.Sprintf("[POST /switch-gpu-device-sriov][%d] switchGpuDeviceSriovNotModified ", 304)
}

func (o *SwitchGpuDeviceSriovNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSwitchGpuDeviceSriovBadRequest creates a SwitchGpuDeviceSriovBadRequest with default headers values
func NewSwitchGpuDeviceSriovBadRequest() *SwitchGpuDeviceSriovBadRequest {
	return &SwitchGpuDeviceSriovBadRequest{}
}

/* SwitchGpuDeviceSriovBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SwitchGpuDeviceSriovBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *SwitchGpuDeviceSriovBadRequest) Error() string {
	return fmt.Sprintf("[POST /switch-gpu-device-sriov][%d] switchGpuDeviceSriovBadRequest  %+v", 400, o.Payload)
}
func (o *SwitchGpuDeviceSriovBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *SwitchGpuDeviceSriovBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSwitchGpuDeviceSriovNotFound creates a SwitchGpuDeviceSriovNotFound with default headers values
func NewSwitchGpuDeviceSriovNotFound() *SwitchGpuDeviceSriovNotFound {
	return &SwitchGpuDeviceSriovNotFound{}
}

/* SwitchGpuDeviceSriovNotFound describes a response with status code 404, with default header values.

Not found
*/
type SwitchGpuDeviceSriovNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *SwitchGpuDeviceSriovNotFound) Error() string {
	return fmt.Sprintf("[POST /switch-gpu-device-sriov][%d] switchGpuDeviceSriovNotFound  %+v", 404, o.Payload)
}
func (o *SwitchGpuDeviceSriovNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *SwitchGpuDeviceSriovNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSwitchGpuDeviceSriovInternalServerError creates a SwitchGpuDeviceSriovInternalServerError with default headers values
func NewSwitchGpuDeviceSriovInternalServerError() *SwitchGpuDeviceSriovInternalServerError {
	return &SwitchGpuDeviceSriovInternalServerError{}
}

/* SwitchGpuDeviceSriovInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SwitchGpuDeviceSriovInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *SwitchGpuDeviceSriovInternalServerError) Error() string {
	return fmt.Sprintf("[POST /switch-gpu-device-sriov][%d] switchGpuDeviceSriovInternalServerError  %+v", 500, o.Payload)
}
func (o *SwitchGpuDeviceSriovInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *SwitchGpuDeviceSriovInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
