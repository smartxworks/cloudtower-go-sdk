// Code generated by go-swagger; DO NOT EDIT.

package gpu_device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetGpuDevicesConnectionReader is a Reader for the GetGpuDevicesConnection structure.
type GetGpuDevicesConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGpuDevicesConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGpuDevicesConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetGpuDevicesConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetGpuDevicesConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetGpuDevicesConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGpuDevicesConnectionOK creates a GetGpuDevicesConnectionOK with default headers values
func NewGetGpuDevicesConnectionOK() *GetGpuDevicesConnectionOK {
	return &GetGpuDevicesConnectionOK{}
}

/* GetGpuDevicesConnectionOK describes a response with status code 200, with default header values.

GetGpuDevicesConnectionOK get gpu devices connection o k
*/
type GetGpuDevicesConnectionOK struct {
	XTowerRequestID string

	Payload *models.GpuDeviceConnection
}

func (o *GetGpuDevicesConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-gpu-devices-connection][%d] getGpuDevicesConnectionOK  %+v", 200, o.Payload)
}
func (o *GetGpuDevicesConnectionOK) GetPayload() *models.GpuDeviceConnection {
	return o.Payload
}

func (o *GetGpuDevicesConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.GpuDeviceConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGpuDevicesConnectionBadRequest creates a GetGpuDevicesConnectionBadRequest with default headers values
func NewGetGpuDevicesConnectionBadRequest() *GetGpuDevicesConnectionBadRequest {
	return &GetGpuDevicesConnectionBadRequest{}
}

/* GetGpuDevicesConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetGpuDevicesConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetGpuDevicesConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-gpu-devices-connection][%d] getGpuDevicesConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetGpuDevicesConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGpuDevicesConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGpuDevicesConnectionNotFound creates a GetGpuDevicesConnectionNotFound with default headers values
func NewGetGpuDevicesConnectionNotFound() *GetGpuDevicesConnectionNotFound {
	return &GetGpuDevicesConnectionNotFound{}
}

/* GetGpuDevicesConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetGpuDevicesConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetGpuDevicesConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-gpu-devices-connection][%d] getGpuDevicesConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetGpuDevicesConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGpuDevicesConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGpuDevicesConnectionInternalServerError creates a GetGpuDevicesConnectionInternalServerError with default headers values
func NewGetGpuDevicesConnectionInternalServerError() *GetGpuDevicesConnectionInternalServerError {
	return &GetGpuDevicesConnectionInternalServerError{}
}

/* GetGpuDevicesConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetGpuDevicesConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetGpuDevicesConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-gpu-devices-connection][%d] getGpuDevicesConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetGpuDevicesConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGpuDevicesConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
