// Code generated by go-swagger; DO NOT EDIT.

package vm_entity_filter_result

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVMEntityFilterResultsReader is a Reader for the GetVMEntityFilterResults structure.
type GetVMEntityFilterResultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMEntityFilterResultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMEntityFilterResultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVMEntityFilterResultsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVMEntityFilterResultsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVMEntityFilterResultsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVMEntityFilterResultsOK creates a GetVMEntityFilterResultsOK with default headers values
func NewGetVMEntityFilterResultsOK() *GetVMEntityFilterResultsOK {
	return &GetVMEntityFilterResultsOK{}
}

/* GetVMEntityFilterResultsOK describes a response with status code 200, with default header values.

GetVMEntityFilterResultsOK get Vm entity filter results o k
*/
type GetVMEntityFilterResultsOK struct {
	XTowerRequestID string

	Payload []*models.VMEntityFilterResult
}

func (o *GetVMEntityFilterResultsOK) Error() string {
	return fmt.Sprintf("[POST /get-vm-entity-filter-results][%d] getVmEntityFilterResultsOK  %+v", 200, o.Payload)
}
func (o *GetVMEntityFilterResultsOK) GetPayload() []*models.VMEntityFilterResult {
	return o.Payload
}

func (o *GetVMEntityFilterResultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMEntityFilterResultsBadRequest creates a GetVMEntityFilterResultsBadRequest with default headers values
func NewGetVMEntityFilterResultsBadRequest() *GetVMEntityFilterResultsBadRequest {
	return &GetVMEntityFilterResultsBadRequest{}
}

/* GetVMEntityFilterResultsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVMEntityFilterResultsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMEntityFilterResultsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-vm-entity-filter-results][%d] getVmEntityFilterResultsBadRequest  %+v", 400, o.Payload)
}
func (o *GetVMEntityFilterResultsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMEntityFilterResultsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMEntityFilterResultsNotFound creates a GetVMEntityFilterResultsNotFound with default headers values
func NewGetVMEntityFilterResultsNotFound() *GetVMEntityFilterResultsNotFound {
	return &GetVMEntityFilterResultsNotFound{}
}

/* GetVMEntityFilterResultsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVMEntityFilterResultsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMEntityFilterResultsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-vm-entity-filter-results][%d] getVmEntityFilterResultsNotFound  %+v", 404, o.Payload)
}
func (o *GetVMEntityFilterResultsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMEntityFilterResultsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMEntityFilterResultsInternalServerError creates a GetVMEntityFilterResultsInternalServerError with default headers values
func NewGetVMEntityFilterResultsInternalServerError() *GetVMEntityFilterResultsInternalServerError {
	return &GetVMEntityFilterResultsInternalServerError{}
}

/* GetVMEntityFilterResultsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVMEntityFilterResultsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMEntityFilterResultsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-vm-entity-filter-results][%d] getVmEntityFilterResultsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVMEntityFilterResultsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMEntityFilterResultsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
