// Code generated by go-swagger; DO NOT EDIT.

package vm_entity_filter_result

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVMEntityFilterResultsConnectionReader is a Reader for the GetVMEntityFilterResultsConnection structure.
type GetVMEntityFilterResultsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMEntityFilterResultsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMEntityFilterResultsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVMEntityFilterResultsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVMEntityFilterResultsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVMEntityFilterResultsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVMEntityFilterResultsConnectionOK creates a GetVMEntityFilterResultsConnectionOK with default headers values
func NewGetVMEntityFilterResultsConnectionOK() *GetVMEntityFilterResultsConnectionOK {
	return &GetVMEntityFilterResultsConnectionOK{}
}

/* GetVMEntityFilterResultsConnectionOK describes a response with status code 200, with default header values.

GetVMEntityFilterResultsConnectionOK get Vm entity filter results connection o k
*/
type GetVMEntityFilterResultsConnectionOK struct {
	XTowerRequestID string

	Payload *models.VMEntityFilterResultConnection
}

func (o *GetVMEntityFilterResultsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-vm-entity-filter-results-connection][%d] getVmEntityFilterResultsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetVMEntityFilterResultsConnectionOK) GetPayload() *models.VMEntityFilterResultConnection {
	return o.Payload
}

func (o *GetVMEntityFilterResultsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.VMEntityFilterResultConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMEntityFilterResultsConnectionBadRequest creates a GetVMEntityFilterResultsConnectionBadRequest with default headers values
func NewGetVMEntityFilterResultsConnectionBadRequest() *GetVMEntityFilterResultsConnectionBadRequest {
	return &GetVMEntityFilterResultsConnectionBadRequest{}
}

/* GetVMEntityFilterResultsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVMEntityFilterResultsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMEntityFilterResultsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-vm-entity-filter-results-connection][%d] getVmEntityFilterResultsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetVMEntityFilterResultsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMEntityFilterResultsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMEntityFilterResultsConnectionNotFound creates a GetVMEntityFilterResultsConnectionNotFound with default headers values
func NewGetVMEntityFilterResultsConnectionNotFound() *GetVMEntityFilterResultsConnectionNotFound {
	return &GetVMEntityFilterResultsConnectionNotFound{}
}

/* GetVMEntityFilterResultsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVMEntityFilterResultsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMEntityFilterResultsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-vm-entity-filter-results-connection][%d] getVmEntityFilterResultsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetVMEntityFilterResultsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMEntityFilterResultsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMEntityFilterResultsConnectionInternalServerError creates a GetVMEntityFilterResultsConnectionInternalServerError with default headers values
func NewGetVMEntityFilterResultsConnectionInternalServerError() *GetVMEntityFilterResultsConnectionInternalServerError {
	return &GetVMEntityFilterResultsConnectionInternalServerError{}
}

/* GetVMEntityFilterResultsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVMEntityFilterResultsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMEntityFilterResultsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-vm-entity-filter-results-connection][%d] getVmEntityFilterResultsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVMEntityFilterResultsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMEntityFilterResultsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
