// Code generated by go-swagger; DO NOT EDIT.

package everoute_cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetEverouteClustersConnectionReader is a Reader for the GetEverouteClustersConnection structure.
type GetEverouteClustersConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEverouteClustersConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEverouteClustersConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetEverouteClustersConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetEverouteClustersConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetEverouteClustersConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEverouteClustersConnectionOK creates a GetEverouteClustersConnectionOK with default headers values
func NewGetEverouteClustersConnectionOK() *GetEverouteClustersConnectionOK {
	return &GetEverouteClustersConnectionOK{}
}

/* GetEverouteClustersConnectionOK describes a response with status code 200, with default header values.

GetEverouteClustersConnectionOK get everoute clusters connection o k
*/
type GetEverouteClustersConnectionOK struct {
	XTowerRequestID string

	Payload *models.EverouteClusterConnection
}

func (o *GetEverouteClustersConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-everoute-clusters-connection][%d] getEverouteClustersConnectionOK  %+v", 200, o.Payload)
}
func (o *GetEverouteClustersConnectionOK) GetPayload() *models.EverouteClusterConnection {
	return o.Payload
}

func (o *GetEverouteClustersConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.EverouteClusterConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEverouteClustersConnectionBadRequest creates a GetEverouteClustersConnectionBadRequest with default headers values
func NewGetEverouteClustersConnectionBadRequest() *GetEverouteClustersConnectionBadRequest {
	return &GetEverouteClustersConnectionBadRequest{}
}

/* GetEverouteClustersConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetEverouteClustersConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetEverouteClustersConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-everoute-clusters-connection][%d] getEverouteClustersConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetEverouteClustersConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEverouteClustersConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEverouteClustersConnectionNotFound creates a GetEverouteClustersConnectionNotFound with default headers values
func NewGetEverouteClustersConnectionNotFound() *GetEverouteClustersConnectionNotFound {
	return &GetEverouteClustersConnectionNotFound{}
}

/* GetEverouteClustersConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetEverouteClustersConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetEverouteClustersConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-everoute-clusters-connection][%d] getEverouteClustersConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetEverouteClustersConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEverouteClustersConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEverouteClustersConnectionInternalServerError creates a GetEverouteClustersConnectionInternalServerError with default headers values
func NewGetEverouteClustersConnectionInternalServerError() *GetEverouteClustersConnectionInternalServerError {
	return &GetEverouteClustersConnectionInternalServerError{}
}

/* GetEverouteClustersConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetEverouteClustersConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetEverouteClustersConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-everoute-clusters-connection][%d] getEverouteClustersConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetEverouteClustersConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetEverouteClustersConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
