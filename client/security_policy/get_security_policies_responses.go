// Code generated by go-swagger; DO NOT EDIT.

package security_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetSecurityPoliciesReader is a Reader for the GetSecurityPolicies structure.
type GetSecurityPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecurityPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecurityPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetSecurityPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetSecurityPoliciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetSecurityPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSecurityPoliciesOK creates a GetSecurityPoliciesOK with default headers values
func NewGetSecurityPoliciesOK() *GetSecurityPoliciesOK {
	return &GetSecurityPoliciesOK{}
}

/* GetSecurityPoliciesOK describes a response with status code 200, with default header values.

GetSecurityPoliciesOK get security policies o k
*/
type GetSecurityPoliciesOK struct {
	XTowerRequestID string

	Payload []*models.SecurityPolicy
}

func (o *GetSecurityPoliciesOK) Error() string {
	return fmt.Sprintf("[POST /get-security-policies][%d] getSecurityPoliciesOK  %+v", 200, o.Payload)
}
func (o *GetSecurityPoliciesOK) GetPayload() []*models.SecurityPolicy {
	return o.Payload
}

func (o *GetSecurityPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityPoliciesBadRequest creates a GetSecurityPoliciesBadRequest with default headers values
func NewGetSecurityPoliciesBadRequest() *GetSecurityPoliciesBadRequest {
	return &GetSecurityPoliciesBadRequest{}
}

/* GetSecurityPoliciesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSecurityPoliciesBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSecurityPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-security-policies][%d] getSecurityPoliciesBadRequest  %+v", 400, o.Payload)
}
func (o *GetSecurityPoliciesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSecurityPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityPoliciesNotFound creates a GetSecurityPoliciesNotFound with default headers values
func NewGetSecurityPoliciesNotFound() *GetSecurityPoliciesNotFound {
	return &GetSecurityPoliciesNotFound{}
}

/* GetSecurityPoliciesNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSecurityPoliciesNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSecurityPoliciesNotFound) Error() string {
	return fmt.Sprintf("[POST /get-security-policies][%d] getSecurityPoliciesNotFound  %+v", 404, o.Payload)
}
func (o *GetSecurityPoliciesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSecurityPoliciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityPoliciesInternalServerError creates a GetSecurityPoliciesInternalServerError with default headers values
func NewGetSecurityPoliciesInternalServerError() *GetSecurityPoliciesInternalServerError {
	return &GetSecurityPoliciesInternalServerError{}
}

/* GetSecurityPoliciesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetSecurityPoliciesInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSecurityPoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-security-policies][%d] getSecurityPoliciesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSecurityPoliciesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSecurityPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
