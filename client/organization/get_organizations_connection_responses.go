// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetOrganizationsConnectionReader is a Reader for the GetOrganizationsConnection structure.
type GetOrganizationsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetOrganizationsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetOrganizationsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetOrganizationsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrganizationsConnectionOK creates a GetOrganizationsConnectionOK with default headers values
func NewGetOrganizationsConnectionOK() *GetOrganizationsConnectionOK {
	return &GetOrganizationsConnectionOK{}
}

/* GetOrganizationsConnectionOK describes a response with status code 200, with default header values.

GetOrganizationsConnectionOK get organizations connection o k
*/
type GetOrganizationsConnectionOK struct {
	XTowerRequestID string

	Payload *models.OrganizationConnection
}

func (o *GetOrganizationsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-organizations-connection][%d] getOrganizationsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetOrganizationsConnectionOK) GetPayload() *models.OrganizationConnection {
	return o.Payload
}

func (o *GetOrganizationsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.OrganizationConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsConnectionBadRequest creates a GetOrganizationsConnectionBadRequest with default headers values
func NewGetOrganizationsConnectionBadRequest() *GetOrganizationsConnectionBadRequest {
	return &GetOrganizationsConnectionBadRequest{}
}

/* GetOrganizationsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetOrganizationsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetOrganizationsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-organizations-connection][%d] getOrganizationsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetOrganizationsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsConnectionNotFound creates a GetOrganizationsConnectionNotFound with default headers values
func NewGetOrganizationsConnectionNotFound() *GetOrganizationsConnectionNotFound {
	return &GetOrganizationsConnectionNotFound{}
}

/* GetOrganizationsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetOrganizationsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetOrganizationsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-organizations-connection][%d] getOrganizationsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetOrganizationsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsConnectionInternalServerError creates a GetOrganizationsConnectionInternalServerError with default headers values
func NewGetOrganizationsConnectionInternalServerError() *GetOrganizationsConnectionInternalServerError {
	return &GetOrganizationsConnectionInternalServerError{}
}

/* GetOrganizationsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetOrganizationsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetOrganizationsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-organizations-connection][%d] getOrganizationsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetOrganizationsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetOrganizationsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
