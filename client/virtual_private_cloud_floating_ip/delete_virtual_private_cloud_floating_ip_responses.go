// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_floating_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeleteVirtualPrivateCloudFloatingIPReader is a Reader for the DeleteVirtualPrivateCloudFloatingIP structure.
type DeleteVirtualPrivateCloudFloatingIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVirtualPrivateCloudFloatingIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVirtualPrivateCloudFloatingIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeleteVirtualPrivateCloudFloatingIPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeleteVirtualPrivateCloudFloatingIPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeleteVirtualPrivateCloudFloatingIPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteVirtualPrivateCloudFloatingIPOK creates a DeleteVirtualPrivateCloudFloatingIPOK with default headers values
func NewDeleteVirtualPrivateCloudFloatingIPOK() *DeleteVirtualPrivateCloudFloatingIPOK {
	return &DeleteVirtualPrivateCloudFloatingIPOK{}
}

/* DeleteVirtualPrivateCloudFloatingIPOK describes a response with status code 200, with default header values.

DeleteVirtualPrivateCloudFloatingIPOK delete virtual private cloud floating Ip o k
*/
type DeleteVirtualPrivateCloudFloatingIPOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDeleteVirtualPrivateCloudFloatingIP
}

func (o *DeleteVirtualPrivateCloudFloatingIPOK) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud-floating-ip][%d] deleteVirtualPrivateCloudFloatingIpOK  %+v", 200, o.Payload)
}
func (o *DeleteVirtualPrivateCloudFloatingIPOK) GetPayload() []*models.WithTaskDeleteVirtualPrivateCloudFloatingIP {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudFloatingIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualPrivateCloudFloatingIPBadRequest creates a DeleteVirtualPrivateCloudFloatingIPBadRequest with default headers values
func NewDeleteVirtualPrivateCloudFloatingIPBadRequest() *DeleteVirtualPrivateCloudFloatingIPBadRequest {
	return &DeleteVirtualPrivateCloudFloatingIPBadRequest{}
}

/* DeleteVirtualPrivateCloudFloatingIPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteVirtualPrivateCloudFloatingIPBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteVirtualPrivateCloudFloatingIPBadRequest) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud-floating-ip][%d] deleteVirtualPrivateCloudFloatingIpBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteVirtualPrivateCloudFloatingIPBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudFloatingIPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualPrivateCloudFloatingIPNotFound creates a DeleteVirtualPrivateCloudFloatingIPNotFound with default headers values
func NewDeleteVirtualPrivateCloudFloatingIPNotFound() *DeleteVirtualPrivateCloudFloatingIPNotFound {
	return &DeleteVirtualPrivateCloudFloatingIPNotFound{}
}

/* DeleteVirtualPrivateCloudFloatingIPNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteVirtualPrivateCloudFloatingIPNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteVirtualPrivateCloudFloatingIPNotFound) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud-floating-ip][%d] deleteVirtualPrivateCloudFloatingIpNotFound  %+v", 404, o.Payload)
}
func (o *DeleteVirtualPrivateCloudFloatingIPNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudFloatingIPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualPrivateCloudFloatingIPInternalServerError creates a DeleteVirtualPrivateCloudFloatingIPInternalServerError with default headers values
func NewDeleteVirtualPrivateCloudFloatingIPInternalServerError() *DeleteVirtualPrivateCloudFloatingIPInternalServerError {
	return &DeleteVirtualPrivateCloudFloatingIPInternalServerError{}
}

/* DeleteVirtualPrivateCloudFloatingIPInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteVirtualPrivateCloudFloatingIPInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteVirtualPrivateCloudFloatingIPInternalServerError) Error() string {
	return fmt.Sprintf("[POST /delete-virtual-private-cloud-floating-ip][%d] deleteVirtualPrivateCloudFloatingIpInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteVirtualPrivateCloudFloatingIPInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteVirtualPrivateCloudFloatingIPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
