// Code generated by go-swagger; DO NOT EDIT.

package backup_plan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// BackupRestoreVMInPlaceReader is a Reader for the BackupRestoreVMInPlace structure.
type BackupRestoreVMInPlaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupRestoreVMInPlaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupRestoreVMInPlaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewBackupRestoreVMInPlaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewBackupRestoreVMInPlaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewBackupRestoreVMInPlaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBackupRestoreVMInPlaceOK creates a BackupRestoreVMInPlaceOK with default headers values
func NewBackupRestoreVMInPlaceOK() *BackupRestoreVMInPlaceOK {
	return &BackupRestoreVMInPlaceOK{}
}

/* BackupRestoreVMInPlaceOK describes a response with status code 200, with default header values.

BackupRestoreVMInPlaceOK backup restore Vm in place o k
*/
type BackupRestoreVMInPlaceOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskBackupRestoreExecution
}

func (o *BackupRestoreVMInPlaceOK) Error() string {
	return fmt.Sprintf("[POST /backup-restore-vm-in-place][%d] backupRestoreVmInPlaceOK  %+v", 200, o.Payload)
}
func (o *BackupRestoreVMInPlaceOK) GetPayload() []*models.WithTaskBackupRestoreExecution {
	return o.Payload
}

func (o *BackupRestoreVMInPlaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupRestoreVMInPlaceBadRequest creates a BackupRestoreVMInPlaceBadRequest with default headers values
func NewBackupRestoreVMInPlaceBadRequest() *BackupRestoreVMInPlaceBadRequest {
	return &BackupRestoreVMInPlaceBadRequest{}
}

/* BackupRestoreVMInPlaceBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type BackupRestoreVMInPlaceBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *BackupRestoreVMInPlaceBadRequest) Error() string {
	return fmt.Sprintf("[POST /backup-restore-vm-in-place][%d] backupRestoreVmInPlaceBadRequest  %+v", 400, o.Payload)
}
func (o *BackupRestoreVMInPlaceBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *BackupRestoreVMInPlaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupRestoreVMInPlaceNotFound creates a BackupRestoreVMInPlaceNotFound with default headers values
func NewBackupRestoreVMInPlaceNotFound() *BackupRestoreVMInPlaceNotFound {
	return &BackupRestoreVMInPlaceNotFound{}
}

/* BackupRestoreVMInPlaceNotFound describes a response with status code 404, with default header values.

Not found
*/
type BackupRestoreVMInPlaceNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *BackupRestoreVMInPlaceNotFound) Error() string {
	return fmt.Sprintf("[POST /backup-restore-vm-in-place][%d] backupRestoreVmInPlaceNotFound  %+v", 404, o.Payload)
}
func (o *BackupRestoreVMInPlaceNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *BackupRestoreVMInPlaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupRestoreVMInPlaceInternalServerError creates a BackupRestoreVMInPlaceInternalServerError with default headers values
func NewBackupRestoreVMInPlaceInternalServerError() *BackupRestoreVMInPlaceInternalServerError {
	return &BackupRestoreVMInPlaceInternalServerError{}
}

/* BackupRestoreVMInPlaceInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type BackupRestoreVMInPlaceInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *BackupRestoreVMInPlaceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /backup-restore-vm-in-place][%d] backupRestoreVmInPlaceInternalServerError  %+v", 500, o.Payload)
}
func (o *BackupRestoreVMInPlaceInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *BackupRestoreVMInPlaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
