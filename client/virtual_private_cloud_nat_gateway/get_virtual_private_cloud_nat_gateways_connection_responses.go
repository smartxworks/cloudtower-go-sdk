// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_nat_gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudNatGatewaysConnectionReader is a Reader for the GetVirtualPrivateCloudNatGatewaysConnection structure.
type GetVirtualPrivateCloudNatGatewaysConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudNatGatewaysConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudNatGatewaysConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudNatGatewaysConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudNatGatewaysConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudNatGatewaysConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudNatGatewaysConnectionOK creates a GetVirtualPrivateCloudNatGatewaysConnectionOK with default headers values
func NewGetVirtualPrivateCloudNatGatewaysConnectionOK() *GetVirtualPrivateCloudNatGatewaysConnectionOK {
	return &GetVirtualPrivateCloudNatGatewaysConnectionOK{}
}

/* GetVirtualPrivateCloudNatGatewaysConnectionOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudNatGatewaysConnectionOK get virtual private cloud nat gateways connection o k
*/
type GetVirtualPrivateCloudNatGatewaysConnectionOK struct {
	XTowerRequestID string

	Payload *models.VirtualPrivateCloudNatGatewayConnection
}

func (o *GetVirtualPrivateCloudNatGatewaysConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-nat-gateways-connection][%d] getVirtualPrivateCloudNatGatewaysConnectionOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudNatGatewaysConnectionOK) GetPayload() *models.VirtualPrivateCloudNatGatewayConnection {
	return o.Payload
}

func (o *GetVirtualPrivateCloudNatGatewaysConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.VirtualPrivateCloudNatGatewayConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudNatGatewaysConnectionBadRequest creates a GetVirtualPrivateCloudNatGatewaysConnectionBadRequest with default headers values
func NewGetVirtualPrivateCloudNatGatewaysConnectionBadRequest() *GetVirtualPrivateCloudNatGatewaysConnectionBadRequest {
	return &GetVirtualPrivateCloudNatGatewaysConnectionBadRequest{}
}

/* GetVirtualPrivateCloudNatGatewaysConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudNatGatewaysConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudNatGatewaysConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-nat-gateways-connection][%d] getVirtualPrivateCloudNatGatewaysConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudNatGatewaysConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudNatGatewaysConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudNatGatewaysConnectionNotFound creates a GetVirtualPrivateCloudNatGatewaysConnectionNotFound with default headers values
func NewGetVirtualPrivateCloudNatGatewaysConnectionNotFound() *GetVirtualPrivateCloudNatGatewaysConnectionNotFound {
	return &GetVirtualPrivateCloudNatGatewaysConnectionNotFound{}
}

/* GetVirtualPrivateCloudNatGatewaysConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudNatGatewaysConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudNatGatewaysConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-nat-gateways-connection][%d] getVirtualPrivateCloudNatGatewaysConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudNatGatewaysConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudNatGatewaysConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudNatGatewaysConnectionInternalServerError creates a GetVirtualPrivateCloudNatGatewaysConnectionInternalServerError with default headers values
func NewGetVirtualPrivateCloudNatGatewaysConnectionInternalServerError() *GetVirtualPrivateCloudNatGatewaysConnectionInternalServerError {
	return &GetVirtualPrivateCloudNatGatewaysConnectionInternalServerError{}
}

/* GetVirtualPrivateCloudNatGatewaysConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudNatGatewaysConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudNatGatewaysConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-nat-gateways-connection][%d] getVirtualPrivateCloudNatGatewaysConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudNatGatewaysConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudNatGatewaysConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
