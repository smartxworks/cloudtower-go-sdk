// Code generated by go-swagger; DO NOT EDIT.

package content_library_image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeleteContentLibraryImageReader is a Reader for the DeleteContentLibraryImage structure.
type DeleteContentLibraryImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteContentLibraryImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteContentLibraryImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeleteContentLibraryImageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeleteContentLibraryImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeleteContentLibraryImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteContentLibraryImageOK creates a DeleteContentLibraryImageOK with default headers values
func NewDeleteContentLibraryImageOK() *DeleteContentLibraryImageOK {
	return &DeleteContentLibraryImageOK{}
}

/* DeleteContentLibraryImageOK describes a response with status code 200, with default header values.

DeleteContentLibraryImageOK delete content library image o k
*/
type DeleteContentLibraryImageOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDeleteContentLibraryImage
}

func (o *DeleteContentLibraryImageOK) Error() string {
	return fmt.Sprintf("[POST /delete-content-library-image][%d] deleteContentLibraryImageOK  %+v", 200, o.Payload)
}
func (o *DeleteContentLibraryImageOK) GetPayload() []*models.WithTaskDeleteContentLibraryImage {
	return o.Payload
}

func (o *DeleteContentLibraryImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentLibraryImageBadRequest creates a DeleteContentLibraryImageBadRequest with default headers values
func NewDeleteContentLibraryImageBadRequest() *DeleteContentLibraryImageBadRequest {
	return &DeleteContentLibraryImageBadRequest{}
}

/* DeleteContentLibraryImageBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteContentLibraryImageBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteContentLibraryImageBadRequest) Error() string {
	return fmt.Sprintf("[POST /delete-content-library-image][%d] deleteContentLibraryImageBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteContentLibraryImageBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentLibraryImageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentLibraryImageNotFound creates a DeleteContentLibraryImageNotFound with default headers values
func NewDeleteContentLibraryImageNotFound() *DeleteContentLibraryImageNotFound {
	return &DeleteContentLibraryImageNotFound{}
}

/* DeleteContentLibraryImageNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteContentLibraryImageNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteContentLibraryImageNotFound) Error() string {
	return fmt.Sprintf("[POST /delete-content-library-image][%d] deleteContentLibraryImageNotFound  %+v", 404, o.Payload)
}
func (o *DeleteContentLibraryImageNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentLibraryImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentLibraryImageInternalServerError creates a DeleteContentLibraryImageInternalServerError with default headers values
func NewDeleteContentLibraryImageInternalServerError() *DeleteContentLibraryImageInternalServerError {
	return &DeleteContentLibraryImageInternalServerError{}
}

/* DeleteContentLibraryImageInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteContentLibraryImageInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteContentLibraryImageInternalServerError) Error() string {
	return fmt.Sprintf("[POST /delete-content-library-image][%d] deleteContentLibraryImageInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteContentLibraryImageInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteContentLibraryImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
