// Code generated by go-swagger; DO NOT EDIT.

package label

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// AddLabelsToResourcesReader is a Reader for the AddLabelsToResources structure.
type AddLabelsToResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddLabelsToResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddLabelsToResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 304:
		result := NewAddLabelsToResourcesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 400:
		result := NewAddLabelsToResourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewAddLabelsToResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewAddLabelsToResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddLabelsToResourcesOK creates a AddLabelsToResourcesOK with default headers values
func NewAddLabelsToResourcesOK() *AddLabelsToResourcesOK {
	return &AddLabelsToResourcesOK{}
}

/* AddLabelsToResourcesOK describes a response with status code 200, with default header values.

AddLabelsToResourcesOK add labels to resources o k
*/
type AddLabelsToResourcesOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskLabel
}

func (o *AddLabelsToResourcesOK) Error() string {
	return fmt.Sprintf("[POST /add-labels-to-resources][%d] addLabelsToResourcesOK  %+v", 200, o.Payload)
}
func (o *AddLabelsToResourcesOK) GetPayload() []*models.WithTaskLabel {
	return o.Payload
}

func (o *AddLabelsToResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddLabelsToResourcesNotModified creates a AddLabelsToResourcesNotModified with default headers values
func NewAddLabelsToResourcesNotModified() *AddLabelsToResourcesNotModified {
	return &AddLabelsToResourcesNotModified{}
}

/* AddLabelsToResourcesNotModified describes a response with status code 304, with default header values.

Not modified
*/
type AddLabelsToResourcesNotModified struct {
}

func (o *AddLabelsToResourcesNotModified) Error() string {
	return fmt.Sprintf("[POST /add-labels-to-resources][%d] addLabelsToResourcesNotModified ", 304)
}

func (o *AddLabelsToResourcesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddLabelsToResourcesBadRequest creates a AddLabelsToResourcesBadRequest with default headers values
func NewAddLabelsToResourcesBadRequest() *AddLabelsToResourcesBadRequest {
	return &AddLabelsToResourcesBadRequest{}
}

/* AddLabelsToResourcesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddLabelsToResourcesBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AddLabelsToResourcesBadRequest) Error() string {
	return fmt.Sprintf("[POST /add-labels-to-resources][%d] addLabelsToResourcesBadRequest  %+v", 400, o.Payload)
}
func (o *AddLabelsToResourcesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AddLabelsToResourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddLabelsToResourcesNotFound creates a AddLabelsToResourcesNotFound with default headers values
func NewAddLabelsToResourcesNotFound() *AddLabelsToResourcesNotFound {
	return &AddLabelsToResourcesNotFound{}
}

/* AddLabelsToResourcesNotFound describes a response with status code 404, with default header values.

Not found
*/
type AddLabelsToResourcesNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AddLabelsToResourcesNotFound) Error() string {
	return fmt.Sprintf("[POST /add-labels-to-resources][%d] addLabelsToResourcesNotFound  %+v", 404, o.Payload)
}
func (o *AddLabelsToResourcesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AddLabelsToResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddLabelsToResourcesInternalServerError creates a AddLabelsToResourcesInternalServerError with default headers values
func NewAddLabelsToResourcesInternalServerError() *AddLabelsToResourcesInternalServerError {
	return &AddLabelsToResourcesInternalServerError{}
}

/* AddLabelsToResourcesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type AddLabelsToResourcesInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AddLabelsToResourcesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /add-labels-to-resources][%d] addLabelsToResourcesInternalServerError  %+v", 500, o.Payload)
}
func (o *AddLabelsToResourcesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AddLabelsToResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
