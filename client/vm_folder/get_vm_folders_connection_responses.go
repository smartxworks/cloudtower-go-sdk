// Code generated by go-swagger; DO NOT EDIT.

package vm_folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVMFoldersConnectionReader is a Reader for the GetVMFoldersConnection structure.
type GetVMFoldersConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMFoldersConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMFoldersConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVMFoldersConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVMFoldersConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVMFoldersConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVMFoldersConnectionOK creates a GetVMFoldersConnectionOK with default headers values
func NewGetVMFoldersConnectionOK() *GetVMFoldersConnectionOK {
	return &GetVMFoldersConnectionOK{}
}

/* GetVMFoldersConnectionOK describes a response with status code 200, with default header values.

GetVMFoldersConnectionOK get Vm folders connection o k
*/
type GetVMFoldersConnectionOK struct {
	XTowerRequestID string

	Payload *models.VMFolderConnection
}

func (o *GetVMFoldersConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-vm-folders-connection][%d] getVmFoldersConnectionOK  %+v", 200, o.Payload)
}
func (o *GetVMFoldersConnectionOK) GetPayload() *models.VMFolderConnection {
	return o.Payload
}

func (o *GetVMFoldersConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.VMFolderConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMFoldersConnectionBadRequest creates a GetVMFoldersConnectionBadRequest with default headers values
func NewGetVMFoldersConnectionBadRequest() *GetVMFoldersConnectionBadRequest {
	return &GetVMFoldersConnectionBadRequest{}
}

/* GetVMFoldersConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVMFoldersConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMFoldersConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-vm-folders-connection][%d] getVmFoldersConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetVMFoldersConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMFoldersConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMFoldersConnectionNotFound creates a GetVMFoldersConnectionNotFound with default headers values
func NewGetVMFoldersConnectionNotFound() *GetVMFoldersConnectionNotFound {
	return &GetVMFoldersConnectionNotFound{}
}

/* GetVMFoldersConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVMFoldersConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMFoldersConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-vm-folders-connection][%d] getVmFoldersConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetVMFoldersConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMFoldersConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMFoldersConnectionInternalServerError creates a GetVMFoldersConnectionInternalServerError with default headers values
func NewGetVMFoldersConnectionInternalServerError() *GetVMFoldersConnectionInternalServerError {
	return &GetVMFoldersConnectionInternalServerError{}
}

/* GetVMFoldersConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVMFoldersConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMFoldersConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-vm-folders-connection][%d] getVmFoldersConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVMFoldersConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMFoldersConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
