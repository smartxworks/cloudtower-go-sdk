// Code generated by go-swagger; DO NOT EDIT.

package vm_volume_snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVMVolumeSnapshotsConnectionReader is a Reader for the GetVMVolumeSnapshotsConnection structure.
type GetVMVolumeSnapshotsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMVolumeSnapshotsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMVolumeSnapshotsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVMVolumeSnapshotsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVMVolumeSnapshotsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVMVolumeSnapshotsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVMVolumeSnapshotsConnectionOK creates a GetVMVolumeSnapshotsConnectionOK with default headers values
func NewGetVMVolumeSnapshotsConnectionOK() *GetVMVolumeSnapshotsConnectionOK {
	return &GetVMVolumeSnapshotsConnectionOK{}
}

/* GetVMVolumeSnapshotsConnectionOK describes a response with status code 200, with default header values.

GetVMVolumeSnapshotsConnectionOK get Vm volume snapshots connection o k
*/
type GetVMVolumeSnapshotsConnectionOK struct {
	XTowerRequestID string

	Payload *models.VMVolumeSnapshotConnection
}

func (o *GetVMVolumeSnapshotsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-vm-volume-snapshots-connection][%d] getVmVolumeSnapshotsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetVMVolumeSnapshotsConnectionOK) GetPayload() *models.VMVolumeSnapshotConnection {
	return o.Payload
}

func (o *GetVMVolumeSnapshotsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.VMVolumeSnapshotConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMVolumeSnapshotsConnectionBadRequest creates a GetVMVolumeSnapshotsConnectionBadRequest with default headers values
func NewGetVMVolumeSnapshotsConnectionBadRequest() *GetVMVolumeSnapshotsConnectionBadRequest {
	return &GetVMVolumeSnapshotsConnectionBadRequest{}
}

/* GetVMVolumeSnapshotsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVMVolumeSnapshotsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMVolumeSnapshotsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-vm-volume-snapshots-connection][%d] getVmVolumeSnapshotsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetVMVolumeSnapshotsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMVolumeSnapshotsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMVolumeSnapshotsConnectionNotFound creates a GetVMVolumeSnapshotsConnectionNotFound with default headers values
func NewGetVMVolumeSnapshotsConnectionNotFound() *GetVMVolumeSnapshotsConnectionNotFound {
	return &GetVMVolumeSnapshotsConnectionNotFound{}
}

/* GetVMVolumeSnapshotsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVMVolumeSnapshotsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMVolumeSnapshotsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-vm-volume-snapshots-connection][%d] getVmVolumeSnapshotsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetVMVolumeSnapshotsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMVolumeSnapshotsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMVolumeSnapshotsConnectionInternalServerError creates a GetVMVolumeSnapshotsConnectionInternalServerError with default headers values
func NewGetVMVolumeSnapshotsConnectionInternalServerError() *GetVMVolumeSnapshotsConnectionInternalServerError {
	return &GetVMVolumeSnapshotsConnectionInternalServerError{}
}

/* GetVMVolumeSnapshotsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVMVolumeSnapshotsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMVolumeSnapshotsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-vm-volume-snapshots-connection][%d] getVmVolumeSnapshotsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVMVolumeSnapshotsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMVolumeSnapshotsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
