// Code generated by go-swagger; DO NOT EDIT.

package vm_volume_snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVMVolumeSnapshotsReader is a Reader for the GetVMVolumeSnapshots structure.
type GetVMVolumeSnapshotsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMVolumeSnapshotsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMVolumeSnapshotsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVMVolumeSnapshotsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVMVolumeSnapshotsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVMVolumeSnapshotsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVMVolumeSnapshotsOK creates a GetVMVolumeSnapshotsOK with default headers values
func NewGetVMVolumeSnapshotsOK() *GetVMVolumeSnapshotsOK {
	return &GetVMVolumeSnapshotsOK{}
}

/* GetVMVolumeSnapshotsOK describes a response with status code 200, with default header values.

GetVMVolumeSnapshotsOK get Vm volume snapshots o k
*/
type GetVMVolumeSnapshotsOK struct {
	XTowerRequestID string

	Payload []*models.VMVolumeSnapshot
}

func (o *GetVMVolumeSnapshotsOK) Error() string {
	return fmt.Sprintf("[POST /get-vm-volume-snapshots][%d] getVmVolumeSnapshotsOK  %+v", 200, o.Payload)
}
func (o *GetVMVolumeSnapshotsOK) GetPayload() []*models.VMVolumeSnapshot {
	return o.Payload
}

func (o *GetVMVolumeSnapshotsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMVolumeSnapshotsBadRequest creates a GetVMVolumeSnapshotsBadRequest with default headers values
func NewGetVMVolumeSnapshotsBadRequest() *GetVMVolumeSnapshotsBadRequest {
	return &GetVMVolumeSnapshotsBadRequest{}
}

/* GetVMVolumeSnapshotsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVMVolumeSnapshotsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMVolumeSnapshotsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-vm-volume-snapshots][%d] getVmVolumeSnapshotsBadRequest  %+v", 400, o.Payload)
}
func (o *GetVMVolumeSnapshotsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMVolumeSnapshotsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMVolumeSnapshotsNotFound creates a GetVMVolumeSnapshotsNotFound with default headers values
func NewGetVMVolumeSnapshotsNotFound() *GetVMVolumeSnapshotsNotFound {
	return &GetVMVolumeSnapshotsNotFound{}
}

/* GetVMVolumeSnapshotsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVMVolumeSnapshotsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMVolumeSnapshotsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-vm-volume-snapshots][%d] getVmVolumeSnapshotsNotFound  %+v", 404, o.Payload)
}
func (o *GetVMVolumeSnapshotsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMVolumeSnapshotsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMVolumeSnapshotsInternalServerError creates a GetVMVolumeSnapshotsInternalServerError with default headers values
func NewGetVMVolumeSnapshotsInternalServerError() *GetVMVolumeSnapshotsInternalServerError {
	return &GetVMVolumeSnapshotsInternalServerError{}
}

/* GetVMVolumeSnapshotsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVMVolumeSnapshotsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVMVolumeSnapshotsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-vm-volume-snapshots][%d] getVmVolumeSnapshotsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVMVolumeSnapshotsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVMVolumeSnapshotsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
