// Code generated by go-swagger; DO NOT EDIT.

package cloud_tower_application_package

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetCloudTowerApplicationPackagesConnectionReader is a Reader for the GetCloudTowerApplicationPackagesConnection structure.
type GetCloudTowerApplicationPackagesConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCloudTowerApplicationPackagesConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCloudTowerApplicationPackagesConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetCloudTowerApplicationPackagesConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetCloudTowerApplicationPackagesConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetCloudTowerApplicationPackagesConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCloudTowerApplicationPackagesConnectionOK creates a GetCloudTowerApplicationPackagesConnectionOK with default headers values
func NewGetCloudTowerApplicationPackagesConnectionOK() *GetCloudTowerApplicationPackagesConnectionOK {
	return &GetCloudTowerApplicationPackagesConnectionOK{}
}

/* GetCloudTowerApplicationPackagesConnectionOK describes a response with status code 200, with default header values.

GetCloudTowerApplicationPackagesConnectionOK get cloud tower application packages connection o k
*/
type GetCloudTowerApplicationPackagesConnectionOK struct {
	XTowerRequestID string

	Payload *models.CloudTowerApplicationPackageConnection
}

func (o *GetCloudTowerApplicationPackagesConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-cloud-tower-application-packages-connection][%d] getCloudTowerApplicationPackagesConnectionOK  %+v", 200, o.Payload)
}
func (o *GetCloudTowerApplicationPackagesConnectionOK) GetPayload() *models.CloudTowerApplicationPackageConnection {
	return o.Payload
}

func (o *GetCloudTowerApplicationPackagesConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.CloudTowerApplicationPackageConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCloudTowerApplicationPackagesConnectionBadRequest creates a GetCloudTowerApplicationPackagesConnectionBadRequest with default headers values
func NewGetCloudTowerApplicationPackagesConnectionBadRequest() *GetCloudTowerApplicationPackagesConnectionBadRequest {
	return &GetCloudTowerApplicationPackagesConnectionBadRequest{}
}

/* GetCloudTowerApplicationPackagesConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCloudTowerApplicationPackagesConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetCloudTowerApplicationPackagesConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-cloud-tower-application-packages-connection][%d] getCloudTowerApplicationPackagesConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetCloudTowerApplicationPackagesConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCloudTowerApplicationPackagesConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCloudTowerApplicationPackagesConnectionNotFound creates a GetCloudTowerApplicationPackagesConnectionNotFound with default headers values
func NewGetCloudTowerApplicationPackagesConnectionNotFound() *GetCloudTowerApplicationPackagesConnectionNotFound {
	return &GetCloudTowerApplicationPackagesConnectionNotFound{}
}

/* GetCloudTowerApplicationPackagesConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetCloudTowerApplicationPackagesConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetCloudTowerApplicationPackagesConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-cloud-tower-application-packages-connection][%d] getCloudTowerApplicationPackagesConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetCloudTowerApplicationPackagesConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCloudTowerApplicationPackagesConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCloudTowerApplicationPackagesConnectionInternalServerError creates a GetCloudTowerApplicationPackagesConnectionInternalServerError with default headers values
func NewGetCloudTowerApplicationPackagesConnectionInternalServerError() *GetCloudTowerApplicationPackagesConnectionInternalServerError {
	return &GetCloudTowerApplicationPackagesConnectionInternalServerError{}
}

/* GetCloudTowerApplicationPackagesConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetCloudTowerApplicationPackagesConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetCloudTowerApplicationPackagesConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-cloud-tower-application-packages-connection][%d] getCloudTowerApplicationPackagesConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCloudTowerApplicationPackagesConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetCloudTowerApplicationPackagesConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
