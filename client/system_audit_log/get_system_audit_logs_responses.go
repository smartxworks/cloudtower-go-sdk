// Code generated by go-swagger; DO NOT EDIT.

package system_audit_log

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetSystemAuditLogsReader is a Reader for the GetSystemAuditLogs structure.
type GetSystemAuditLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSystemAuditLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSystemAuditLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetSystemAuditLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetSystemAuditLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetSystemAuditLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSystemAuditLogsOK creates a GetSystemAuditLogsOK with default headers values
func NewGetSystemAuditLogsOK() *GetSystemAuditLogsOK {
	return &GetSystemAuditLogsOK{}
}

/* GetSystemAuditLogsOK describes a response with status code 200, with default header values.

GetSystemAuditLogsOK get system audit logs o k
*/
type GetSystemAuditLogsOK struct {
	XTowerRequestID string

	Payload []*models.SystemAuditLog
}

func (o *GetSystemAuditLogsOK) Error() string {
	return fmt.Sprintf("[POST /get-system-audit-logs][%d] getSystemAuditLogsOK  %+v", 200, o.Payload)
}
func (o *GetSystemAuditLogsOK) GetPayload() []*models.SystemAuditLog {
	return o.Payload
}

func (o *GetSystemAuditLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSystemAuditLogsBadRequest creates a GetSystemAuditLogsBadRequest with default headers values
func NewGetSystemAuditLogsBadRequest() *GetSystemAuditLogsBadRequest {
	return &GetSystemAuditLogsBadRequest{}
}

/* GetSystemAuditLogsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSystemAuditLogsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSystemAuditLogsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-system-audit-logs][%d] getSystemAuditLogsBadRequest  %+v", 400, o.Payload)
}
func (o *GetSystemAuditLogsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSystemAuditLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSystemAuditLogsNotFound creates a GetSystemAuditLogsNotFound with default headers values
func NewGetSystemAuditLogsNotFound() *GetSystemAuditLogsNotFound {
	return &GetSystemAuditLogsNotFound{}
}

/* GetSystemAuditLogsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSystemAuditLogsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSystemAuditLogsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-system-audit-logs][%d] getSystemAuditLogsNotFound  %+v", 404, o.Payload)
}
func (o *GetSystemAuditLogsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSystemAuditLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSystemAuditLogsInternalServerError creates a GetSystemAuditLogsInternalServerError with default headers values
func NewGetSystemAuditLogsInternalServerError() *GetSystemAuditLogsInternalServerError {
	return &GetSystemAuditLogsInternalServerError{}
}

/* GetSystemAuditLogsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetSystemAuditLogsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSystemAuditLogsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-system-audit-logs][%d] getSystemAuditLogsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSystemAuditLogsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSystemAuditLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
