// Code generated by go-swagger; DO NOT EDIT.

package report_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetReportTemplatesReader is a Reader for the GetReportTemplates structure.
type GetReportTemplatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReportTemplatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReportTemplatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetReportTemplatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetReportTemplatesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetReportTemplatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReportTemplatesOK creates a GetReportTemplatesOK with default headers values
func NewGetReportTemplatesOK() *GetReportTemplatesOK {
	return &GetReportTemplatesOK{}
}

/* GetReportTemplatesOK describes a response with status code 200, with default header values.

GetReportTemplatesOK get report templates o k
*/
type GetReportTemplatesOK struct {
	XTowerRequestID string

	Payload []*models.ReportTemplate
}

func (o *GetReportTemplatesOK) Error() string {
	return fmt.Sprintf("[POST /get-report-templates][%d] getReportTemplatesOK  %+v", 200, o.Payload)
}
func (o *GetReportTemplatesOK) GetPayload() []*models.ReportTemplate {
	return o.Payload
}

func (o *GetReportTemplatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportTemplatesBadRequest creates a GetReportTemplatesBadRequest with default headers values
func NewGetReportTemplatesBadRequest() *GetReportTemplatesBadRequest {
	return &GetReportTemplatesBadRequest{}
}

/* GetReportTemplatesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetReportTemplatesBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReportTemplatesBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-report-templates][%d] getReportTemplatesBadRequest  %+v", 400, o.Payload)
}
func (o *GetReportTemplatesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReportTemplatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportTemplatesNotFound creates a GetReportTemplatesNotFound with default headers values
func NewGetReportTemplatesNotFound() *GetReportTemplatesNotFound {
	return &GetReportTemplatesNotFound{}
}

/* GetReportTemplatesNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetReportTemplatesNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReportTemplatesNotFound) Error() string {
	return fmt.Sprintf("[POST /get-report-templates][%d] getReportTemplatesNotFound  %+v", 404, o.Payload)
}
func (o *GetReportTemplatesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReportTemplatesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportTemplatesInternalServerError creates a GetReportTemplatesInternalServerError with default headers values
func NewGetReportTemplatesInternalServerError() *GetReportTemplatesInternalServerError {
	return &GetReportTemplatesInternalServerError{}
}

/* GetReportTemplatesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetReportTemplatesInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReportTemplatesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-report-templates][%d] getReportTemplatesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetReportTemplatesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReportTemplatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
