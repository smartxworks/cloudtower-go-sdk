// Code generated by go-swagger; DO NOT EDIT.

package iscsi_lun

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// CloneIscsiLunFromSnapshotReader is a Reader for the CloneIscsiLunFromSnapshot structure.
type CloneIscsiLunFromSnapshotReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloneIscsiLunFromSnapshotReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloneIscsiLunFromSnapshotOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewCloneIscsiLunFromSnapshotBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewCloneIscsiLunFromSnapshotNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewCloneIscsiLunFromSnapshotInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCloneIscsiLunFromSnapshotOK creates a CloneIscsiLunFromSnapshotOK with default headers values
func NewCloneIscsiLunFromSnapshotOK() *CloneIscsiLunFromSnapshotOK {
	return &CloneIscsiLunFromSnapshotOK{}
}

/* CloneIscsiLunFromSnapshotOK describes a response with status code 200, with default header values.

CloneIscsiLunFromSnapshotOK clone iscsi lun from snapshot o k
*/
type CloneIscsiLunFromSnapshotOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskIscsiLun
}

func (o *CloneIscsiLunFromSnapshotOK) Error() string {
	return fmt.Sprintf("[POST /clone-iscsi-lun-from-snapshot][%d] cloneIscsiLunFromSnapshotOK  %+v", 200, o.Payload)
}
func (o *CloneIscsiLunFromSnapshotOK) GetPayload() []*models.WithTaskIscsiLun {
	return o.Payload
}

func (o *CloneIscsiLunFromSnapshotOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneIscsiLunFromSnapshotBadRequest creates a CloneIscsiLunFromSnapshotBadRequest with default headers values
func NewCloneIscsiLunFromSnapshotBadRequest() *CloneIscsiLunFromSnapshotBadRequest {
	return &CloneIscsiLunFromSnapshotBadRequest{}
}

/* CloneIscsiLunFromSnapshotBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CloneIscsiLunFromSnapshotBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CloneIscsiLunFromSnapshotBadRequest) Error() string {
	return fmt.Sprintf("[POST /clone-iscsi-lun-from-snapshot][%d] cloneIscsiLunFromSnapshotBadRequest  %+v", 400, o.Payload)
}
func (o *CloneIscsiLunFromSnapshotBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CloneIscsiLunFromSnapshotBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneIscsiLunFromSnapshotNotFound creates a CloneIscsiLunFromSnapshotNotFound with default headers values
func NewCloneIscsiLunFromSnapshotNotFound() *CloneIscsiLunFromSnapshotNotFound {
	return &CloneIscsiLunFromSnapshotNotFound{}
}

/* CloneIscsiLunFromSnapshotNotFound describes a response with status code 404, with default header values.

Not found
*/
type CloneIscsiLunFromSnapshotNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CloneIscsiLunFromSnapshotNotFound) Error() string {
	return fmt.Sprintf("[POST /clone-iscsi-lun-from-snapshot][%d] cloneIscsiLunFromSnapshotNotFound  %+v", 404, o.Payload)
}
func (o *CloneIscsiLunFromSnapshotNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CloneIscsiLunFromSnapshotNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneIscsiLunFromSnapshotInternalServerError creates a CloneIscsiLunFromSnapshotInternalServerError with default headers values
func NewCloneIscsiLunFromSnapshotInternalServerError() *CloneIscsiLunFromSnapshotInternalServerError {
	return &CloneIscsiLunFromSnapshotInternalServerError{}
}

/* CloneIscsiLunFromSnapshotInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CloneIscsiLunFromSnapshotInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CloneIscsiLunFromSnapshotInternalServerError) Error() string {
	return fmt.Sprintf("[POST /clone-iscsi-lun-from-snapshot][%d] cloneIscsiLunFromSnapshotInternalServerError  %+v", 500, o.Payload)
}
func (o *CloneIscsiLunFromSnapshotInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CloneIscsiLunFromSnapshotInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
