// Code generated by go-swagger; DO NOT EDIT.

package nvmf_namespace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetNvmfNamespacesConnectionReader is a Reader for the GetNvmfNamespacesConnection structure.
type GetNvmfNamespacesConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNvmfNamespacesConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNvmfNamespacesConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetNvmfNamespacesConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetNvmfNamespacesConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetNvmfNamespacesConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNvmfNamespacesConnectionOK creates a GetNvmfNamespacesConnectionOK with default headers values
func NewGetNvmfNamespacesConnectionOK() *GetNvmfNamespacesConnectionOK {
	return &GetNvmfNamespacesConnectionOK{}
}

/* GetNvmfNamespacesConnectionOK describes a response with status code 200, with default header values.

GetNvmfNamespacesConnectionOK get nvmf namespaces connection o k
*/
type GetNvmfNamespacesConnectionOK struct {
	XTowerRequestID string

	Payload *models.NvmfNamespaceConnection
}

func (o *GetNvmfNamespacesConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-namespaces-connection][%d] getNvmfNamespacesConnectionOK  %+v", 200, o.Payload)
}
func (o *GetNvmfNamespacesConnectionOK) GetPayload() *models.NvmfNamespaceConnection {
	return o.Payload
}

func (o *GetNvmfNamespacesConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.NvmfNamespaceConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNvmfNamespacesConnectionBadRequest creates a GetNvmfNamespacesConnectionBadRequest with default headers values
func NewGetNvmfNamespacesConnectionBadRequest() *GetNvmfNamespacesConnectionBadRequest {
	return &GetNvmfNamespacesConnectionBadRequest{}
}

/* GetNvmfNamespacesConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetNvmfNamespacesConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNvmfNamespacesConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-namespaces-connection][%d] getNvmfNamespacesConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetNvmfNamespacesConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNvmfNamespacesConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNvmfNamespacesConnectionNotFound creates a GetNvmfNamespacesConnectionNotFound with default headers values
func NewGetNvmfNamespacesConnectionNotFound() *GetNvmfNamespacesConnectionNotFound {
	return &GetNvmfNamespacesConnectionNotFound{}
}

/* GetNvmfNamespacesConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetNvmfNamespacesConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNvmfNamespacesConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-namespaces-connection][%d] getNvmfNamespacesConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetNvmfNamespacesConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNvmfNamespacesConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNvmfNamespacesConnectionInternalServerError creates a GetNvmfNamespacesConnectionInternalServerError with default headers values
func NewGetNvmfNamespacesConnectionInternalServerError() *GetNvmfNamespacesConnectionInternalServerError {
	return &GetNvmfNamespacesConnectionInternalServerError{}
}

/* GetNvmfNamespacesConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetNvmfNamespacesConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNvmfNamespacesConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-namespaces-connection][%d] getNvmfNamespacesConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetNvmfNamespacesConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNvmfNamespacesConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
