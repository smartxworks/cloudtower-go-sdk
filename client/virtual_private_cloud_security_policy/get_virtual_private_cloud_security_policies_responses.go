// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_security_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudSecurityPoliciesReader is a Reader for the GetVirtualPrivateCloudSecurityPolicies structure.
type GetVirtualPrivateCloudSecurityPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudSecurityPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudSecurityPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudSecurityPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudSecurityPoliciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudSecurityPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudSecurityPoliciesOK creates a GetVirtualPrivateCloudSecurityPoliciesOK with default headers values
func NewGetVirtualPrivateCloudSecurityPoliciesOK() *GetVirtualPrivateCloudSecurityPoliciesOK {
	return &GetVirtualPrivateCloudSecurityPoliciesOK{}
}

/* GetVirtualPrivateCloudSecurityPoliciesOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudSecurityPoliciesOK get virtual private cloud security policies o k
*/
type GetVirtualPrivateCloudSecurityPoliciesOK struct {
	XTowerRequestID string

	Payload []*models.VirtualPrivateCloudSecurityPolicy
}

func (o *GetVirtualPrivateCloudSecurityPoliciesOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-security-policies][%d] getVirtualPrivateCloudSecurityPoliciesOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudSecurityPoliciesOK) GetPayload() []*models.VirtualPrivateCloudSecurityPolicy {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSecurityPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudSecurityPoliciesBadRequest creates a GetVirtualPrivateCloudSecurityPoliciesBadRequest with default headers values
func NewGetVirtualPrivateCloudSecurityPoliciesBadRequest() *GetVirtualPrivateCloudSecurityPoliciesBadRequest {
	return &GetVirtualPrivateCloudSecurityPoliciesBadRequest{}
}

/* GetVirtualPrivateCloudSecurityPoliciesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudSecurityPoliciesBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudSecurityPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-security-policies][%d] getVirtualPrivateCloudSecurityPoliciesBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudSecurityPoliciesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSecurityPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudSecurityPoliciesNotFound creates a GetVirtualPrivateCloudSecurityPoliciesNotFound with default headers values
func NewGetVirtualPrivateCloudSecurityPoliciesNotFound() *GetVirtualPrivateCloudSecurityPoliciesNotFound {
	return &GetVirtualPrivateCloudSecurityPoliciesNotFound{}
}

/* GetVirtualPrivateCloudSecurityPoliciesNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudSecurityPoliciesNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudSecurityPoliciesNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-security-policies][%d] getVirtualPrivateCloudSecurityPoliciesNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudSecurityPoliciesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSecurityPoliciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudSecurityPoliciesInternalServerError creates a GetVirtualPrivateCloudSecurityPoliciesInternalServerError with default headers values
func NewGetVirtualPrivateCloudSecurityPoliciesInternalServerError() *GetVirtualPrivateCloudSecurityPoliciesInternalServerError {
	return &GetVirtualPrivateCloudSecurityPoliciesInternalServerError{}
}

/* GetVirtualPrivateCloudSecurityPoliciesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudSecurityPoliciesInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudSecurityPoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-security-policies][%d] getVirtualPrivateCloudSecurityPoliciesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudSecurityPoliciesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudSecurityPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
