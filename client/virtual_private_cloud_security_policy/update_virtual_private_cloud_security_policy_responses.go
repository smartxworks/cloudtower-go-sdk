// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_security_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpdateVirtualPrivateCloudSecurityPolicyReader is a Reader for the UpdateVirtualPrivateCloudSecurityPolicy structure.
type UpdateVirtualPrivateCloudSecurityPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateVirtualPrivateCloudSecurityPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateVirtualPrivateCloudSecurityPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewUpdateVirtualPrivateCloudSecurityPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpdateVirtualPrivateCloudSecurityPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpdateVirtualPrivateCloudSecurityPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateVirtualPrivateCloudSecurityPolicyOK creates a UpdateVirtualPrivateCloudSecurityPolicyOK with default headers values
func NewUpdateVirtualPrivateCloudSecurityPolicyOK() *UpdateVirtualPrivateCloudSecurityPolicyOK {
	return &UpdateVirtualPrivateCloudSecurityPolicyOK{}
}

/* UpdateVirtualPrivateCloudSecurityPolicyOK describes a response with status code 200, with default header values.

UpdateVirtualPrivateCloudSecurityPolicyOK update virtual private cloud security policy o k
*/
type UpdateVirtualPrivateCloudSecurityPolicyOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskVirtualPrivateCloudSecurityPolicy
}

func (o *UpdateVirtualPrivateCloudSecurityPolicyOK) Error() string {
	return fmt.Sprintf("[POST /update-virtual-private-cloud-security-policy][%d] updateVirtualPrivateCloudSecurityPolicyOK  %+v", 200, o.Payload)
}
func (o *UpdateVirtualPrivateCloudSecurityPolicyOK) GetPayload() []*models.WithTaskVirtualPrivateCloudSecurityPolicy {
	return o.Payload
}

func (o *UpdateVirtualPrivateCloudSecurityPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVirtualPrivateCloudSecurityPolicyBadRequest creates a UpdateVirtualPrivateCloudSecurityPolicyBadRequest with default headers values
func NewUpdateVirtualPrivateCloudSecurityPolicyBadRequest() *UpdateVirtualPrivateCloudSecurityPolicyBadRequest {
	return &UpdateVirtualPrivateCloudSecurityPolicyBadRequest{}
}

/* UpdateVirtualPrivateCloudSecurityPolicyBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateVirtualPrivateCloudSecurityPolicyBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVirtualPrivateCloudSecurityPolicyBadRequest) Error() string {
	return fmt.Sprintf("[POST /update-virtual-private-cloud-security-policy][%d] updateVirtualPrivateCloudSecurityPolicyBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateVirtualPrivateCloudSecurityPolicyBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVirtualPrivateCloudSecurityPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVirtualPrivateCloudSecurityPolicyNotFound creates a UpdateVirtualPrivateCloudSecurityPolicyNotFound with default headers values
func NewUpdateVirtualPrivateCloudSecurityPolicyNotFound() *UpdateVirtualPrivateCloudSecurityPolicyNotFound {
	return &UpdateVirtualPrivateCloudSecurityPolicyNotFound{}
}

/* UpdateVirtualPrivateCloudSecurityPolicyNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateVirtualPrivateCloudSecurityPolicyNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVirtualPrivateCloudSecurityPolicyNotFound) Error() string {
	return fmt.Sprintf("[POST /update-virtual-private-cloud-security-policy][%d] updateVirtualPrivateCloudSecurityPolicyNotFound  %+v", 404, o.Payload)
}
func (o *UpdateVirtualPrivateCloudSecurityPolicyNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVirtualPrivateCloudSecurityPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVirtualPrivateCloudSecurityPolicyInternalServerError creates a UpdateVirtualPrivateCloudSecurityPolicyInternalServerError with default headers values
func NewUpdateVirtualPrivateCloudSecurityPolicyInternalServerError() *UpdateVirtualPrivateCloudSecurityPolicyInternalServerError {
	return &UpdateVirtualPrivateCloudSecurityPolicyInternalServerError{}
}

/* UpdateVirtualPrivateCloudSecurityPolicyInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateVirtualPrivateCloudSecurityPolicyInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVirtualPrivateCloudSecurityPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update-virtual-private-cloud-security-policy][%d] updateVirtualPrivateCloudSecurityPolicyInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateVirtualPrivateCloudSecurityPolicyInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVirtualPrivateCloudSecurityPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
