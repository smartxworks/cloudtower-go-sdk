// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetMyInfoReader is a Reader for the GetMyInfo structure.
type GetMyInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMyInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMyInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetMyInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetMyInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetMyInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMyInfoOK creates a GetMyInfoOK with default headers values
func NewGetMyInfoOK() *GetMyInfoOK {
	return &GetMyInfoOK{}
}

/* GetMyInfoOK describes a response with status code 200, with default header values.

GetMyInfoOK get my info o k
*/
type GetMyInfoOK struct {
	XTowerRequestID string

	Payload *models.User
}

func (o *GetMyInfoOK) Error() string {
	return fmt.Sprintf("[POST /get-my-info][%d] getMyInfoOK  %+v", 200, o.Payload)
}
func (o *GetMyInfoOK) GetPayload() *models.User {
	return o.Payload
}

func (o *GetMyInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMyInfoBadRequest creates a GetMyInfoBadRequest with default headers values
func NewGetMyInfoBadRequest() *GetMyInfoBadRequest {
	return &GetMyInfoBadRequest{}
}

/* GetMyInfoBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetMyInfoBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetMyInfoBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-my-info][%d] getMyInfoBadRequest  %+v", 400, o.Payload)
}
func (o *GetMyInfoBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMyInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMyInfoNotFound creates a GetMyInfoNotFound with default headers values
func NewGetMyInfoNotFound() *GetMyInfoNotFound {
	return &GetMyInfoNotFound{}
}

/* GetMyInfoNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetMyInfoNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetMyInfoNotFound) Error() string {
	return fmt.Sprintf("[POST /get-my-info][%d] getMyInfoNotFound  %+v", 404, o.Payload)
}
func (o *GetMyInfoNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMyInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMyInfoInternalServerError creates a GetMyInfoInternalServerError with default headers values
func NewGetMyInfoInternalServerError() *GetMyInfoInternalServerError {
	return &GetMyInfoInternalServerError{}
}

/* GetMyInfoInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetMyInfoInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetMyInfoInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-my-info][%d] getMyInfoInternalServerError  %+v", 500, o.Payload)
}
func (o *GetMyInfoInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetMyInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
