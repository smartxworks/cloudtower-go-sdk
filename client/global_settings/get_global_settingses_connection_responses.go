// Code generated by go-swagger; DO NOT EDIT.

package global_settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetGlobalSettingsesConnectionReader is a Reader for the GetGlobalSettingsesConnection structure.
type GetGlobalSettingsesConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGlobalSettingsesConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGlobalSettingsesConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetGlobalSettingsesConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetGlobalSettingsesConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetGlobalSettingsesConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGlobalSettingsesConnectionOK creates a GetGlobalSettingsesConnectionOK with default headers values
func NewGetGlobalSettingsesConnectionOK() *GetGlobalSettingsesConnectionOK {
	return &GetGlobalSettingsesConnectionOK{}
}

/* GetGlobalSettingsesConnectionOK describes a response with status code 200, with default header values.

GetGlobalSettingsesConnectionOK get global settingses connection o k
*/
type GetGlobalSettingsesConnectionOK struct {
	XTowerRequestID string

	Payload *models.GlobalSettingsConnection
}

func (o *GetGlobalSettingsesConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-global-settingses-connection][%d] getGlobalSettingsesConnectionOK  %+v", 200, o.Payload)
}
func (o *GetGlobalSettingsesConnectionOK) GetPayload() *models.GlobalSettingsConnection {
	return o.Payload
}

func (o *GetGlobalSettingsesConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.GlobalSettingsConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalSettingsesConnectionBadRequest creates a GetGlobalSettingsesConnectionBadRequest with default headers values
func NewGetGlobalSettingsesConnectionBadRequest() *GetGlobalSettingsesConnectionBadRequest {
	return &GetGlobalSettingsesConnectionBadRequest{}
}

/* GetGlobalSettingsesConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetGlobalSettingsesConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetGlobalSettingsesConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-global-settingses-connection][%d] getGlobalSettingsesConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetGlobalSettingsesConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGlobalSettingsesConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalSettingsesConnectionNotFound creates a GetGlobalSettingsesConnectionNotFound with default headers values
func NewGetGlobalSettingsesConnectionNotFound() *GetGlobalSettingsesConnectionNotFound {
	return &GetGlobalSettingsesConnectionNotFound{}
}

/* GetGlobalSettingsesConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetGlobalSettingsesConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetGlobalSettingsesConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-global-settingses-connection][%d] getGlobalSettingsesConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetGlobalSettingsesConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGlobalSettingsesConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalSettingsesConnectionInternalServerError creates a GetGlobalSettingsesConnectionInternalServerError with default headers values
func NewGetGlobalSettingsesConnectionInternalServerError() *GetGlobalSettingsesConnectionInternalServerError {
	return &GetGlobalSettingsesConnectionInternalServerError{}
}

/* GetGlobalSettingsesConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetGlobalSettingsesConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetGlobalSettingsesConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-global-settingses-connection][%d] getGlobalSettingsesConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetGlobalSettingsesConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetGlobalSettingsesConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
