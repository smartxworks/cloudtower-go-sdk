// Code generated by go-swagger; DO NOT EDIT.

package snapshot_plan_task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetSnapshotPlanTasksReader is a Reader for the GetSnapshotPlanTasks structure.
type GetSnapshotPlanTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnapshotPlanTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSnapshotPlanTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetSnapshotPlanTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetSnapshotPlanTasksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetSnapshotPlanTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSnapshotPlanTasksOK creates a GetSnapshotPlanTasksOK with default headers values
func NewGetSnapshotPlanTasksOK() *GetSnapshotPlanTasksOK {
	return &GetSnapshotPlanTasksOK{}
}

/* GetSnapshotPlanTasksOK describes a response with status code 200, with default header values.

GetSnapshotPlanTasksOK get snapshot plan tasks o k
*/
type GetSnapshotPlanTasksOK struct {
	XTowerRequestID string

	Payload []*models.SnapshotPlanTask
}

func (o *GetSnapshotPlanTasksOK) Error() string {
	return fmt.Sprintf("[POST /get-snapshot-plan-tasks][%d] getSnapshotPlanTasksOK  %+v", 200, o.Payload)
}
func (o *GetSnapshotPlanTasksOK) GetPayload() []*models.SnapshotPlanTask {
	return o.Payload
}

func (o *GetSnapshotPlanTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnapshotPlanTasksBadRequest creates a GetSnapshotPlanTasksBadRequest with default headers values
func NewGetSnapshotPlanTasksBadRequest() *GetSnapshotPlanTasksBadRequest {
	return &GetSnapshotPlanTasksBadRequest{}
}

/* GetSnapshotPlanTasksBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSnapshotPlanTasksBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnapshotPlanTasksBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-snapshot-plan-tasks][%d] getSnapshotPlanTasksBadRequest  %+v", 400, o.Payload)
}
func (o *GetSnapshotPlanTasksBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnapshotPlanTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnapshotPlanTasksNotFound creates a GetSnapshotPlanTasksNotFound with default headers values
func NewGetSnapshotPlanTasksNotFound() *GetSnapshotPlanTasksNotFound {
	return &GetSnapshotPlanTasksNotFound{}
}

/* GetSnapshotPlanTasksNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSnapshotPlanTasksNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnapshotPlanTasksNotFound) Error() string {
	return fmt.Sprintf("[POST /get-snapshot-plan-tasks][%d] getSnapshotPlanTasksNotFound  %+v", 404, o.Payload)
}
func (o *GetSnapshotPlanTasksNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnapshotPlanTasksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnapshotPlanTasksInternalServerError creates a GetSnapshotPlanTasksInternalServerError with default headers values
func NewGetSnapshotPlanTasksInternalServerError() *GetSnapshotPlanTasksInternalServerError {
	return &GetSnapshotPlanTasksInternalServerError{}
}

/* GetSnapshotPlanTasksInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetSnapshotPlanTasksInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnapshotPlanTasksInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-snapshot-plan-tasks][%d] getSnapshotPlanTasksInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSnapshotPlanTasksInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnapshotPlanTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
