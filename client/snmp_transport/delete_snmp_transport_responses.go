// Code generated by go-swagger; DO NOT EDIT.

package snmp_transport

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeleteSnmpTransportReader is a Reader for the DeleteSnmpTransport structure.
type DeleteSnmpTransportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSnmpTransportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSnmpTransportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeleteSnmpTransportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeleteSnmpTransportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeleteSnmpTransportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteSnmpTransportOK creates a DeleteSnmpTransportOK with default headers values
func NewDeleteSnmpTransportOK() *DeleteSnmpTransportOK {
	return &DeleteSnmpTransportOK{}
}

/* DeleteSnmpTransportOK describes a response with status code 200, with default header values.

DeleteSnmpTransportOK delete snmp transport o k
*/
type DeleteSnmpTransportOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDeleteSnmpTransport
}

func (o *DeleteSnmpTransportOK) Error() string {
	return fmt.Sprintf("[POST /delete-snmp-transport][%d] deleteSnmpTransportOK  %+v", 200, o.Payload)
}
func (o *DeleteSnmpTransportOK) GetPayload() []*models.WithTaskDeleteSnmpTransport {
	return o.Payload
}

func (o *DeleteSnmpTransportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSnmpTransportBadRequest creates a DeleteSnmpTransportBadRequest with default headers values
func NewDeleteSnmpTransportBadRequest() *DeleteSnmpTransportBadRequest {
	return &DeleteSnmpTransportBadRequest{}
}

/* DeleteSnmpTransportBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteSnmpTransportBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteSnmpTransportBadRequest) Error() string {
	return fmt.Sprintf("[POST /delete-snmp-transport][%d] deleteSnmpTransportBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteSnmpTransportBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSnmpTransportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSnmpTransportNotFound creates a DeleteSnmpTransportNotFound with default headers values
func NewDeleteSnmpTransportNotFound() *DeleteSnmpTransportNotFound {
	return &DeleteSnmpTransportNotFound{}
}

/* DeleteSnmpTransportNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteSnmpTransportNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteSnmpTransportNotFound) Error() string {
	return fmt.Sprintf("[POST /delete-snmp-transport][%d] deleteSnmpTransportNotFound  %+v", 404, o.Payload)
}
func (o *DeleteSnmpTransportNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSnmpTransportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSnmpTransportInternalServerError creates a DeleteSnmpTransportInternalServerError with default headers values
func NewDeleteSnmpTransportInternalServerError() *DeleteSnmpTransportInternalServerError {
	return &DeleteSnmpTransportInternalServerError{}
}

/* DeleteSnmpTransportInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteSnmpTransportInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteSnmpTransportInternalServerError) Error() string {
	return fmt.Sprintf("[POST /delete-snmp-transport][%d] deleteSnmpTransportInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteSnmpTransportInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSnmpTransportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
