// Code generated by go-swagger; DO NOT EDIT.

package nvmf_subsystem

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeleteNvmfSubsystemReader is a Reader for the DeleteNvmfSubsystem structure.
type DeleteNvmfSubsystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNvmfSubsystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNvmfSubsystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeleteNvmfSubsystemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeleteNvmfSubsystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeleteNvmfSubsystemInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteNvmfSubsystemOK creates a DeleteNvmfSubsystemOK with default headers values
func NewDeleteNvmfSubsystemOK() *DeleteNvmfSubsystemOK {
	return &DeleteNvmfSubsystemOK{}
}

/* DeleteNvmfSubsystemOK describes a response with status code 200, with default header values.

DeleteNvmfSubsystemOK delete nvmf subsystem o k
*/
type DeleteNvmfSubsystemOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDeleteNvmfSubsystem
}

func (o *DeleteNvmfSubsystemOK) Error() string {
	return fmt.Sprintf("[POST /delete-nvmf-subsystem][%d] deleteNvmfSubsystemOK  %+v", 200, o.Payload)
}
func (o *DeleteNvmfSubsystemOK) GetPayload() []*models.WithTaskDeleteNvmfSubsystem {
	return o.Payload
}

func (o *DeleteNvmfSubsystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNvmfSubsystemBadRequest creates a DeleteNvmfSubsystemBadRequest with default headers values
func NewDeleteNvmfSubsystemBadRequest() *DeleteNvmfSubsystemBadRequest {
	return &DeleteNvmfSubsystemBadRequest{}
}

/* DeleteNvmfSubsystemBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteNvmfSubsystemBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteNvmfSubsystemBadRequest) Error() string {
	return fmt.Sprintf("[POST /delete-nvmf-subsystem][%d] deleteNvmfSubsystemBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteNvmfSubsystemBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNvmfSubsystemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNvmfSubsystemNotFound creates a DeleteNvmfSubsystemNotFound with default headers values
func NewDeleteNvmfSubsystemNotFound() *DeleteNvmfSubsystemNotFound {
	return &DeleteNvmfSubsystemNotFound{}
}

/* DeleteNvmfSubsystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteNvmfSubsystemNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteNvmfSubsystemNotFound) Error() string {
	return fmt.Sprintf("[POST /delete-nvmf-subsystem][%d] deleteNvmfSubsystemNotFound  %+v", 404, o.Payload)
}
func (o *DeleteNvmfSubsystemNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNvmfSubsystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNvmfSubsystemInternalServerError creates a DeleteNvmfSubsystemInternalServerError with default headers values
func NewDeleteNvmfSubsystemInternalServerError() *DeleteNvmfSubsystemInternalServerError {
	return &DeleteNvmfSubsystemInternalServerError{}
}

/* DeleteNvmfSubsystemInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteNvmfSubsystemInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteNvmfSubsystemInternalServerError) Error() string {
	return fmt.Sprintf("[POST /delete-nvmf-subsystem][%d] deleteNvmfSubsystemInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteNvmfSubsystemInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteNvmfSubsystemInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
