// Code generated by go-swagger; DO NOT EDIT.

package nvmf_subsystem

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetNvmfSubsystemsReader is a Reader for the GetNvmfSubsystems structure.
type GetNvmfSubsystemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNvmfSubsystemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNvmfSubsystemsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetNvmfSubsystemsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetNvmfSubsystemsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetNvmfSubsystemsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNvmfSubsystemsOK creates a GetNvmfSubsystemsOK with default headers values
func NewGetNvmfSubsystemsOK() *GetNvmfSubsystemsOK {
	return &GetNvmfSubsystemsOK{}
}

/* GetNvmfSubsystemsOK describes a response with status code 200, with default header values.

GetNvmfSubsystemsOK get nvmf subsystems o k
*/
type GetNvmfSubsystemsOK struct {
	XTowerRequestID string

	Payload []*models.NvmfSubsystem
}

func (o *GetNvmfSubsystemsOK) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-subsystems][%d] getNvmfSubsystemsOK  %+v", 200, o.Payload)
}
func (o *GetNvmfSubsystemsOK) GetPayload() []*models.NvmfSubsystem {
	return o.Payload
}

func (o *GetNvmfSubsystemsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNvmfSubsystemsBadRequest creates a GetNvmfSubsystemsBadRequest with default headers values
func NewGetNvmfSubsystemsBadRequest() *GetNvmfSubsystemsBadRequest {
	return &GetNvmfSubsystemsBadRequest{}
}

/* GetNvmfSubsystemsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetNvmfSubsystemsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNvmfSubsystemsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-subsystems][%d] getNvmfSubsystemsBadRequest  %+v", 400, o.Payload)
}
func (o *GetNvmfSubsystemsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNvmfSubsystemsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNvmfSubsystemsNotFound creates a GetNvmfSubsystemsNotFound with default headers values
func NewGetNvmfSubsystemsNotFound() *GetNvmfSubsystemsNotFound {
	return &GetNvmfSubsystemsNotFound{}
}

/* GetNvmfSubsystemsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetNvmfSubsystemsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNvmfSubsystemsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-subsystems][%d] getNvmfSubsystemsNotFound  %+v", 404, o.Payload)
}
func (o *GetNvmfSubsystemsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNvmfSubsystemsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNvmfSubsystemsInternalServerError creates a GetNvmfSubsystemsInternalServerError with default headers values
func NewGetNvmfSubsystemsInternalServerError() *GetNvmfSubsystemsInternalServerError {
	return &GetNvmfSubsystemsInternalServerError{}
}

/* GetNvmfSubsystemsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetNvmfSubsystemsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNvmfSubsystemsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-subsystems][%d] getNvmfSubsystemsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetNvmfSubsystemsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNvmfSubsystemsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
