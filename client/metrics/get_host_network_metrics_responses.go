// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetHostNetworkMetricsReader is a Reader for the GetHostNetworkMetrics structure.
type GetHostNetworkMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostNetworkMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHostNetworkMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetHostNetworkMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetHostNetworkMetricsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetHostNetworkMetricsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHostNetworkMetricsOK creates a GetHostNetworkMetricsOK with default headers values
func NewGetHostNetworkMetricsOK() *GetHostNetworkMetricsOK {
	return &GetHostNetworkMetricsOK{}
}

/* GetHostNetworkMetricsOK describes a response with status code 200, with default header values.

GetHostNetworkMetricsOK get host network metrics o k
*/
type GetHostNetworkMetricsOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskMetric
}

func (o *GetHostNetworkMetricsOK) Error() string {
	return fmt.Sprintf("[POST /get-host-network-metrics][%d] getHostNetworkMetricsOK  %+v", 200, o.Payload)
}
func (o *GetHostNetworkMetricsOK) GetPayload() []*models.WithTaskMetric {
	return o.Payload
}

func (o *GetHostNetworkMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostNetworkMetricsBadRequest creates a GetHostNetworkMetricsBadRequest with default headers values
func NewGetHostNetworkMetricsBadRequest() *GetHostNetworkMetricsBadRequest {
	return &GetHostNetworkMetricsBadRequest{}
}

/* GetHostNetworkMetricsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetHostNetworkMetricsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetHostNetworkMetricsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-host-network-metrics][%d] getHostNetworkMetricsBadRequest  %+v", 400, o.Payload)
}
func (o *GetHostNetworkMetricsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetHostNetworkMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostNetworkMetricsNotFound creates a GetHostNetworkMetricsNotFound with default headers values
func NewGetHostNetworkMetricsNotFound() *GetHostNetworkMetricsNotFound {
	return &GetHostNetworkMetricsNotFound{}
}

/* GetHostNetworkMetricsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetHostNetworkMetricsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetHostNetworkMetricsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-host-network-metrics][%d] getHostNetworkMetricsNotFound  %+v", 404, o.Payload)
}
func (o *GetHostNetworkMetricsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetHostNetworkMetricsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostNetworkMetricsInternalServerError creates a GetHostNetworkMetricsInternalServerError with default headers values
func NewGetHostNetworkMetricsInternalServerError() *GetHostNetworkMetricsInternalServerError {
	return &GetHostNetworkMetricsInternalServerError{}
}

/* GetHostNetworkMetricsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetHostNetworkMetricsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetHostNetworkMetricsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-host-network-metrics][%d] getHostNetworkMetricsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetHostNetworkMetricsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetHostNetworkMetricsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
