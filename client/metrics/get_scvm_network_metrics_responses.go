// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetScvmNetworkMetricsReader is a Reader for the GetScvmNetworkMetrics structure.
type GetScvmNetworkMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScvmNetworkMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScvmNetworkMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetScvmNetworkMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetScvmNetworkMetricsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetScvmNetworkMetricsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScvmNetworkMetricsOK creates a GetScvmNetworkMetricsOK with default headers values
func NewGetScvmNetworkMetricsOK() *GetScvmNetworkMetricsOK {
	return &GetScvmNetworkMetricsOK{}
}

/* GetScvmNetworkMetricsOK describes a response with status code 200, with default header values.

GetScvmNetworkMetricsOK get scvm network metrics o k
*/
type GetScvmNetworkMetricsOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskMetric
}

func (o *GetScvmNetworkMetricsOK) Error() string {
	return fmt.Sprintf("[POST /get-scvm-network-metrics][%d] getScvmNetworkMetricsOK  %+v", 200, o.Payload)
}
func (o *GetScvmNetworkMetricsOK) GetPayload() []*models.WithTaskMetric {
	return o.Payload
}

func (o *GetScvmNetworkMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScvmNetworkMetricsBadRequest creates a GetScvmNetworkMetricsBadRequest with default headers values
func NewGetScvmNetworkMetricsBadRequest() *GetScvmNetworkMetricsBadRequest {
	return &GetScvmNetworkMetricsBadRequest{}
}

/* GetScvmNetworkMetricsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetScvmNetworkMetricsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetScvmNetworkMetricsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-scvm-network-metrics][%d] getScvmNetworkMetricsBadRequest  %+v", 400, o.Payload)
}
func (o *GetScvmNetworkMetricsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScvmNetworkMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScvmNetworkMetricsNotFound creates a GetScvmNetworkMetricsNotFound with default headers values
func NewGetScvmNetworkMetricsNotFound() *GetScvmNetworkMetricsNotFound {
	return &GetScvmNetworkMetricsNotFound{}
}

/* GetScvmNetworkMetricsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetScvmNetworkMetricsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetScvmNetworkMetricsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-scvm-network-metrics][%d] getScvmNetworkMetricsNotFound  %+v", 404, o.Payload)
}
func (o *GetScvmNetworkMetricsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScvmNetworkMetricsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScvmNetworkMetricsInternalServerError creates a GetScvmNetworkMetricsInternalServerError with default headers values
func NewGetScvmNetworkMetricsInternalServerError() *GetScvmNetworkMetricsInternalServerError {
	return &GetScvmNetworkMetricsInternalServerError{}
}

/* GetScvmNetworkMetricsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetScvmNetworkMetricsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetScvmNetworkMetricsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-scvm-network-metrics][%d] getScvmNetworkMetricsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetScvmNetworkMetricsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetScvmNetworkMetricsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
