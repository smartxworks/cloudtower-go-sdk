// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetNvmfNamespaceMetricsReader is a Reader for the GetNvmfNamespaceMetrics structure.
type GetNvmfNamespaceMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNvmfNamespaceMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNvmfNamespaceMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetNvmfNamespaceMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetNvmfNamespaceMetricsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetNvmfNamespaceMetricsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNvmfNamespaceMetricsOK creates a GetNvmfNamespaceMetricsOK with default headers values
func NewGetNvmfNamespaceMetricsOK() *GetNvmfNamespaceMetricsOK {
	return &GetNvmfNamespaceMetricsOK{}
}

/* GetNvmfNamespaceMetricsOK describes a response with status code 200, with default header values.

GetNvmfNamespaceMetricsOK get nvmf namespace metrics o k
*/
type GetNvmfNamespaceMetricsOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskMetric
}

func (o *GetNvmfNamespaceMetricsOK) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-namespace-metrics][%d] getNvmfNamespaceMetricsOK  %+v", 200, o.Payload)
}
func (o *GetNvmfNamespaceMetricsOK) GetPayload() []*models.WithTaskMetric {
	return o.Payload
}

func (o *GetNvmfNamespaceMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNvmfNamespaceMetricsBadRequest creates a GetNvmfNamespaceMetricsBadRequest with default headers values
func NewGetNvmfNamespaceMetricsBadRequest() *GetNvmfNamespaceMetricsBadRequest {
	return &GetNvmfNamespaceMetricsBadRequest{}
}

/* GetNvmfNamespaceMetricsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetNvmfNamespaceMetricsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNvmfNamespaceMetricsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-namespace-metrics][%d] getNvmfNamespaceMetricsBadRequest  %+v", 400, o.Payload)
}
func (o *GetNvmfNamespaceMetricsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNvmfNamespaceMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNvmfNamespaceMetricsNotFound creates a GetNvmfNamespaceMetricsNotFound with default headers values
func NewGetNvmfNamespaceMetricsNotFound() *GetNvmfNamespaceMetricsNotFound {
	return &GetNvmfNamespaceMetricsNotFound{}
}

/* GetNvmfNamespaceMetricsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetNvmfNamespaceMetricsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNvmfNamespaceMetricsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-namespace-metrics][%d] getNvmfNamespaceMetricsNotFound  %+v", 404, o.Payload)
}
func (o *GetNvmfNamespaceMetricsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNvmfNamespaceMetricsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNvmfNamespaceMetricsInternalServerError creates a GetNvmfNamespaceMetricsInternalServerError with default headers values
func NewGetNvmfNamespaceMetricsInternalServerError() *GetNvmfNamespaceMetricsInternalServerError {
	return &GetNvmfNamespaceMetricsInternalServerError{}
}

/* GetNvmfNamespaceMetricsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetNvmfNamespaceMetricsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNvmfNamespaceMetricsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-nvmf-namespace-metrics][%d] getNvmfNamespaceMetricsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetNvmfNamespaceMetricsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNvmfNamespaceMetricsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
