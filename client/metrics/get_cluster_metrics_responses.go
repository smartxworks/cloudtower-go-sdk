// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetClusterMetricsReader is a Reader for the GetClusterMetrics structure.
type GetClusterMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetClusterMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetClusterMetricsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetClusterMetricsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetClusterMetricsOK creates a GetClusterMetricsOK with default headers values
func NewGetClusterMetricsOK() *GetClusterMetricsOK {
	return &GetClusterMetricsOK{}
}

/* GetClusterMetricsOK describes a response with status code 200, with default header values.

GetClusterMetricsOK get cluster metrics o k
*/
type GetClusterMetricsOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskMetric
}

func (o *GetClusterMetricsOK) Error() string {
	return fmt.Sprintf("[POST /get-cluster-metrics][%d] getClusterMetricsOK  %+v", 200, o.Payload)
}
func (o *GetClusterMetricsOK) GetPayload() []*models.WithTaskMetric {
	return o.Payload
}

func (o *GetClusterMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterMetricsBadRequest creates a GetClusterMetricsBadRequest with default headers values
func NewGetClusterMetricsBadRequest() *GetClusterMetricsBadRequest {
	return &GetClusterMetricsBadRequest{}
}

/* GetClusterMetricsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetClusterMetricsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetClusterMetricsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-cluster-metrics][%d] getClusterMetricsBadRequest  %+v", 400, o.Payload)
}
func (o *GetClusterMetricsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetClusterMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterMetricsNotFound creates a GetClusterMetricsNotFound with default headers values
func NewGetClusterMetricsNotFound() *GetClusterMetricsNotFound {
	return &GetClusterMetricsNotFound{}
}

/* GetClusterMetricsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetClusterMetricsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetClusterMetricsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-cluster-metrics][%d] getClusterMetricsNotFound  %+v", 404, o.Payload)
}
func (o *GetClusterMetricsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetClusterMetricsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterMetricsInternalServerError creates a GetClusterMetricsInternalServerError with default headers values
func NewGetClusterMetricsInternalServerError() *GetClusterMetricsInternalServerError {
	return &GetClusterMetricsInternalServerError{}
}

/* GetClusterMetricsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetClusterMetricsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetClusterMetricsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-cluster-metrics][%d] getClusterMetricsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetClusterMetricsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetClusterMetricsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
