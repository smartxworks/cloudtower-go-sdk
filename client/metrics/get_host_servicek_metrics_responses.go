// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetHostServicekMetricsReader is a Reader for the GetHostServicekMetrics structure.
type GetHostServicekMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostServicekMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHostServicekMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetHostServicekMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetHostServicekMetricsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetHostServicekMetricsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHostServicekMetricsOK creates a GetHostServicekMetricsOK with default headers values
func NewGetHostServicekMetricsOK() *GetHostServicekMetricsOK {
	return &GetHostServicekMetricsOK{}
}

/* GetHostServicekMetricsOK describes a response with status code 200, with default header values.

GetHostServicekMetricsOK get host servicek metrics o k
*/
type GetHostServicekMetricsOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskMetric
}

func (o *GetHostServicekMetricsOK) Error() string {
	return fmt.Sprintf("[POST /get-host-service-metrics][%d] getHostServicekMetricsOK  %+v", 200, o.Payload)
}
func (o *GetHostServicekMetricsOK) GetPayload() []*models.WithTaskMetric {
	return o.Payload
}

func (o *GetHostServicekMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostServicekMetricsBadRequest creates a GetHostServicekMetricsBadRequest with default headers values
func NewGetHostServicekMetricsBadRequest() *GetHostServicekMetricsBadRequest {
	return &GetHostServicekMetricsBadRequest{}
}

/* GetHostServicekMetricsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetHostServicekMetricsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetHostServicekMetricsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-host-service-metrics][%d] getHostServicekMetricsBadRequest  %+v", 400, o.Payload)
}
func (o *GetHostServicekMetricsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetHostServicekMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostServicekMetricsNotFound creates a GetHostServicekMetricsNotFound with default headers values
func NewGetHostServicekMetricsNotFound() *GetHostServicekMetricsNotFound {
	return &GetHostServicekMetricsNotFound{}
}

/* GetHostServicekMetricsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetHostServicekMetricsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetHostServicekMetricsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-host-service-metrics][%d] getHostServicekMetricsNotFound  %+v", 404, o.Payload)
}
func (o *GetHostServicekMetricsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetHostServicekMetricsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostServicekMetricsInternalServerError creates a GetHostServicekMetricsInternalServerError with default headers values
func NewGetHostServicekMetricsInternalServerError() *GetHostServicekMetricsInternalServerError {
	return &GetHostServicekMetricsInternalServerError{}
}

/* GetHostServicekMetricsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetHostServicekMetricsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetHostServicekMetricsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-host-service-metrics][%d] getHostServicekMetricsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetHostServicekMetricsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetHostServicekMetricsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
