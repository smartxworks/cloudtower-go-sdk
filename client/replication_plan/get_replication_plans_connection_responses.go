// Code generated by go-swagger; DO NOT EDIT.

package replication_plan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetReplicationPlansConnectionReader is a Reader for the GetReplicationPlansConnection structure.
type GetReplicationPlansConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReplicationPlansConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReplicationPlansConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetReplicationPlansConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetReplicationPlansConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetReplicationPlansConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReplicationPlansConnectionOK creates a GetReplicationPlansConnectionOK with default headers values
func NewGetReplicationPlansConnectionOK() *GetReplicationPlansConnectionOK {
	return &GetReplicationPlansConnectionOK{}
}

/* GetReplicationPlansConnectionOK describes a response with status code 200, with default header values.

GetReplicationPlansConnectionOK get replication plans connection o k
*/
type GetReplicationPlansConnectionOK struct {
	XTowerRequestID string

	Payload *models.ReplicationPlanConnection
}

func (o *GetReplicationPlansConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-replication-plans-connection][%d] getReplicationPlansConnectionOK  %+v", 200, o.Payload)
}
func (o *GetReplicationPlansConnectionOK) GetPayload() *models.ReplicationPlanConnection {
	return o.Payload
}

func (o *GetReplicationPlansConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ReplicationPlanConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicationPlansConnectionBadRequest creates a GetReplicationPlansConnectionBadRequest with default headers values
func NewGetReplicationPlansConnectionBadRequest() *GetReplicationPlansConnectionBadRequest {
	return &GetReplicationPlansConnectionBadRequest{}
}

/* GetReplicationPlansConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetReplicationPlansConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicationPlansConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-replication-plans-connection][%d] getReplicationPlansConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetReplicationPlansConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicationPlansConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicationPlansConnectionNotFound creates a GetReplicationPlansConnectionNotFound with default headers values
func NewGetReplicationPlansConnectionNotFound() *GetReplicationPlansConnectionNotFound {
	return &GetReplicationPlansConnectionNotFound{}
}

/* GetReplicationPlansConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetReplicationPlansConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicationPlansConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-replication-plans-connection][%d] getReplicationPlansConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetReplicationPlansConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicationPlansConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicationPlansConnectionInternalServerError creates a GetReplicationPlansConnectionInternalServerError with default headers values
func NewGetReplicationPlansConnectionInternalServerError() *GetReplicationPlansConnectionInternalServerError {
	return &GetReplicationPlansConnectionInternalServerError{}
}

/* GetReplicationPlansConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetReplicationPlansConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicationPlansConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-replication-plans-connection][%d] getReplicationPlansConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetReplicationPlansConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicationPlansConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
