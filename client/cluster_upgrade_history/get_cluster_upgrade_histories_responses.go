// Code generated by go-swagger; DO NOT EDIT.

package cluster_upgrade_history

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetClusterUpgradeHistoriesReader is a Reader for the GetClusterUpgradeHistories structure.
type GetClusterUpgradeHistoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterUpgradeHistoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterUpgradeHistoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetClusterUpgradeHistoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetClusterUpgradeHistoriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetClusterUpgradeHistoriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetClusterUpgradeHistoriesOK creates a GetClusterUpgradeHistoriesOK with default headers values
func NewGetClusterUpgradeHistoriesOK() *GetClusterUpgradeHistoriesOK {
	return &GetClusterUpgradeHistoriesOK{}
}

/* GetClusterUpgradeHistoriesOK describes a response with status code 200, with default header values.

GetClusterUpgradeHistoriesOK get cluster upgrade histories o k
*/
type GetClusterUpgradeHistoriesOK struct {
	XTowerRequestID string

	Payload []*models.ClusterUpgradeHistory
}

func (o *GetClusterUpgradeHistoriesOK) Error() string {
	return fmt.Sprintf("[POST /get-cluster-upgrade-histories][%d] getClusterUpgradeHistoriesOK  %+v", 200, o.Payload)
}
func (o *GetClusterUpgradeHistoriesOK) GetPayload() []*models.ClusterUpgradeHistory {
	return o.Payload
}

func (o *GetClusterUpgradeHistoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterUpgradeHistoriesBadRequest creates a GetClusterUpgradeHistoriesBadRequest with default headers values
func NewGetClusterUpgradeHistoriesBadRequest() *GetClusterUpgradeHistoriesBadRequest {
	return &GetClusterUpgradeHistoriesBadRequest{}
}

/* GetClusterUpgradeHistoriesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetClusterUpgradeHistoriesBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetClusterUpgradeHistoriesBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-cluster-upgrade-histories][%d] getClusterUpgradeHistoriesBadRequest  %+v", 400, o.Payload)
}
func (o *GetClusterUpgradeHistoriesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetClusterUpgradeHistoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterUpgradeHistoriesNotFound creates a GetClusterUpgradeHistoriesNotFound with default headers values
func NewGetClusterUpgradeHistoriesNotFound() *GetClusterUpgradeHistoriesNotFound {
	return &GetClusterUpgradeHistoriesNotFound{}
}

/* GetClusterUpgradeHistoriesNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetClusterUpgradeHistoriesNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetClusterUpgradeHistoriesNotFound) Error() string {
	return fmt.Sprintf("[POST /get-cluster-upgrade-histories][%d] getClusterUpgradeHistoriesNotFound  %+v", 404, o.Payload)
}
func (o *GetClusterUpgradeHistoriesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetClusterUpgradeHistoriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterUpgradeHistoriesInternalServerError creates a GetClusterUpgradeHistoriesInternalServerError with default headers values
func NewGetClusterUpgradeHistoriesInternalServerError() *GetClusterUpgradeHistoriesInternalServerError {
	return &GetClusterUpgradeHistoriesInternalServerError{}
}

/* GetClusterUpgradeHistoriesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetClusterUpgradeHistoriesInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetClusterUpgradeHistoriesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-cluster-upgrade-histories][%d] getClusterUpgradeHistoriesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetClusterUpgradeHistoriesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetClusterUpgradeHistoriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
