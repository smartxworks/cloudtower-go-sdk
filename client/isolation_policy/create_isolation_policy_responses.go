// Code generated by go-swagger; DO NOT EDIT.

package isolation_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// CreateIsolationPolicyReader is a Reader for the CreateIsolationPolicy structure.
type CreateIsolationPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateIsolationPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateIsolationPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewCreateIsolationPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewCreateIsolationPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewCreateIsolationPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateIsolationPolicyOK creates a CreateIsolationPolicyOK with default headers values
func NewCreateIsolationPolicyOK() *CreateIsolationPolicyOK {
	return &CreateIsolationPolicyOK{}
}

/* CreateIsolationPolicyOK describes a response with status code 200, with default header values.

CreateIsolationPolicyOK create isolation policy o k
*/
type CreateIsolationPolicyOK struct {
	XTowerRequestID string

	Payload *models.IsolationPolicy
}

func (o *CreateIsolationPolicyOK) Error() string {
	return fmt.Sprintf("[POST /create-isolation-policy][%d] createIsolationPolicyOK  %+v", 200, o.Payload)
}
func (o *CreateIsolationPolicyOK) GetPayload() *models.IsolationPolicy {
	return o.Payload
}

func (o *CreateIsolationPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.IsolationPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIsolationPolicyBadRequest creates a CreateIsolationPolicyBadRequest with default headers values
func NewCreateIsolationPolicyBadRequest() *CreateIsolationPolicyBadRequest {
	return &CreateIsolationPolicyBadRequest{}
}

/* CreateIsolationPolicyBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateIsolationPolicyBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateIsolationPolicyBadRequest) Error() string {
	return fmt.Sprintf("[POST /create-isolation-policy][%d] createIsolationPolicyBadRequest  %+v", 400, o.Payload)
}
func (o *CreateIsolationPolicyBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateIsolationPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIsolationPolicyNotFound creates a CreateIsolationPolicyNotFound with default headers values
func NewCreateIsolationPolicyNotFound() *CreateIsolationPolicyNotFound {
	return &CreateIsolationPolicyNotFound{}
}

/* CreateIsolationPolicyNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateIsolationPolicyNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateIsolationPolicyNotFound) Error() string {
	return fmt.Sprintf("[POST /create-isolation-policy][%d] createIsolationPolicyNotFound  %+v", 404, o.Payload)
}
func (o *CreateIsolationPolicyNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateIsolationPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIsolationPolicyInternalServerError creates a CreateIsolationPolicyInternalServerError with default headers values
func NewCreateIsolationPolicyInternalServerError() *CreateIsolationPolicyInternalServerError {
	return &CreateIsolationPolicyInternalServerError{}
}

/* CreateIsolationPolicyInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateIsolationPolicyInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateIsolationPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /create-isolation-policy][%d] createIsolationPolicyInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateIsolationPolicyInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateIsolationPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
