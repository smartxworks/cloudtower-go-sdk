// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpdateVirtualPrivateCloudSecurityGroupReader is a Reader for the UpdateVirtualPrivateCloudSecurityGroup structure.
type UpdateVirtualPrivateCloudSecurityGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateVirtualPrivateCloudSecurityGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateVirtualPrivateCloudSecurityGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewUpdateVirtualPrivateCloudSecurityGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpdateVirtualPrivateCloudSecurityGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpdateVirtualPrivateCloudSecurityGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateVirtualPrivateCloudSecurityGroupOK creates a UpdateVirtualPrivateCloudSecurityGroupOK with default headers values
func NewUpdateVirtualPrivateCloudSecurityGroupOK() *UpdateVirtualPrivateCloudSecurityGroupOK {
	return &UpdateVirtualPrivateCloudSecurityGroupOK{}
}

/* UpdateVirtualPrivateCloudSecurityGroupOK describes a response with status code 200, with default header values.

UpdateVirtualPrivateCloudSecurityGroupOK update virtual private cloud security group o k
*/
type UpdateVirtualPrivateCloudSecurityGroupOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskVirtualPrivateCloudSecurityGroup
}

func (o *UpdateVirtualPrivateCloudSecurityGroupOK) Error() string {
	return fmt.Sprintf("[POST /update-virtual-private-cloud-security-group][%d] updateVirtualPrivateCloudSecurityGroupOK  %+v", 200, o.Payload)
}
func (o *UpdateVirtualPrivateCloudSecurityGroupOK) GetPayload() []*models.WithTaskVirtualPrivateCloudSecurityGroup {
	return o.Payload
}

func (o *UpdateVirtualPrivateCloudSecurityGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVirtualPrivateCloudSecurityGroupBadRequest creates a UpdateVirtualPrivateCloudSecurityGroupBadRequest with default headers values
func NewUpdateVirtualPrivateCloudSecurityGroupBadRequest() *UpdateVirtualPrivateCloudSecurityGroupBadRequest {
	return &UpdateVirtualPrivateCloudSecurityGroupBadRequest{}
}

/* UpdateVirtualPrivateCloudSecurityGroupBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateVirtualPrivateCloudSecurityGroupBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVirtualPrivateCloudSecurityGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /update-virtual-private-cloud-security-group][%d] updateVirtualPrivateCloudSecurityGroupBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateVirtualPrivateCloudSecurityGroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVirtualPrivateCloudSecurityGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVirtualPrivateCloudSecurityGroupNotFound creates a UpdateVirtualPrivateCloudSecurityGroupNotFound with default headers values
func NewUpdateVirtualPrivateCloudSecurityGroupNotFound() *UpdateVirtualPrivateCloudSecurityGroupNotFound {
	return &UpdateVirtualPrivateCloudSecurityGroupNotFound{}
}

/* UpdateVirtualPrivateCloudSecurityGroupNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateVirtualPrivateCloudSecurityGroupNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVirtualPrivateCloudSecurityGroupNotFound) Error() string {
	return fmt.Sprintf("[POST /update-virtual-private-cloud-security-group][%d] updateVirtualPrivateCloudSecurityGroupNotFound  %+v", 404, o.Payload)
}
func (o *UpdateVirtualPrivateCloudSecurityGroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVirtualPrivateCloudSecurityGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVirtualPrivateCloudSecurityGroupInternalServerError creates a UpdateVirtualPrivateCloudSecurityGroupInternalServerError with default headers values
func NewUpdateVirtualPrivateCloudSecurityGroupInternalServerError() *UpdateVirtualPrivateCloudSecurityGroupInternalServerError {
	return &UpdateVirtualPrivateCloudSecurityGroupInternalServerError{}
}

/* UpdateVirtualPrivateCloudSecurityGroupInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateVirtualPrivateCloudSecurityGroupInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateVirtualPrivateCloudSecurityGroupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update-virtual-private-cloud-security-group][%d] updateVirtualPrivateCloudSecurityGroupInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateVirtualPrivateCloudSecurityGroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateVirtualPrivateCloudSecurityGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
