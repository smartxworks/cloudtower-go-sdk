// Code generated by go-swagger; DO NOT EDIT.

package entity_filter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeleteEntityFilterReader is a Reader for the DeleteEntityFilter structure.
type DeleteEntityFilterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEntityFilterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteEntityFilterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeleteEntityFilterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeleteEntityFilterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeleteEntityFilterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEntityFilterOK creates a DeleteEntityFilterOK with default headers values
func NewDeleteEntityFilterOK() *DeleteEntityFilterOK {
	return &DeleteEntityFilterOK{}
}

/* DeleteEntityFilterOK describes a response with status code 200, with default header values.

DeleteEntityFilterOK delete entity filter o k
*/
type DeleteEntityFilterOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDeleteEntityFilter
}

func (o *DeleteEntityFilterOK) Error() string {
	return fmt.Sprintf("[POST /delete-entity-filter][%d] deleteEntityFilterOK  %+v", 200, o.Payload)
}
func (o *DeleteEntityFilterOK) GetPayload() []*models.WithTaskDeleteEntityFilter {
	return o.Payload
}

func (o *DeleteEntityFilterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEntityFilterBadRequest creates a DeleteEntityFilterBadRequest with default headers values
func NewDeleteEntityFilterBadRequest() *DeleteEntityFilterBadRequest {
	return &DeleteEntityFilterBadRequest{}
}

/* DeleteEntityFilterBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteEntityFilterBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteEntityFilterBadRequest) Error() string {
	return fmt.Sprintf("[POST /delete-entity-filter][%d] deleteEntityFilterBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteEntityFilterBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteEntityFilterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEntityFilterNotFound creates a DeleteEntityFilterNotFound with default headers values
func NewDeleteEntityFilterNotFound() *DeleteEntityFilterNotFound {
	return &DeleteEntityFilterNotFound{}
}

/* DeleteEntityFilterNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteEntityFilterNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteEntityFilterNotFound) Error() string {
	return fmt.Sprintf("[POST /delete-entity-filter][%d] deleteEntityFilterNotFound  %+v", 404, o.Payload)
}
func (o *DeleteEntityFilterNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteEntityFilterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEntityFilterInternalServerError creates a DeleteEntityFilterInternalServerError with default headers values
func NewDeleteEntityFilterInternalServerError() *DeleteEntityFilterInternalServerError {
	return &DeleteEntityFilterInternalServerError{}
}

/* DeleteEntityFilterInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteEntityFilterInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteEntityFilterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /delete-entity-filter][%d] deleteEntityFilterInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteEntityFilterInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteEntityFilterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
