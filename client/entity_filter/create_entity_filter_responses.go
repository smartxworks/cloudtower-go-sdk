// Code generated by go-swagger; DO NOT EDIT.

package entity_filter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// CreateEntityFilterReader is a Reader for the CreateEntityFilter structure.
type CreateEntityFilterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEntityFilterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateEntityFilterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewCreateEntityFilterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewCreateEntityFilterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewCreateEntityFilterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateEntityFilterOK creates a CreateEntityFilterOK with default headers values
func NewCreateEntityFilterOK() *CreateEntityFilterOK {
	return &CreateEntityFilterOK{}
}

/* CreateEntityFilterOK describes a response with status code 200, with default header values.

CreateEntityFilterOK create entity filter o k
*/
type CreateEntityFilterOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskEntityFilter
}

func (o *CreateEntityFilterOK) Error() string {
	return fmt.Sprintf("[POST /create-entity-filter][%d] createEntityFilterOK  %+v", 200, o.Payload)
}
func (o *CreateEntityFilterOK) GetPayload() []*models.WithTaskEntityFilter {
	return o.Payload
}

func (o *CreateEntityFilterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEntityFilterBadRequest creates a CreateEntityFilterBadRequest with default headers values
func NewCreateEntityFilterBadRequest() *CreateEntityFilterBadRequest {
	return &CreateEntityFilterBadRequest{}
}

/* CreateEntityFilterBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateEntityFilterBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateEntityFilterBadRequest) Error() string {
	return fmt.Sprintf("[POST /create-entity-filter][%d] createEntityFilterBadRequest  %+v", 400, o.Payload)
}
func (o *CreateEntityFilterBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateEntityFilterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEntityFilterNotFound creates a CreateEntityFilterNotFound with default headers values
func NewCreateEntityFilterNotFound() *CreateEntityFilterNotFound {
	return &CreateEntityFilterNotFound{}
}

/* CreateEntityFilterNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateEntityFilterNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateEntityFilterNotFound) Error() string {
	return fmt.Sprintf("[POST /create-entity-filter][%d] createEntityFilterNotFound  %+v", 404, o.Payload)
}
func (o *CreateEntityFilterNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateEntityFilterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEntityFilterInternalServerError creates a CreateEntityFilterInternalServerError with default headers values
func NewCreateEntityFilterInternalServerError() *CreateEntityFilterInternalServerError {
	return &CreateEntityFilterInternalServerError{}
}

/* CreateEntityFilterInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateEntityFilterInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateEntityFilterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /create-entity-filter][%d] createEntityFilterInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateEntityFilterInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateEntityFilterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
