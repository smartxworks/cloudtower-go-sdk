// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_edge_gateway_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudEdgeGatewayGroupsConnectionReader is a Reader for the GetVirtualPrivateCloudEdgeGatewayGroupsConnection structure.
type GetVirtualPrivateCloudEdgeGatewayGroupsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK creates a GetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK with default headers values
func NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK() *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK {
	return &GetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK{}
}

/* GetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK get virtual private cloud edge gateway groups connection o k
*/
type GetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK struct {
	XTowerRequestID string

	Payload *models.VirtualPrivateCloudEdgeGatewayGroupConnection
}

func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-edge-gateway-groups-connection][%d] getVirtualPrivateCloudEdgeGatewayGroupsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK) GetPayload() *models.VirtualPrivateCloudEdgeGatewayGroupConnection {
	return o.Payload
}

func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.VirtualPrivateCloudEdgeGatewayGroupConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest creates a GetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest with default headers values
func NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest() *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest {
	return &GetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest{}
}

/* GetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-edge-gateway-groups-connection][%d] getVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound creates a GetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound with default headers values
func NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound() *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound {
	return &GetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound{}
}

/* GetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-edge-gateway-groups-connection][%d] getVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError creates a GetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError with default headers values
func NewGetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError() *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError {
	return &GetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError{}
}

/* GetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-edge-gateway-groups-connection][%d] getVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudEdgeGatewayGroupsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
