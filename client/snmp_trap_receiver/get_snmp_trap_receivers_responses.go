// Code generated by go-swagger; DO NOT EDIT.

package snmp_trap_receiver

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetSnmpTrapReceiversReader is a Reader for the GetSnmpTrapReceivers structure.
type GetSnmpTrapReceiversReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnmpTrapReceiversReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSnmpTrapReceiversOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetSnmpTrapReceiversBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetSnmpTrapReceiversNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetSnmpTrapReceiversInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSnmpTrapReceiversOK creates a GetSnmpTrapReceiversOK with default headers values
func NewGetSnmpTrapReceiversOK() *GetSnmpTrapReceiversOK {
	return &GetSnmpTrapReceiversOK{}
}

/* GetSnmpTrapReceiversOK describes a response with status code 200, with default header values.

GetSnmpTrapReceiversOK get snmp trap receivers o k
*/
type GetSnmpTrapReceiversOK struct {
	XTowerRequestID string

	Payload []*models.SnmpTrapReceiver
}

func (o *GetSnmpTrapReceiversOK) Error() string {
	return fmt.Sprintf("[POST /get-snmp-trap-receivers][%d] getSnmpTrapReceiversOK  %+v", 200, o.Payload)
}
func (o *GetSnmpTrapReceiversOK) GetPayload() []*models.SnmpTrapReceiver {
	return o.Payload
}

func (o *GetSnmpTrapReceiversOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnmpTrapReceiversBadRequest creates a GetSnmpTrapReceiversBadRequest with default headers values
func NewGetSnmpTrapReceiversBadRequest() *GetSnmpTrapReceiversBadRequest {
	return &GetSnmpTrapReceiversBadRequest{}
}

/* GetSnmpTrapReceiversBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSnmpTrapReceiversBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnmpTrapReceiversBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-snmp-trap-receivers][%d] getSnmpTrapReceiversBadRequest  %+v", 400, o.Payload)
}
func (o *GetSnmpTrapReceiversBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnmpTrapReceiversBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnmpTrapReceiversNotFound creates a GetSnmpTrapReceiversNotFound with default headers values
func NewGetSnmpTrapReceiversNotFound() *GetSnmpTrapReceiversNotFound {
	return &GetSnmpTrapReceiversNotFound{}
}

/* GetSnmpTrapReceiversNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSnmpTrapReceiversNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnmpTrapReceiversNotFound) Error() string {
	return fmt.Sprintf("[POST /get-snmp-trap-receivers][%d] getSnmpTrapReceiversNotFound  %+v", 404, o.Payload)
}
func (o *GetSnmpTrapReceiversNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnmpTrapReceiversNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnmpTrapReceiversInternalServerError creates a GetSnmpTrapReceiversInternalServerError with default headers values
func NewGetSnmpTrapReceiversInternalServerError() *GetSnmpTrapReceiversInternalServerError {
	return &GetSnmpTrapReceiversInternalServerError{}
}

/* GetSnmpTrapReceiversInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetSnmpTrapReceiversInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnmpTrapReceiversInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-snmp-trap-receivers][%d] getSnmpTrapReceiversInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSnmpTrapReceiversInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnmpTrapReceiversInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
