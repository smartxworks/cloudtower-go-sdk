// Code generated by go-swagger; DO NOT EDIT.

package snmp_trap_receiver

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// CreateSnmpTrapReceiverReader is a Reader for the CreateSnmpTrapReceiver structure.
type CreateSnmpTrapReceiverReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSnmpTrapReceiverReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSnmpTrapReceiverOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewCreateSnmpTrapReceiverBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewCreateSnmpTrapReceiverNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewCreateSnmpTrapReceiverInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateSnmpTrapReceiverOK creates a CreateSnmpTrapReceiverOK with default headers values
func NewCreateSnmpTrapReceiverOK() *CreateSnmpTrapReceiverOK {
	return &CreateSnmpTrapReceiverOK{}
}

/* CreateSnmpTrapReceiverOK describes a response with status code 200, with default header values.

CreateSnmpTrapReceiverOK create snmp trap receiver o k
*/
type CreateSnmpTrapReceiverOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskSnmpTrapReceiver
}

func (o *CreateSnmpTrapReceiverOK) Error() string {
	return fmt.Sprintf("[POST /create-snmp-trap-receiver][%d] createSnmpTrapReceiverOK  %+v", 200, o.Payload)
}
func (o *CreateSnmpTrapReceiverOK) GetPayload() []*models.WithTaskSnmpTrapReceiver {
	return o.Payload
}

func (o *CreateSnmpTrapReceiverOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSnmpTrapReceiverBadRequest creates a CreateSnmpTrapReceiverBadRequest with default headers values
func NewCreateSnmpTrapReceiverBadRequest() *CreateSnmpTrapReceiverBadRequest {
	return &CreateSnmpTrapReceiverBadRequest{}
}

/* CreateSnmpTrapReceiverBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateSnmpTrapReceiverBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateSnmpTrapReceiverBadRequest) Error() string {
	return fmt.Sprintf("[POST /create-snmp-trap-receiver][%d] createSnmpTrapReceiverBadRequest  %+v", 400, o.Payload)
}
func (o *CreateSnmpTrapReceiverBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateSnmpTrapReceiverBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSnmpTrapReceiverNotFound creates a CreateSnmpTrapReceiverNotFound with default headers values
func NewCreateSnmpTrapReceiverNotFound() *CreateSnmpTrapReceiverNotFound {
	return &CreateSnmpTrapReceiverNotFound{}
}

/* CreateSnmpTrapReceiverNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateSnmpTrapReceiverNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateSnmpTrapReceiverNotFound) Error() string {
	return fmt.Sprintf("[POST /create-snmp-trap-receiver][%d] createSnmpTrapReceiverNotFound  %+v", 404, o.Payload)
}
func (o *CreateSnmpTrapReceiverNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateSnmpTrapReceiverNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSnmpTrapReceiverInternalServerError creates a CreateSnmpTrapReceiverInternalServerError with default headers values
func NewCreateSnmpTrapReceiverInternalServerError() *CreateSnmpTrapReceiverInternalServerError {
	return &CreateSnmpTrapReceiverInternalServerError{}
}

/* CreateSnmpTrapReceiverInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateSnmpTrapReceiverInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *CreateSnmpTrapReceiverInternalServerError) Error() string {
	return fmt.Sprintf("[POST /create-snmp-trap-receiver][%d] createSnmpTrapReceiverInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateSnmpTrapReceiverInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *CreateSnmpTrapReceiverInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
