// Code generated by go-swagger; DO NOT EDIT.

package snmp_trap_receiver

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetSnmpTrapReceiversConnectionReader is a Reader for the GetSnmpTrapReceiversConnection structure.
type GetSnmpTrapReceiversConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnmpTrapReceiversConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSnmpTrapReceiversConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetSnmpTrapReceiversConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetSnmpTrapReceiversConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetSnmpTrapReceiversConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSnmpTrapReceiversConnectionOK creates a GetSnmpTrapReceiversConnectionOK with default headers values
func NewGetSnmpTrapReceiversConnectionOK() *GetSnmpTrapReceiversConnectionOK {
	return &GetSnmpTrapReceiversConnectionOK{}
}

/* GetSnmpTrapReceiversConnectionOK describes a response with status code 200, with default header values.

GetSnmpTrapReceiversConnectionOK get snmp trap receivers connection o k
*/
type GetSnmpTrapReceiversConnectionOK struct {
	XTowerRequestID string

	Payload *models.SnmpTrapReceiverConnection
}

func (o *GetSnmpTrapReceiversConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-snmp-trap-receivers-connection][%d] getSnmpTrapReceiversConnectionOK  %+v", 200, o.Payload)
}
func (o *GetSnmpTrapReceiversConnectionOK) GetPayload() *models.SnmpTrapReceiverConnection {
	return o.Payload
}

func (o *GetSnmpTrapReceiversConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.SnmpTrapReceiverConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnmpTrapReceiversConnectionBadRequest creates a GetSnmpTrapReceiversConnectionBadRequest with default headers values
func NewGetSnmpTrapReceiversConnectionBadRequest() *GetSnmpTrapReceiversConnectionBadRequest {
	return &GetSnmpTrapReceiversConnectionBadRequest{}
}

/* GetSnmpTrapReceiversConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSnmpTrapReceiversConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnmpTrapReceiversConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-snmp-trap-receivers-connection][%d] getSnmpTrapReceiversConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetSnmpTrapReceiversConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnmpTrapReceiversConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnmpTrapReceiversConnectionNotFound creates a GetSnmpTrapReceiversConnectionNotFound with default headers values
func NewGetSnmpTrapReceiversConnectionNotFound() *GetSnmpTrapReceiversConnectionNotFound {
	return &GetSnmpTrapReceiversConnectionNotFound{}
}

/* GetSnmpTrapReceiversConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSnmpTrapReceiversConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnmpTrapReceiversConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-snmp-trap-receivers-connection][%d] getSnmpTrapReceiversConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetSnmpTrapReceiversConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnmpTrapReceiversConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnmpTrapReceiversConnectionInternalServerError creates a GetSnmpTrapReceiversConnectionInternalServerError with default headers values
func NewGetSnmpTrapReceiversConnectionInternalServerError() *GetSnmpTrapReceiversConnectionInternalServerError {
	return &GetSnmpTrapReceiversConnectionInternalServerError{}
}

/* GetSnmpTrapReceiversConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetSnmpTrapReceiversConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSnmpTrapReceiversConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-snmp-trap-receivers-connection][%d] getSnmpTrapReceiversConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSnmpTrapReceiversConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSnmpTrapReceiversConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
