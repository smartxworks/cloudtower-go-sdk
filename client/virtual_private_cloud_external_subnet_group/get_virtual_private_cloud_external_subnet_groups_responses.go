// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_external_subnet_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudExternalSubnetGroupsReader is a Reader for the GetVirtualPrivateCloudExternalSubnetGroups structure.
type GetVirtualPrivateCloudExternalSubnetGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudExternalSubnetGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudExternalSubnetGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudExternalSubnetGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudExternalSubnetGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudExternalSubnetGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudExternalSubnetGroupsOK creates a GetVirtualPrivateCloudExternalSubnetGroupsOK with default headers values
func NewGetVirtualPrivateCloudExternalSubnetGroupsOK() *GetVirtualPrivateCloudExternalSubnetGroupsOK {
	return &GetVirtualPrivateCloudExternalSubnetGroupsOK{}
}

/* GetVirtualPrivateCloudExternalSubnetGroupsOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudExternalSubnetGroupsOK get virtual private cloud external subnet groups o k
*/
type GetVirtualPrivateCloudExternalSubnetGroupsOK struct {
	XTowerRequestID string

	Payload []*models.VirtualPrivateCloudExternalSubnetGroup
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnet-groups][%d] getVirtualPrivateCloudExternalSubnetGroupsOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetGroupsOK) GetPayload() []*models.VirtualPrivateCloudExternalSubnetGroup {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudExternalSubnetGroupsBadRequest creates a GetVirtualPrivateCloudExternalSubnetGroupsBadRequest with default headers values
func NewGetVirtualPrivateCloudExternalSubnetGroupsBadRequest() *GetVirtualPrivateCloudExternalSubnetGroupsBadRequest {
	return &GetVirtualPrivateCloudExternalSubnetGroupsBadRequest{}
}

/* GetVirtualPrivateCloudExternalSubnetGroupsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudExternalSubnetGroupsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnet-groups][%d] getVirtualPrivateCloudExternalSubnetGroupsBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetGroupsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudExternalSubnetGroupsNotFound creates a GetVirtualPrivateCloudExternalSubnetGroupsNotFound with default headers values
func NewGetVirtualPrivateCloudExternalSubnetGroupsNotFound() *GetVirtualPrivateCloudExternalSubnetGroupsNotFound {
	return &GetVirtualPrivateCloudExternalSubnetGroupsNotFound{}
}

/* GetVirtualPrivateCloudExternalSubnetGroupsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudExternalSubnetGroupsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnet-groups][%d] getVirtualPrivateCloudExternalSubnetGroupsNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetGroupsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudExternalSubnetGroupsInternalServerError creates a GetVirtualPrivateCloudExternalSubnetGroupsInternalServerError with default headers values
func NewGetVirtualPrivateCloudExternalSubnetGroupsInternalServerError() *GetVirtualPrivateCloudExternalSubnetGroupsInternalServerError {
	return &GetVirtualPrivateCloudExternalSubnetGroupsInternalServerError{}
}

/* GetVirtualPrivateCloudExternalSubnetGroupsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudExternalSubnetGroupsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnet-groups][%d] getVirtualPrivateCloudExternalSubnetGroupsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetGroupsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
