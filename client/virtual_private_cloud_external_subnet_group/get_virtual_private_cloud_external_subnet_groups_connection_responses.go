// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_external_subnet_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetVirtualPrivateCloudExternalSubnetGroupsConnectionReader is a Reader for the GetVirtualPrivateCloudExternalSubnetGroupsConnection structure.
type GetVirtualPrivateCloudExternalSubnetGroupsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionOK creates a GetVirtualPrivateCloudExternalSubnetGroupsConnectionOK with default headers values
func NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionOK() *GetVirtualPrivateCloudExternalSubnetGroupsConnectionOK {
	return &GetVirtualPrivateCloudExternalSubnetGroupsConnectionOK{}
}

/* GetVirtualPrivateCloudExternalSubnetGroupsConnectionOK describes a response with status code 200, with default header values.

GetVirtualPrivateCloudExternalSubnetGroupsConnectionOK get virtual private cloud external subnet groups connection o k
*/
type GetVirtualPrivateCloudExternalSubnetGroupsConnectionOK struct {
	XTowerRequestID string

	Payload *models.VirtualPrivateCloudExternalSubnetGroupConnection
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnet-groups-connection][%d] getVirtualPrivateCloudExternalSubnetGroupsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionOK) GetPayload() *models.VirtualPrivateCloudExternalSubnetGroupConnection {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.VirtualPrivateCloudExternalSubnetGroupConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest creates a GetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest with default headers values
func NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest() *GetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest {
	return &GetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest{}
}

/* GetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnet-groups-connection][%d] getVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound creates a GetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound with default headers values
func NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound() *GetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound {
	return &GetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound{}
}

/* GetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnet-groups-connection][%d] getVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError creates a GetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError with default headers values
func NewGetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError() *GetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError {
	return &GetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError{}
}

/* GetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-virtual-private-cloud-external-subnet-groups-connection][%d] getVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetVirtualPrivateCloudExternalSubnetGroupsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
