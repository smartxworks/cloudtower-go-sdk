// Code generated by go-swagger; DO NOT EDIT.

package replication_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetReplicationServicesReader is a Reader for the GetReplicationServices structure.
type GetReplicationServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReplicationServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReplicationServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetReplicationServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetReplicationServicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetReplicationServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReplicationServicesOK creates a GetReplicationServicesOK with default headers values
func NewGetReplicationServicesOK() *GetReplicationServicesOK {
	return &GetReplicationServicesOK{}
}

/* GetReplicationServicesOK describes a response with status code 200, with default header values.

GetReplicationServicesOK get replication services o k
*/
type GetReplicationServicesOK struct {
	XTowerRequestID string

	Payload []*models.ReplicationService
}

func (o *GetReplicationServicesOK) Error() string {
	return fmt.Sprintf("[POST /get-replication-services][%d] getReplicationServicesOK  %+v", 200, o.Payload)
}
func (o *GetReplicationServicesOK) GetPayload() []*models.ReplicationService {
	return o.Payload
}

func (o *GetReplicationServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicationServicesBadRequest creates a GetReplicationServicesBadRequest with default headers values
func NewGetReplicationServicesBadRequest() *GetReplicationServicesBadRequest {
	return &GetReplicationServicesBadRequest{}
}

/* GetReplicationServicesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetReplicationServicesBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicationServicesBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-replication-services][%d] getReplicationServicesBadRequest  %+v", 400, o.Payload)
}
func (o *GetReplicationServicesBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicationServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicationServicesNotFound creates a GetReplicationServicesNotFound with default headers values
func NewGetReplicationServicesNotFound() *GetReplicationServicesNotFound {
	return &GetReplicationServicesNotFound{}
}

/* GetReplicationServicesNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetReplicationServicesNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicationServicesNotFound) Error() string {
	return fmt.Sprintf("[POST /get-replication-services][%d] getReplicationServicesNotFound  %+v", 404, o.Payload)
}
func (o *GetReplicationServicesNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicationServicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicationServicesInternalServerError creates a GetReplicationServicesInternalServerError with default headers values
func NewGetReplicationServicesInternalServerError() *GetReplicationServicesInternalServerError {
	return &GetReplicationServicesInternalServerError{}
}

/* GetReplicationServicesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetReplicationServicesInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicationServicesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-replication-services][%d] getReplicationServicesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetReplicationServicesInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicationServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
