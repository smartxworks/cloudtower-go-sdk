// Code generated by go-swagger; DO NOT EDIT.

package replication_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetReplicationServicesConnectionReader is a Reader for the GetReplicationServicesConnection structure.
type GetReplicationServicesConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReplicationServicesConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReplicationServicesConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetReplicationServicesConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetReplicationServicesConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetReplicationServicesConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReplicationServicesConnectionOK creates a GetReplicationServicesConnectionOK with default headers values
func NewGetReplicationServicesConnectionOK() *GetReplicationServicesConnectionOK {
	return &GetReplicationServicesConnectionOK{}
}

/* GetReplicationServicesConnectionOK describes a response with status code 200, with default header values.

GetReplicationServicesConnectionOK get replication services connection o k
*/
type GetReplicationServicesConnectionOK struct {
	XTowerRequestID string

	Payload *models.ReplicationServiceConnection
}

func (o *GetReplicationServicesConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-replication-services-connection][%d] getReplicationServicesConnectionOK  %+v", 200, o.Payload)
}
func (o *GetReplicationServicesConnectionOK) GetPayload() *models.ReplicationServiceConnection {
	return o.Payload
}

func (o *GetReplicationServicesConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ReplicationServiceConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicationServicesConnectionBadRequest creates a GetReplicationServicesConnectionBadRequest with default headers values
func NewGetReplicationServicesConnectionBadRequest() *GetReplicationServicesConnectionBadRequest {
	return &GetReplicationServicesConnectionBadRequest{}
}

/* GetReplicationServicesConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetReplicationServicesConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicationServicesConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-replication-services-connection][%d] getReplicationServicesConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetReplicationServicesConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicationServicesConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicationServicesConnectionNotFound creates a GetReplicationServicesConnectionNotFound with default headers values
func NewGetReplicationServicesConnectionNotFound() *GetReplicationServicesConnectionNotFound {
	return &GetReplicationServicesConnectionNotFound{}
}

/* GetReplicationServicesConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetReplicationServicesConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicationServicesConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-replication-services-connection][%d] getReplicationServicesConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetReplicationServicesConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicationServicesConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReplicationServicesConnectionInternalServerError creates a GetReplicationServicesConnectionInternalServerError with default headers values
func NewGetReplicationServicesConnectionInternalServerError() *GetReplicationServicesConnectionInternalServerError {
	return &GetReplicationServicesConnectionInternalServerError{}
}

/* GetReplicationServicesConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetReplicationServicesConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetReplicationServicesConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-replication-services-connection][%d] getReplicationServicesConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetReplicationServicesConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetReplicationServicesConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
