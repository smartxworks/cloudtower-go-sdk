// Code generated by go-swagger; DO NOT EDIT.

package view

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetViewsConnectionReader is a Reader for the GetViewsConnection structure.
type GetViewsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetViewsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetViewsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetViewsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetViewsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetViewsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetViewsConnectionOK creates a GetViewsConnectionOK with default headers values
func NewGetViewsConnectionOK() *GetViewsConnectionOK {
	return &GetViewsConnectionOK{}
}

/* GetViewsConnectionOK describes a response with status code 200, with default header values.

GetViewsConnectionOK get views connection o k
*/
type GetViewsConnectionOK struct {
	XTowerRequestID string

	Payload *models.ViewConnection
}

func (o *GetViewsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-views-connection][%d] getViewsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetViewsConnectionOK) GetPayload() *models.ViewConnection {
	return o.Payload
}

func (o *GetViewsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ViewConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetViewsConnectionBadRequest creates a GetViewsConnectionBadRequest with default headers values
func NewGetViewsConnectionBadRequest() *GetViewsConnectionBadRequest {
	return &GetViewsConnectionBadRequest{}
}

/* GetViewsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetViewsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetViewsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-views-connection][%d] getViewsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetViewsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetViewsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetViewsConnectionNotFound creates a GetViewsConnectionNotFound with default headers values
func NewGetViewsConnectionNotFound() *GetViewsConnectionNotFound {
	return &GetViewsConnectionNotFound{}
}

/* GetViewsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetViewsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetViewsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-views-connection][%d] getViewsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetViewsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetViewsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetViewsConnectionInternalServerError creates a GetViewsConnectionInternalServerError with default headers values
func NewGetViewsConnectionInternalServerError() *GetViewsConnectionInternalServerError {
	return &GetViewsConnectionInternalServerError{}
}

/* GetViewsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetViewsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetViewsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-views-connection][%d] getViewsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetViewsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetViewsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
