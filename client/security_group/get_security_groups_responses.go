// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetSecurityGroupsReader is a Reader for the GetSecurityGroups structure.
type GetSecurityGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecurityGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecurityGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetSecurityGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetSecurityGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetSecurityGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSecurityGroupsOK creates a GetSecurityGroupsOK with default headers values
func NewGetSecurityGroupsOK() *GetSecurityGroupsOK {
	return &GetSecurityGroupsOK{}
}

/* GetSecurityGroupsOK describes a response with status code 200, with default header values.

GetSecurityGroupsOK get security groups o k
*/
type GetSecurityGroupsOK struct {
	XTowerRequestID string

	Payload []*models.SecurityGroup
}

func (o *GetSecurityGroupsOK) Error() string {
	return fmt.Sprintf("[POST /get-security-groups][%d] getSecurityGroupsOK  %+v", 200, o.Payload)
}
func (o *GetSecurityGroupsOK) GetPayload() []*models.SecurityGroup {
	return o.Payload
}

func (o *GetSecurityGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityGroupsBadRequest creates a GetSecurityGroupsBadRequest with default headers values
func NewGetSecurityGroupsBadRequest() *GetSecurityGroupsBadRequest {
	return &GetSecurityGroupsBadRequest{}
}

/* GetSecurityGroupsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSecurityGroupsBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSecurityGroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-security-groups][%d] getSecurityGroupsBadRequest  %+v", 400, o.Payload)
}
func (o *GetSecurityGroupsBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSecurityGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityGroupsNotFound creates a GetSecurityGroupsNotFound with default headers values
func NewGetSecurityGroupsNotFound() *GetSecurityGroupsNotFound {
	return &GetSecurityGroupsNotFound{}
}

/* GetSecurityGroupsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSecurityGroupsNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSecurityGroupsNotFound) Error() string {
	return fmt.Sprintf("[POST /get-security-groups][%d] getSecurityGroupsNotFound  %+v", 404, o.Payload)
}
func (o *GetSecurityGroupsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSecurityGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityGroupsInternalServerError creates a GetSecurityGroupsInternalServerError with default headers values
func NewGetSecurityGroupsInternalServerError() *GetSecurityGroupsInternalServerError {
	return &GetSecurityGroupsInternalServerError{}
}

/* GetSecurityGroupsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetSecurityGroupsInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetSecurityGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-security-groups][%d] getSecurityGroupsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSecurityGroupsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSecurityGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
