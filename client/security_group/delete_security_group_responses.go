// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// DeleteSecurityGroupReader is a Reader for the DeleteSecurityGroup structure.
type DeleteSecurityGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSecurityGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSecurityGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewDeleteSecurityGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewDeleteSecurityGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewDeleteSecurityGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteSecurityGroupOK creates a DeleteSecurityGroupOK with default headers values
func NewDeleteSecurityGroupOK() *DeleteSecurityGroupOK {
	return &DeleteSecurityGroupOK{}
}

/* DeleteSecurityGroupOK describes a response with status code 200, with default header values.

DeleteSecurityGroupOK delete security group o k
*/
type DeleteSecurityGroupOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDeleteSecurityGroup
}

func (o *DeleteSecurityGroupOK) Error() string {
	return fmt.Sprintf("[POST /delete-security-group][%d] deleteSecurityGroupOK  %+v", 200, o.Payload)
}
func (o *DeleteSecurityGroupOK) GetPayload() []*models.WithTaskDeleteSecurityGroup {
	return o.Payload
}

func (o *DeleteSecurityGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecurityGroupBadRequest creates a DeleteSecurityGroupBadRequest with default headers values
func NewDeleteSecurityGroupBadRequest() *DeleteSecurityGroupBadRequest {
	return &DeleteSecurityGroupBadRequest{}
}

/* DeleteSecurityGroupBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteSecurityGroupBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteSecurityGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /delete-security-group][%d] deleteSecurityGroupBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteSecurityGroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSecurityGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecurityGroupNotFound creates a DeleteSecurityGroupNotFound with default headers values
func NewDeleteSecurityGroupNotFound() *DeleteSecurityGroupNotFound {
	return &DeleteSecurityGroupNotFound{}
}

/* DeleteSecurityGroupNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteSecurityGroupNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteSecurityGroupNotFound) Error() string {
	return fmt.Sprintf("[POST /delete-security-group][%d] deleteSecurityGroupNotFound  %+v", 404, o.Payload)
}
func (o *DeleteSecurityGroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSecurityGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecurityGroupInternalServerError creates a DeleteSecurityGroupInternalServerError with default headers values
func NewDeleteSecurityGroupInternalServerError() *DeleteSecurityGroupInternalServerError {
	return &DeleteSecurityGroupInternalServerError{}
}

/* DeleteSecurityGroupInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteSecurityGroupInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *DeleteSecurityGroupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /delete-security-group][%d] deleteSecurityGroupInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteSecurityGroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *DeleteSecurityGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
