// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpdateSecurityGroupReader is a Reader for the UpdateSecurityGroup structure.
type UpdateSecurityGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSecurityGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSecurityGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewUpdateSecurityGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpdateSecurityGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpdateSecurityGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateSecurityGroupOK creates a UpdateSecurityGroupOK with default headers values
func NewUpdateSecurityGroupOK() *UpdateSecurityGroupOK {
	return &UpdateSecurityGroupOK{}
}

/* UpdateSecurityGroupOK describes a response with status code 200, with default header values.

UpdateSecurityGroupOK update security group o k
*/
type UpdateSecurityGroupOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskSecurityGroup
}

func (o *UpdateSecurityGroupOK) Error() string {
	return fmt.Sprintf("[POST /update-security-group][%d] updateSecurityGroupOK  %+v", 200, o.Payload)
}
func (o *UpdateSecurityGroupOK) GetPayload() []*models.WithTaskSecurityGroup {
	return o.Payload
}

func (o *UpdateSecurityGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSecurityGroupBadRequest creates a UpdateSecurityGroupBadRequest with default headers values
func NewUpdateSecurityGroupBadRequest() *UpdateSecurityGroupBadRequest {
	return &UpdateSecurityGroupBadRequest{}
}

/* UpdateSecurityGroupBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateSecurityGroupBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateSecurityGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /update-security-group][%d] updateSecurityGroupBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateSecurityGroupBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateSecurityGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSecurityGroupNotFound creates a UpdateSecurityGroupNotFound with default headers values
func NewUpdateSecurityGroupNotFound() *UpdateSecurityGroupNotFound {
	return &UpdateSecurityGroupNotFound{}
}

/* UpdateSecurityGroupNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateSecurityGroupNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateSecurityGroupNotFound) Error() string {
	return fmt.Sprintf("[POST /update-security-group][%d] updateSecurityGroupNotFound  %+v", 404, o.Payload)
}
func (o *UpdateSecurityGroupNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateSecurityGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSecurityGroupInternalServerError creates a UpdateSecurityGroupInternalServerError with default headers values
func NewUpdateSecurityGroupInternalServerError() *UpdateSecurityGroupInternalServerError {
	return &UpdateSecurityGroupInternalServerError{}
}

/* UpdateSecurityGroupInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateSecurityGroupInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateSecurityGroupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update-security-group][%d] updateSecurityGroupInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateSecurityGroupInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateSecurityGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
