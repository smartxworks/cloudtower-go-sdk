// Code generated by go-swagger; DO NOT EDIT.

package nfs_inode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetNfsInodesConnectionReader is a Reader for the GetNfsInodesConnection structure.
type GetNfsInodesConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNfsInodesConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNfsInodesConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetNfsInodesConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetNfsInodesConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetNfsInodesConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNfsInodesConnectionOK creates a GetNfsInodesConnectionOK with default headers values
func NewGetNfsInodesConnectionOK() *GetNfsInodesConnectionOK {
	return &GetNfsInodesConnectionOK{}
}

/* GetNfsInodesConnectionOK describes a response with status code 200, with default header values.

GetNfsInodesConnectionOK get nfs inodes connection o k
*/
type GetNfsInodesConnectionOK struct {
	XTowerRequestID string

	Payload *models.NfsInodeConnection
}

func (o *GetNfsInodesConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-nfs-inodes-connection][%d] getNfsInodesConnectionOK  %+v", 200, o.Payload)
}
func (o *GetNfsInodesConnectionOK) GetPayload() *models.NfsInodeConnection {
	return o.Payload
}

func (o *GetNfsInodesConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.NfsInodeConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNfsInodesConnectionBadRequest creates a GetNfsInodesConnectionBadRequest with default headers values
func NewGetNfsInodesConnectionBadRequest() *GetNfsInodesConnectionBadRequest {
	return &GetNfsInodesConnectionBadRequest{}
}

/* GetNfsInodesConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetNfsInodesConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNfsInodesConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-nfs-inodes-connection][%d] getNfsInodesConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetNfsInodesConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNfsInodesConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNfsInodesConnectionNotFound creates a GetNfsInodesConnectionNotFound with default headers values
func NewGetNfsInodesConnectionNotFound() *GetNfsInodesConnectionNotFound {
	return &GetNfsInodesConnectionNotFound{}
}

/* GetNfsInodesConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetNfsInodesConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNfsInodesConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-nfs-inodes-connection][%d] getNfsInodesConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetNfsInodesConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNfsInodesConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNfsInodesConnectionInternalServerError creates a GetNfsInodesConnectionInternalServerError with default headers values
func NewGetNfsInodesConnectionInternalServerError() *GetNfsInodesConnectionInternalServerError {
	return &GetNfsInodesConnectionInternalServerError{}
}

/* GetNfsInodesConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetNfsInodesConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetNfsInodesConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-nfs-inodes-connection][%d] getNfsInodesConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetNfsInodesConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetNfsInodesConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
