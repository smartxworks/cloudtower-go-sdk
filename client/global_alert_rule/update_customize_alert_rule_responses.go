// Code generated by go-swagger; DO NOT EDIT.

package global_alert_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// UpdateCustomizeAlertRuleReader is a Reader for the UpdateCustomizeAlertRule structure.
type UpdateCustomizeAlertRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCustomizeAlertRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCustomizeAlertRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewUpdateCustomizeAlertRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewUpdateCustomizeAlertRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewUpdateCustomizeAlertRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateCustomizeAlertRuleOK creates a UpdateCustomizeAlertRuleOK with default headers values
func NewUpdateCustomizeAlertRuleOK() *UpdateCustomizeAlertRuleOK {
	return &UpdateCustomizeAlertRuleOK{}
}

/* UpdateCustomizeAlertRuleOK describes a response with status code 200, with default header values.

UpdateCustomizeAlertRuleOK update customize alert rule o k
*/
type UpdateCustomizeAlertRuleOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskGlobalAlertRule
}

func (o *UpdateCustomizeAlertRuleOK) Error() string {
	return fmt.Sprintf("[POST /update-customize-alert-rule][%d] updateCustomizeAlertRuleOK  %+v", 200, o.Payload)
}
func (o *UpdateCustomizeAlertRuleOK) GetPayload() []*models.WithTaskGlobalAlertRule {
	return o.Payload
}

func (o *UpdateCustomizeAlertRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomizeAlertRuleBadRequest creates a UpdateCustomizeAlertRuleBadRequest with default headers values
func NewUpdateCustomizeAlertRuleBadRequest() *UpdateCustomizeAlertRuleBadRequest {
	return &UpdateCustomizeAlertRuleBadRequest{}
}

/* UpdateCustomizeAlertRuleBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateCustomizeAlertRuleBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateCustomizeAlertRuleBadRequest) Error() string {
	return fmt.Sprintf("[POST /update-customize-alert-rule][%d] updateCustomizeAlertRuleBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateCustomizeAlertRuleBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateCustomizeAlertRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomizeAlertRuleNotFound creates a UpdateCustomizeAlertRuleNotFound with default headers values
func NewUpdateCustomizeAlertRuleNotFound() *UpdateCustomizeAlertRuleNotFound {
	return &UpdateCustomizeAlertRuleNotFound{}
}

/* UpdateCustomizeAlertRuleNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateCustomizeAlertRuleNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateCustomizeAlertRuleNotFound) Error() string {
	return fmt.Sprintf("[POST /update-customize-alert-rule][%d] updateCustomizeAlertRuleNotFound  %+v", 404, o.Payload)
}
func (o *UpdateCustomizeAlertRuleNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateCustomizeAlertRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomizeAlertRuleInternalServerError creates a UpdateCustomizeAlertRuleInternalServerError with default headers values
func NewUpdateCustomizeAlertRuleInternalServerError() *UpdateCustomizeAlertRuleInternalServerError {
	return &UpdateCustomizeAlertRuleInternalServerError{}
}

/* UpdateCustomizeAlertRuleInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateCustomizeAlertRuleInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *UpdateCustomizeAlertRuleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update-customize-alert-rule][%d] updateCustomizeAlertRuleInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateCustomizeAlertRuleInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *UpdateCustomizeAlertRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
