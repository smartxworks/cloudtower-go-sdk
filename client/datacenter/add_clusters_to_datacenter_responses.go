// Code generated by go-swagger; DO NOT EDIT.

package datacenter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// AddClustersToDatacenterReader is a Reader for the AddClustersToDatacenter structure.
type AddClustersToDatacenterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddClustersToDatacenterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddClustersToDatacenterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewAddClustersToDatacenterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewAddClustersToDatacenterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewAddClustersToDatacenterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddClustersToDatacenterOK creates a AddClustersToDatacenterOK with default headers values
func NewAddClustersToDatacenterOK() *AddClustersToDatacenterOK {
	return &AddClustersToDatacenterOK{}
}

/* AddClustersToDatacenterOK describes a response with status code 200, with default header values.

AddClustersToDatacenterOK add clusters to datacenter o k
*/
type AddClustersToDatacenterOK struct {
	XTowerRequestID string

	Payload []*models.WithTaskDatacenter
}

func (o *AddClustersToDatacenterOK) Error() string {
	return fmt.Sprintf("[POST /add-clusters-to-datacenter][%d] addClustersToDatacenterOK  %+v", 200, o.Payload)
}
func (o *AddClustersToDatacenterOK) GetPayload() []*models.WithTaskDatacenter {
	return o.Payload
}

func (o *AddClustersToDatacenterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddClustersToDatacenterBadRequest creates a AddClustersToDatacenterBadRequest with default headers values
func NewAddClustersToDatacenterBadRequest() *AddClustersToDatacenterBadRequest {
	return &AddClustersToDatacenterBadRequest{}
}

/* AddClustersToDatacenterBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddClustersToDatacenterBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AddClustersToDatacenterBadRequest) Error() string {
	return fmt.Sprintf("[POST /add-clusters-to-datacenter][%d] addClustersToDatacenterBadRequest  %+v", 400, o.Payload)
}
func (o *AddClustersToDatacenterBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AddClustersToDatacenterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddClustersToDatacenterNotFound creates a AddClustersToDatacenterNotFound with default headers values
func NewAddClustersToDatacenterNotFound() *AddClustersToDatacenterNotFound {
	return &AddClustersToDatacenterNotFound{}
}

/* AddClustersToDatacenterNotFound describes a response with status code 404, with default header values.

Not found
*/
type AddClustersToDatacenterNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AddClustersToDatacenterNotFound) Error() string {
	return fmt.Sprintf("[POST /add-clusters-to-datacenter][%d] addClustersToDatacenterNotFound  %+v", 404, o.Payload)
}
func (o *AddClustersToDatacenterNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AddClustersToDatacenterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddClustersToDatacenterInternalServerError creates a AddClustersToDatacenterInternalServerError with default headers values
func NewAddClustersToDatacenterInternalServerError() *AddClustersToDatacenterInternalServerError {
	return &AddClustersToDatacenterInternalServerError{}
}

/* AddClustersToDatacenterInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type AddClustersToDatacenterInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *AddClustersToDatacenterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /add-clusters-to-datacenter][%d] addClustersToDatacenterInternalServerError  %+v", 500, o.Payload)
}
func (o *AddClustersToDatacenterInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *AddClustersToDatacenterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
