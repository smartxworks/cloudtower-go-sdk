// Code generated by go-swagger; DO NOT EDIT.

package iscsi_target

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smartxworks/cloudtower-go-sdk/v2/models"
)

// GetIscsiTargetsConnectionReader is a Reader for the GetIscsiTargetsConnection structure.
type GetIscsiTargetsConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIscsiTargetsConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIscsiTargetsConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return result, nil
	case 400:
		result := NewGetIscsiTargetsConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 404:
		result := NewGetIscsiTargetsConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	case 500:
		result := NewGetIscsiTargetsConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, models.NewUnexpectedError(response, err)
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIscsiTargetsConnectionOK creates a GetIscsiTargetsConnectionOK with default headers values
func NewGetIscsiTargetsConnectionOK() *GetIscsiTargetsConnectionOK {
	return &GetIscsiTargetsConnectionOK{}
}

/* GetIscsiTargetsConnectionOK describes a response with status code 200, with default header values.

GetIscsiTargetsConnectionOK get iscsi targets connection o k
*/
type GetIscsiTargetsConnectionOK struct {
	XTowerRequestID string

	Payload *models.IscsiTargetConnection
}

func (o *GetIscsiTargetsConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-iscsi-targets-connection][%d] getIscsiTargetsConnectionOK  %+v", 200, o.Payload)
}
func (o *GetIscsiTargetsConnectionOK) GetPayload() *models.IscsiTargetConnection {
	return o.Payload
}

func (o *GetIscsiTargetsConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.IscsiTargetConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIscsiTargetsConnectionBadRequest creates a GetIscsiTargetsConnectionBadRequest with default headers values
func NewGetIscsiTargetsConnectionBadRequest() *GetIscsiTargetsConnectionBadRequest {
	return &GetIscsiTargetsConnectionBadRequest{}
}

/* GetIscsiTargetsConnectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetIscsiTargetsConnectionBadRequest struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetIscsiTargetsConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-iscsi-targets-connection][%d] getIscsiTargetsConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetIscsiTargetsConnectionBadRequest) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIscsiTargetsConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIscsiTargetsConnectionNotFound creates a GetIscsiTargetsConnectionNotFound with default headers values
func NewGetIscsiTargetsConnectionNotFound() *GetIscsiTargetsConnectionNotFound {
	return &GetIscsiTargetsConnectionNotFound{}
}

/* GetIscsiTargetsConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetIscsiTargetsConnectionNotFound struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetIscsiTargetsConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /get-iscsi-targets-connection][%d] getIscsiTargetsConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetIscsiTargetsConnectionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIscsiTargetsConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIscsiTargetsConnectionInternalServerError creates a GetIscsiTargetsConnectionInternalServerError with default headers values
func NewGetIscsiTargetsConnectionInternalServerError() *GetIscsiTargetsConnectionInternalServerError {
	return &GetIscsiTargetsConnectionInternalServerError{}
}

/* GetIscsiTargetsConnectionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetIscsiTargetsConnectionInternalServerError struct {
	XTowerRequestID string

	Payload *models.ErrorBody
}

func (o *GetIscsiTargetsConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-iscsi-targets-connection][%d] getIscsiTargetsConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetIscsiTargetsConnectionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetIscsiTargetsConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-tower-request-id
	hdrXTowerRequestID := response.GetHeader("x-tower-request-id")

	if hdrXTowerRequestID != "" {
		o.XTowerRequestID = hdrXTowerRequestID
	}

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
