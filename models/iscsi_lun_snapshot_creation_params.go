// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IscsiLunSnapshotCreationParams iscsi lun snapshot creation params
//
// swagger:model IscsiLunSnapshotCreationParams
type IscsiLunSnapshotCreationParams struct {

	// effect
	Effect *IscsiLunSnapshotCreationEffect `json:"effect,omitempty"`

	// iscsi lun id
	// Required: true
	IscsiLunID *string `json:"iscsi_lun_id"`

	// iscsi target id
	// Required: true
	IscsiTargetID *string `json:"iscsi_target_id"`

	// name
	// Required: true
	Name *string `json:"name"`

	MarshalOpts *IscsiLunSnapshotCreationParamsMarshalOpts `json:"-"`
}

type IscsiLunSnapshotCreationParamsMarshalOpts struct {
	Effect_Explicit_Null_When_Empty bool

	IscsiLunID_Explicit_Null_When_Empty bool

	IscsiTargetID_Explicit_Null_When_Empty bool

	Name_Explicit_Null_When_Empty bool
}

func (m IscsiLunSnapshotCreationParams) MarshalJSON() ([]byte, error) {
	var b bytes.Buffer
	b.WriteString("{")

	first := true

	// handle nullable field effect
	if m.Effect != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"effect\":")
		bytes, err := swag.WriteJSON(m.Effect)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Effect_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"effect\":null")
		first = false
	}

	// handle nullable field iscsi_lun_id
	if m.IscsiLunID != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"iscsi_lun_id\":")
		bytes, err := swag.WriteJSON(m.IscsiLunID)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IscsiLunID_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"iscsi_lun_id\":null")
		first = false
	}

	// handle nullable field iscsi_target_id
	if m.IscsiTargetID != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"iscsi_target_id\":")
		bytes, err := swag.WriteJSON(m.IscsiTargetID)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IscsiTargetID_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"iscsi_target_id\":null")
		first = false
	}

	// handle nullable field name
	if m.Name != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"name\":")
		bytes, err := swag.WriteJSON(m.Name)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Name_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"name\":null")
		first = false
	}

	b.WriteString("}")
	return b.Bytes(), nil
}

// Validate validates this iscsi lun snapshot creation params
func (m *IscsiLunSnapshotCreationParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEffect(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIscsiLunID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIscsiTargetID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IscsiLunSnapshotCreationParams) validateEffect(formats strfmt.Registry) error {
	if swag.IsZero(m.Effect) { // not required
		return nil
	}

	if m.Effect != nil {
		if err := m.Effect.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("effect")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("effect")
			}
			return err
		}
	}

	return nil
}

func (m *IscsiLunSnapshotCreationParams) validateIscsiLunID(formats strfmt.Registry) error {

	if err := validate.Required("iscsi_lun_id", "body", m.IscsiLunID); err != nil {
		return err
	}

	return nil
}

func (m *IscsiLunSnapshotCreationParams) validateIscsiTargetID(formats strfmt.Registry) error {

	if err := validate.Required("iscsi_target_id", "body", m.IscsiTargetID); err != nil {
		return err
	}

	return nil
}

func (m *IscsiLunSnapshotCreationParams) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this iscsi lun snapshot creation params based on the context it is used
func (m *IscsiLunSnapshotCreationParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateEffect(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IscsiLunSnapshotCreationParams) contextValidateEffect(ctx context.Context, formats strfmt.Registry) error {

	if m.Effect != nil {
		if err := m.Effect.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("effect")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("effect")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IscsiLunSnapshotCreationParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IscsiLunSnapshotCreationParams) UnmarshalBinary(b []byte) error {
	var res IscsiLunSnapshotCreationParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
