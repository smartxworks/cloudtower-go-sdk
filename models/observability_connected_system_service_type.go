// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ObservabilityConnectedSystemServiceType observability connected system service type
//
// swagger:model ObservabilityConnectedSystemServiceType
type ObservabilityConnectedSystemServiceType string

func NewObservabilityConnectedSystemServiceType(value ObservabilityConnectedSystemServiceType) *ObservabilityConnectedSystemServiceType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ObservabilityConnectedSystemServiceType.
func (m ObservabilityConnectedSystemServiceType) Pointer() *ObservabilityConnectedSystemServiceType {
	return &m
}

const (

	// ObservabilityConnectedSystemServiceTypeBACKUPSERVICE captures enum value "BACKUP_SERVICE"
	ObservabilityConnectedSystemServiceTypeBACKUPSERVICE ObservabilityConnectedSystemServiceType = "BACKUP_SERVICE"

	// ObservabilityConnectedSystemServiceTypeCLOUDTOWER captures enum value "CLOUDTOWER"
	ObservabilityConnectedSystemServiceTypeCLOUDTOWER ObservabilityConnectedSystemServiceType = "CLOUDTOWER"

	// ObservabilityConnectedSystemServiceTypeEVEROUTESERVICE captures enum value "EVEROUTE_SERVICE"
	ObservabilityConnectedSystemServiceTypeEVEROUTESERVICE ObservabilityConnectedSystemServiceType = "EVEROUTE_SERVICE"

	// ObservabilityConnectedSystemServiceTypeOBSERVABILITYSERVICE captures enum value "OBSERVABILITY_SERVICE"
	ObservabilityConnectedSystemServiceTypeOBSERVABILITYSERVICE ObservabilityConnectedSystemServiceType = "OBSERVABILITY_SERVICE"

	// ObservabilityConnectedSystemServiceTypeREPLICATIONSERVICE captures enum value "REPLICATION_SERVICE"
	ObservabilityConnectedSystemServiceTypeREPLICATIONSERVICE ObservabilityConnectedSystemServiceType = "REPLICATION_SERVICE"

	// ObservabilityConnectedSystemServiceTypeSFSSERVICE captures enum value "SFS_SERVICE"
	ObservabilityConnectedSystemServiceTypeSFSSERVICE ObservabilityConnectedSystemServiceType = "SFS_SERVICE"

	// ObservabilityConnectedSystemServiceTypeSKSSERVICE captures enum value "SKS_SERVICE"
	ObservabilityConnectedSystemServiceTypeSKSSERVICE ObservabilityConnectedSystemServiceType = "SKS_SERVICE"
)

// for schema
var observabilityConnectedSystemServiceTypeEnum []interface{}

func init() {
	var res []ObservabilityConnectedSystemServiceType
	if err := json.Unmarshal([]byte(`["BACKUP_SERVICE","CLOUDTOWER","EVEROUTE_SERVICE","OBSERVABILITY_SERVICE","REPLICATION_SERVICE","SFS_SERVICE","SKS_SERVICE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		observabilityConnectedSystemServiceTypeEnum = append(observabilityConnectedSystemServiceTypeEnum, v)
	}
}

func (m ObservabilityConnectedSystemServiceType) validateObservabilityConnectedSystemServiceTypeEnum(path, location string, value ObservabilityConnectedSystemServiceType) error {
	if err := validate.EnumCase(path, location, value, observabilityConnectedSystemServiceTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this observability connected system service type
func (m ObservabilityConnectedSystemServiceType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateObservabilityConnectedSystemServiceTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this observability connected system service type based on context it is used
func (m ObservabilityConnectedSystemServiceType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
