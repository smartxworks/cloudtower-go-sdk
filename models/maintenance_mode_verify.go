// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MaintenanceModeVerify maintenance mode verify
//
// swagger:model MaintenanceModeVerify
type MaintenanceModeVerify struct {

	// changed
	Changed *bool `json:"changed,omitempty"`

	// reason
	Reason *string `json:"reason,omitempty"`

	MarshalOpts *MaintenanceModeVerifyMarshalOpts `json:"-"`
}

type MaintenanceModeVerifyMarshalOpts struct {
	Changed_Explicit_Null_When_Empty bool

	Reason_Explicit_Null_When_Empty bool
}

func (m MaintenanceModeVerify) MarshalJSON() ([]byte, error) {
	var b bytes.Buffer
	b.WriteString("{")

	first := true

	// handle nullable field changed
	if m.Changed != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"changed\":")
		bytes, err := swag.WriteJSON(m.Changed)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Changed_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"changed\":null")
		first = false
	}

	// handle nullable field reason
	if m.Reason != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"reason\":")
		bytes, err := swag.WriteJSON(m.Reason)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Reason_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"reason\":null")
		first = false
	}

	b.WriteString("}")
	return b.Bytes(), nil
}

// Validate validates this maintenance mode verify
func (m *MaintenanceModeVerify) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this maintenance mode verify based on context it is used
func (m *MaintenanceModeVerify) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MaintenanceModeVerify) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MaintenanceModeVerify) UnmarshalBinary(b []byte) error {
	var res MaintenanceModeVerify
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
