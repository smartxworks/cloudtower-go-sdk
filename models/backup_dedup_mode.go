// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BackupDedupMode backup dedup mode
//
// swagger:model BackupDedupMode
type BackupDedupMode string

func NewBackupDedupMode(value BackupDedupMode) *BackupDedupMode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated BackupDedupMode.
func (m BackupDedupMode) Pointer() *BackupDedupMode {
	return &m
}

const (

	// BackupDedupModeCHAIN captures enum value "CHAIN"
	BackupDedupModeCHAIN BackupDedupMode = "CHAIN"

	// BackupDedupModeNONE captures enum value "NONE"
	BackupDedupModeNONE BackupDedupMode = "NONE"
)

// for schema
var backupDedupModeEnum []interface{}

func init() {
	var res []BackupDedupMode
	if err := json.Unmarshal([]byte(`["CHAIN","NONE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backupDedupModeEnum = append(backupDedupModeEnum, v)
	}
}

func (m BackupDedupMode) validateBackupDedupModeEnum(path, location string, value BackupDedupMode) error {
	if err := validate.EnumCase(path, location, value, backupDedupModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this backup dedup mode
func (m BackupDedupMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBackupDedupModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this backup dedup mode based on context it is used
func (m BackupDedupMode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
