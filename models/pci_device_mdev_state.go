// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PciDeviceMdevState pci device mdev state
//
// swagger:model PciDeviceMdevState
type PciDeviceMdevState string

func NewPciDeviceMdevState(value PciDeviceMdevState) *PciDeviceMdevState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated PciDeviceMdevState.
func (m PciDeviceMdevState) Pointer() *PciDeviceMdevState {
	return &m
}

const (

	// PciDeviceMdevStateENABLED captures enum value "ENABLED"
	PciDeviceMdevStateENABLED PciDeviceMdevState = "ENABLED"

	// PciDeviceMdevStateNOTENABLED captures enum value "NOT_ENABLED"
	PciDeviceMdevStateNOTENABLED PciDeviceMdevState = "NOT_ENABLED"

	// PciDeviceMdevStateNOTSUPPORT captures enum value "NOT_SUPPORT"
	PciDeviceMdevStateNOTSUPPORT PciDeviceMdevState = "NOT_SUPPORT"
)

// for schema
var pciDeviceMdevStateEnum []interface{}

func init() {
	var res []PciDeviceMdevState
	if err := json.Unmarshal([]byte(`["ENABLED","NOT_ENABLED","NOT_SUPPORT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pciDeviceMdevStateEnum = append(pciDeviceMdevStateEnum, v)
	}
}

func (m PciDeviceMdevState) validatePciDeviceMdevStateEnum(path, location string, value PciDeviceMdevState) error {
	if err := validate.EnumCase(path, location, value, pciDeviceMdevStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this pci device mdev state
func (m PciDeviceMdevState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePciDeviceMdevStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this pci device mdev state based on context it is used
func (m PciDeviceMdevState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
