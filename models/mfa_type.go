// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MfaType mfa type
//
// swagger:model MfaType
type MfaType string

func NewMfaType(value MfaType) *MfaType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated MfaType.
func (m MfaType) Pointer() *MfaType {
	return &m
}

const (

	// MfaTypeMail captures enum value "Mail"
	MfaTypeMail MfaType = "Mail"

	// MfaTypeSms captures enum value "Sms"
	MfaTypeSms MfaType = "Sms"
)

// for schema
var mfaTypeEnum []interface{}

func init() {
	var res []MfaType
	if err := json.Unmarshal([]byte(`["Mail","Sms"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mfaTypeEnum = append(mfaTypeEnum, v)
	}
}

func (m MfaType) validateMfaTypeEnum(path, location string, value MfaType) error {
	if err := validate.EnumCase(path, location, value, mfaTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this mfa type
func (m MfaType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMfaTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this mfa type based on context it is used
func (m MfaType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
