// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VirtualPrivateCloudFloatingIPCreationParams virtual private cloud floating Ip creation params
//
// swagger:model VirtualPrivateCloudFloatingIpCreationParams
type VirtualPrivateCloudFloatingIPCreationParams struct {

	// external ip
	ExternalIP *string `json:"external_ip,omitempty"`

	// external subnet id
	// Required: true
	ExternalSubnetID *string `json:"external_subnet_id"`

	// vpc id
	// Required: true
	VpcID *string `json:"vpc_id"`

	MarshalOpts *VirtualPrivateCloudFloatingIPCreationParamsMarshalOpts `json:"-"`
}

type VirtualPrivateCloudFloatingIPCreationParamsMarshalOpts struct {
	ExternalIP_Explicit_Null_When_Empty bool

	ExternalSubnetID_Explicit_Null_When_Empty bool

	VpcID_Explicit_Null_When_Empty bool
}

func (m VirtualPrivateCloudFloatingIPCreationParams) MarshalJSON() ([]byte, error) {
	var b bytes.Buffer
	b.WriteString("{")

	first := true

	// handle nullable field external_ip
	if m.ExternalIP != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"external_ip\":")
		bytes, err := swag.WriteJSON(m.ExternalIP)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ExternalIP_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"external_ip\":null")
		first = false
	}

	// handle nullable field external_subnet_id
	if m.ExternalSubnetID != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"external_subnet_id\":")
		bytes, err := swag.WriteJSON(m.ExternalSubnetID)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ExternalSubnetID_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"external_subnet_id\":null")
		first = false
	}

	// handle nullable field vpc_id
	if m.VpcID != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vpc_id\":")
		bytes, err := swag.WriteJSON(m.VpcID)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.VpcID_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vpc_id\":null")
		first = false
	}

	b.WriteString("}")
	return b.Bytes(), nil
}

// Validate validates this virtual private cloud floating Ip creation params
func (m *VirtualPrivateCloudFloatingIPCreationParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExternalSubnetID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVpcID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VirtualPrivateCloudFloatingIPCreationParams) validateExternalSubnetID(formats strfmt.Registry) error {

	if err := validate.Required("external_subnet_id", "body", m.ExternalSubnetID); err != nil {
		return err
	}

	return nil
}

func (m *VirtualPrivateCloudFloatingIPCreationParams) validateVpcID(formats strfmt.Registry) error {

	if err := validate.Required("vpc_id", "body", m.VpcID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this virtual private cloud floating Ip creation params based on context it is used
func (m *VirtualPrivateCloudFloatingIPCreationParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VirtualPrivateCloudFloatingIPCreationParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VirtualPrivateCloudFloatingIPCreationParams) UnmarshalBinary(b []byte) error {
	var res VirtualPrivateCloudFloatingIPCreationParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
