// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PciDeviceUsage pci device usage
//
// swagger:model PciDeviceUsage
type PciDeviceUsage string

func NewPciDeviceUsage(value PciDeviceUsage) *PciDeviceUsage {
	return &value
}

// Pointer returns a pointer to a freshly-allocated PciDeviceUsage.
func (m PciDeviceUsage) Pointer() *PciDeviceUsage {
	return &m
}

const (

	// PciDeviceUsageMDEV captures enum value "MDEV"
	PciDeviceUsageMDEV PciDeviceUsage = "MDEV"

	// PciDeviceUsagePASSTHROUGH captures enum value "PASS_THROUGH"
	PciDeviceUsagePASSTHROUGH PciDeviceUsage = "PASS_THROUGH"

	// PciDeviceUsageSRIOVVF captures enum value "SRIOV_VF"
	PciDeviceUsageSRIOVVF PciDeviceUsage = "SRIOV_VF"
)

// for schema
var pciDeviceUsageEnum []interface{}

func init() {
	var res []PciDeviceUsage
	if err := json.Unmarshal([]byte(`["MDEV","PASS_THROUGH","SRIOV_VF"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pciDeviceUsageEnum = append(pciDeviceUsageEnum, v)
	}
}

func (m PciDeviceUsage) validatePciDeviceUsageEnum(path, location string, value PciDeviceUsage) error {
	if err := validate.EnumCase(path, location, value, pciDeviceUsageEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this pci device usage
func (m PciDeviceUsage) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePciDeviceUsageEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this pci device usage based on context it is used
func (m PciDeviceUsage) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
