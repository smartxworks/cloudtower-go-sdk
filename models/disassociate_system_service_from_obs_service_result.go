// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DisassociateSystemServiceFromObsServiceResult disassociate system service from obs service result
//
// swagger:model DisassociateSystemServiceFromObsServiceResult
type DisassociateSystemServiceFromObsServiceResult struct {

	// error code
	ErrorCode *string `json:"errorCode,omitempty"`

	// error message
	ErrorMessage *string `json:"errorMessage,omitempty"`

	// result
	// Required: true
	Result *DisassociateSystemServiceFromObsServiceResultType `json:"result"`

	MarshalOpts *DisassociateSystemServiceFromObsServiceResultMarshalOpts `json:"-"`
}

type DisassociateSystemServiceFromObsServiceResultMarshalOpts struct {
	ErrorCode_Explicit_Null_When_Empty bool

	ErrorMessage_Explicit_Null_When_Empty bool

	Result_Explicit_Null_When_Empty bool
}

func (m DisassociateSystemServiceFromObsServiceResult) MarshalJSON() ([]byte, error) {
	var b bytes.Buffer
	b.WriteString("{")

	first := true

	// handle nullable field errorCode
	if m.ErrorCode != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"errorCode\":")
		bytes, err := swag.WriteJSON(m.ErrorCode)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ErrorCode_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"errorCode\":null")
		first = false
	}

	// handle nullable field errorMessage
	if m.ErrorMessage != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"errorMessage\":")
		bytes, err := swag.WriteJSON(m.ErrorMessage)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ErrorMessage_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"errorMessage\":null")
		first = false
	}

	// handle nullable field result
	if m.Result != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"result\":")
		bytes, err := swag.WriteJSON(m.Result)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Result_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"result\":null")
		first = false
	}

	b.WriteString("}")
	return b.Bytes(), nil
}

// Validate validates this disassociate system service from obs service result
func (m *DisassociateSystemServiceFromObsServiceResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DisassociateSystemServiceFromObsServiceResult) validateResult(formats strfmt.Registry) error {

	if err := validate.Required("result", "body", m.Result); err != nil {
		return err
	}

	if err := validate.Required("result", "body", m.Result); err != nil {
		return err
	}

	if m.Result != nil {
		if err := m.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("result")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("result")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this disassociate system service from obs service result based on the context it is used
func (m *DisassociateSystemServiceFromObsServiceResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateResult(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DisassociateSystemServiceFromObsServiceResult) contextValidateResult(ctx context.Context, formats strfmt.Registry) error {

	if m.Result != nil {
		if err := m.Result.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("result")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DisassociateSystemServiceFromObsServiceResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DisassociateSystemServiceFromObsServiceResult) UnmarshalBinary(b []byte) error {
	var res DisassociateSystemServiceFromObsServiceResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
