// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LabelGroup label group
//
// swagger:model LabelGroup
type LabelGroup struct {

	// label ids
	// Required: true
	LabelIds []string `json:"label_ids"`

	MarshalOpts *LabelGroupMarshalOpts `json:"-"`
}

type LabelGroupMarshalOpts struct {
	LabelIds_Explicit_Null_When_Empty bool
}

func (m LabelGroup) MarshalJSON() ([]byte, error) {
	var b bytes.Buffer
	b.WriteString("{")

	first := true

	// handle non nullable field label_ids without omitempty
	{
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"label_ids\":")
		bytes, err := swag.WriteJSON(m.LabelIds)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	b.WriteString("}")
	return b.Bytes(), nil
}

// Validate validates this label group
func (m *LabelGroup) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLabelIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LabelGroup) validateLabelIds(formats strfmt.Registry) error {

	if err := validate.Required("label_ids", "body", m.LabelIds); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this label group based on context it is used
func (m *LabelGroup) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LabelGroup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LabelGroup) UnmarshalBinary(b []byte) error {
	var res LabelGroup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
