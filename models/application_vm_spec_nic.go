// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ApplicationVMSpecNic application Vm spec nic
//
// swagger:model ApplicationVmSpecNic
type ApplicationVMSpecNic struct {

	// dhcp
	Dhcp *bool `json:"dhcp,omitempty"`

	// gateway
	Gateway *string `json:"gateway,omitempty"`

	// ip
	IP *string `json:"ip,omitempty"`

	// mask
	Mask *string `json:"mask,omitempty"`

	// vlan Id
	VlanID *string `json:"vlanId,omitempty"`

	MarshalOpts *ApplicationVMSpecNicMarshalOpts `json:"-"`
}

type ApplicationVMSpecNicMarshalOpts struct {
	Dhcp_Explicit_Null_When_Empty bool

	Gateway_Explicit_Null_When_Empty bool

	IP_Explicit_Null_When_Empty bool

	Mask_Explicit_Null_When_Empty bool

	VlanID_Explicit_Null_When_Empty bool
}

func (m ApplicationVMSpecNic) MarshalJSON() ([]byte, error) {
	var b bytes.Buffer
	b.WriteString("{")

	first := true

	// handle nullable field dhcp
	if m.Dhcp != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"dhcp\":")
		bytes, err := swag.WriteJSON(m.Dhcp)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Dhcp_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"dhcp\":null")
		first = false
	}

	// handle nullable field gateway
	if m.Gateway != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"gateway\":")
		bytes, err := swag.WriteJSON(m.Gateway)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Gateway_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"gateway\":null")
		first = false
	}

	// handle nullable field ip
	if m.IP != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"ip\":")
		bytes, err := swag.WriteJSON(m.IP)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IP_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"ip\":null")
		first = false
	}

	// handle nullable field mask
	if m.Mask != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"mask\":")
		bytes, err := swag.WriteJSON(m.Mask)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Mask_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"mask\":null")
		first = false
	}

	// handle nullable field vlanId
	if m.VlanID != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vlanId\":")
		bytes, err := swag.WriteJSON(m.VlanID)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.VlanID_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vlanId\":null")
		first = false
	}

	b.WriteString("}")
	return b.Bytes(), nil
}

// Validate validates this application Vm spec nic
func (m *ApplicationVMSpecNic) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this application Vm spec nic based on context it is used
func (m *ApplicationVMSpecNic) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ApplicationVMSpecNic) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApplicationVMSpecNic) UnmarshalBinary(b []byte) error {
	var res ApplicationVMSpecNic
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
