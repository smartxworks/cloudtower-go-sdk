// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NestedSecurityPolicyStatistics nested security policy statistics
//
// swagger:model NestedSecurityPolicyStatistics
type NestedSecurityPolicyStatistics struct {

	// count reset timestamp
	CountResetTimestamp *string `json:"count_reset_timestamp,omitempty"`

	// count update timestamp
	CountUpdateTimestamp *string `json:"count_update_timestamp,omitempty"`

	// match allow count
	MatchAllowCount *int32 `json:"match_allow_count,omitempty"`

	// match default allow count
	MatchDefaultAllowCount *int32 `json:"match_default_allow_count,omitempty"`

	// match default drop count
	MatchDefaultDropCount *int32 `json:"match_default_drop_count,omitempty"`

	// match drop count
	MatchDropCount *int32 `json:"match_drop_count,omitempty"`

	// match whitelist count
	MatchWhitelistCount *int32 `json:"match_whitelist_count,omitempty"`

	// total count
	TotalCount *int32 `json:"total_count,omitempty"`

	MarshalOpts *NestedSecurityPolicyStatisticsMarshalOpts `json:"-"`
}

type NestedSecurityPolicyStatisticsMarshalOpts struct {
	CountResetTimestamp_Explicit_Null_When_Empty bool

	CountUpdateTimestamp_Explicit_Null_When_Empty bool

	MatchAllowCount_Explicit_Null_When_Empty bool

	MatchDefaultAllowCount_Explicit_Null_When_Empty bool

	MatchDefaultDropCount_Explicit_Null_When_Empty bool

	MatchDropCount_Explicit_Null_When_Empty bool

	MatchWhitelistCount_Explicit_Null_When_Empty bool

	TotalCount_Explicit_Null_When_Empty bool
}

func (m NestedSecurityPolicyStatistics) MarshalJSON() ([]byte, error) {
	var b bytes.Buffer
	b.WriteString("{")

	first := true

	// handle nullable field count_reset_timestamp
	if m.CountResetTimestamp != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"count_reset_timestamp\":")
		bytes, err := swag.WriteJSON(m.CountResetTimestamp)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CountResetTimestamp_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"count_reset_timestamp\":null")
		first = false
	}

	// handle nullable field count_update_timestamp
	if m.CountUpdateTimestamp != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"count_update_timestamp\":")
		bytes, err := swag.WriteJSON(m.CountUpdateTimestamp)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CountUpdateTimestamp_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"count_update_timestamp\":null")
		first = false
	}

	// handle nullable field match_allow_count
	if m.MatchAllowCount != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_allow_count\":")
		bytes, err := swag.WriteJSON(m.MatchAllowCount)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MatchAllowCount_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_allow_count\":null")
		first = false
	}

	// handle nullable field match_default_allow_count
	if m.MatchDefaultAllowCount != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_default_allow_count\":")
		bytes, err := swag.WriteJSON(m.MatchDefaultAllowCount)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MatchDefaultAllowCount_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_default_allow_count\":null")
		first = false
	}

	// handle nullable field match_default_drop_count
	if m.MatchDefaultDropCount != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_default_drop_count\":")
		bytes, err := swag.WriteJSON(m.MatchDefaultDropCount)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MatchDefaultDropCount_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_default_drop_count\":null")
		first = false
	}

	// handle nullable field match_drop_count
	if m.MatchDropCount != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_drop_count\":")
		bytes, err := swag.WriteJSON(m.MatchDropCount)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MatchDropCount_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_drop_count\":null")
		first = false
	}

	// handle nullable field match_whitelist_count
	if m.MatchWhitelistCount != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_whitelist_count\":")
		bytes, err := swag.WriteJSON(m.MatchWhitelistCount)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MatchWhitelistCount_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"match_whitelist_count\":null")
		first = false
	}

	// handle nullable field total_count
	if m.TotalCount != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"total_count\":")
		bytes, err := swag.WriteJSON(m.TotalCount)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.TotalCount_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"total_count\":null")
		first = false
	}

	b.WriteString("}")
	return b.Bytes(), nil
}

// Validate validates this nested security policy statistics
func (m *NestedSecurityPolicyStatistics) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this nested security policy statistics based on context it is used
func (m *NestedSecurityPolicyStatistics) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NestedSecurityPolicyStatistics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NestedSecurityPolicyStatistics) UnmarshalBinary(b []byte) error {
	var res NestedSecurityPolicyStatistics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
