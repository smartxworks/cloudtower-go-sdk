// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ReplicationTargetExecutionCreation replication target execution creation
//
// swagger:model ReplicationTargetExecutionCreation
type ReplicationTargetExecutionCreation string

func NewReplicationTargetExecutionCreation(value ReplicationTargetExecutionCreation) *ReplicationTargetExecutionCreation {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ReplicationTargetExecutionCreation.
func (m ReplicationTargetExecutionCreation) Pointer() *ReplicationTargetExecutionCreation {
	return &m
}

const (

	// ReplicationTargetExecutionCreationFAILBACK captures enum value "FAILBACK"
	ReplicationTargetExecutionCreationFAILBACK ReplicationTargetExecutionCreation = "FAILBACK"

	// ReplicationTargetExecutionCreationFAILOVER captures enum value "FAILOVER"
	ReplicationTargetExecutionCreationFAILOVER ReplicationTargetExecutionCreation = "FAILOVER"

	// ReplicationTargetExecutionCreationREPLICATION captures enum value "REPLICATION"
	ReplicationTargetExecutionCreationREPLICATION ReplicationTargetExecutionCreation = "REPLICATION"
)

// for schema
var replicationTargetExecutionCreationEnum []interface{}

func init() {
	var res []ReplicationTargetExecutionCreation
	if err := json.Unmarshal([]byte(`["FAILBACK","FAILOVER","REPLICATION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		replicationTargetExecutionCreationEnum = append(replicationTargetExecutionCreationEnum, v)
	}
}

func (m ReplicationTargetExecutionCreation) validateReplicationTargetExecutionCreationEnum(path, location string, value ReplicationTargetExecutionCreation) error {
	if err := validate.EnumCase(path, location, value, replicationTargetExecutionCreationEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this replication target execution creation
func (m ReplicationTargetExecutionCreation) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateReplicationTargetExecutionCreationEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this replication target execution creation based on context it is used
func (m ReplicationTargetExecutionCreation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
