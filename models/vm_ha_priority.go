// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VMHaPriority Vm ha priority
//
// swagger:model VmHaPriority
type VMHaPriority string

func NewVMHaPriority(value VMHaPriority) *VMHaPriority {
	return &value
}

// Pointer returns a pointer to a freshly-allocated VMHaPriority.
func (m VMHaPriority) Pointer() *VMHaPriority {
	return &m
}

const (

	// VMHaPriorityLEVEL1LOW captures enum value "LEVEL_1_LOW"
	VMHaPriorityLEVEL1LOW VMHaPriority = "LEVEL_1_LOW"

	// VMHaPriorityLEVEL2MEDIUM captures enum value "LEVEL_2_MEDIUM"
	VMHaPriorityLEVEL2MEDIUM VMHaPriority = "LEVEL_2_MEDIUM"

	// VMHaPriorityLEVEL3HIGH captures enum value "LEVEL_3_HIGH"
	VMHaPriorityLEVEL3HIGH VMHaPriority = "LEVEL_3_HIGH"
)

// for schema
var vmHaPriorityEnum []interface{}

func init() {
	var res []VMHaPriority
	if err := json.Unmarshal([]byte(`["LEVEL_1_LOW","LEVEL_2_MEDIUM","LEVEL_3_HIGH"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmHaPriorityEnum = append(vmHaPriorityEnum, v)
	}
}

func (m VMHaPriority) validateVMHaPriorityEnum(path, location string, value VMHaPriority) error {
	if err := validate.EnumCase(path, location, value, vmHaPriorityEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Vm ha priority
func (m VMHaPriority) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVMHaPriorityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this Vm ha priority based on context it is used
func (m VMHaPriority) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
