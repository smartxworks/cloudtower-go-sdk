// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AlertWhereInput alert where input
//
// swagger:model AlertWhereInput
type AlertWhereInput struct {

	// a n d
	AND []*AlertWhereInput `json:"AND,omitempty"`

	// n o t
	NOT []*AlertWhereInput `json:"NOT,omitempty"`

	// o r
	OR []*AlertWhereInput `json:"OR,omitempty"`

	// alert rule
	AlertRule *AlertRuleWhereInput `json:"alert_rule,omitempty"`

	// cause
	Cause *string `json:"cause,omitempty"`

	// cause contains
	CauseContains *string `json:"cause_contains,omitempty"`

	// cause ends with
	CauseEndsWith *string `json:"cause_ends_with,omitempty"`

	// cause gt
	CauseGt *string `json:"cause_gt,omitempty"`

	// cause gte
	CauseGte *string `json:"cause_gte,omitempty"`

	// cause in
	CauseIn []string `json:"cause_in,omitempty"`

	// cause lt
	CauseLt *string `json:"cause_lt,omitempty"`

	// cause lte
	CauseLte *string `json:"cause_lte,omitempty"`

	// cause not
	CauseNot *string `json:"cause_not,omitempty"`

	// cause not contains
	CauseNotContains *string `json:"cause_not_contains,omitempty"`

	// cause not ends with
	CauseNotEndsWith *string `json:"cause_not_ends_with,omitempty"`

	// cause not in
	CauseNotIn []string `json:"cause_not_in,omitempty"`

	// cause not starts with
	CauseNotStartsWith *string `json:"cause_not_starts_with,omitempty"`

	// cause starts with
	CauseStartsWith *string `json:"cause_starts_with,omitempty"`

	// cluster
	Cluster *ClusterWhereInput `json:"cluster,omitempty"`

	// create time
	CreateTime *string `json:"create_time,omitempty"`

	// create time gt
	CreateTimeGt *string `json:"create_time_gt,omitempty"`

	// create time gte
	CreateTimeGte *string `json:"create_time_gte,omitempty"`

	// create time in
	CreateTimeIn []string `json:"create_time_in,omitempty"`

	// create time lt
	CreateTimeLt *string `json:"create_time_lt,omitempty"`

	// create time lte
	CreateTimeLte *string `json:"create_time_lte,omitempty"`

	// create time not
	CreateTimeNot *string `json:"create_time_not,omitempty"`

	// create time not in
	CreateTimeNotIn []string `json:"create_time_not_in,omitempty"`

	// disk
	Disk *DiskWhereInput `json:"disk,omitempty"`

	// ended
	Ended *bool `json:"ended,omitempty"`

	// ended not
	EndedNot *bool `json:"ended_not,omitempty"`

	// host
	Host *HostWhereInput `json:"host,omitempty"`

	// id
	ID *string `json:"id,omitempty"`

	// id contains
	IDContains *string `json:"id_contains,omitempty"`

	// id ends with
	IDEndsWith *string `json:"id_ends_with,omitempty"`

	// id gt
	IDGt *string `json:"id_gt,omitempty"`

	// id gte
	IDGte *string `json:"id_gte,omitempty"`

	// id in
	IDIn []string `json:"id_in,omitempty"`

	// id lt
	IDLt *string `json:"id_lt,omitempty"`

	// id lte
	IDLte *string `json:"id_lte,omitempty"`

	// id not
	IDNot *string `json:"id_not,omitempty"`

	// id not contains
	IDNotContains *string `json:"id_not_contains,omitempty"`

	// id not ends with
	IDNotEndsWith *string `json:"id_not_ends_with,omitempty"`

	// id not in
	IDNotIn []string `json:"id_not_in,omitempty"`

	// id not starts with
	IDNotStartsWith *string `json:"id_not_starts_with,omitempty"`

	// id starts with
	IDStartsWith *string `json:"id_starts_with,omitempty"`

	// impact
	Impact *string `json:"impact,omitempty"`

	// impact contains
	ImpactContains *string `json:"impact_contains,omitempty"`

	// impact ends with
	ImpactEndsWith *string `json:"impact_ends_with,omitempty"`

	// impact gt
	ImpactGt *string `json:"impact_gt,omitempty"`

	// impact gte
	ImpactGte *string `json:"impact_gte,omitempty"`

	// impact in
	ImpactIn []string `json:"impact_in,omitempty"`

	// impact lt
	ImpactLt *string `json:"impact_lt,omitempty"`

	// impact lte
	ImpactLte *string `json:"impact_lte,omitempty"`

	// impact not
	ImpactNot *string `json:"impact_not,omitempty"`

	// impact not contains
	ImpactNotContains *string `json:"impact_not_contains,omitempty"`

	// impact not ends with
	ImpactNotEndsWith *string `json:"impact_not_ends_with,omitempty"`

	// impact not in
	ImpactNotIn []string `json:"impact_not_in,omitempty"`

	// impact not starts with
	ImpactNotStartsWith *string `json:"impact_not_starts_with,omitempty"`

	// impact starts with
	ImpactStartsWith *string `json:"impact_starts_with,omitempty"`

	// local create time
	LocalCreateTime *string `json:"local_create_time,omitempty"`

	// local create time gt
	LocalCreateTimeGt *string `json:"local_create_time_gt,omitempty"`

	// local create time gte
	LocalCreateTimeGte *string `json:"local_create_time_gte,omitempty"`

	// local create time in
	LocalCreateTimeIn []string `json:"local_create_time_in,omitempty"`

	// local create time lt
	LocalCreateTimeLt *string `json:"local_create_time_lt,omitempty"`

	// local create time lte
	LocalCreateTimeLte *string `json:"local_create_time_lte,omitempty"`

	// local create time not
	LocalCreateTimeNot *string `json:"local_create_time_not,omitempty"`

	// local create time not in
	LocalCreateTimeNotIn []string `json:"local_create_time_not_in,omitempty"`

	// local end time
	LocalEndTime *string `json:"local_end_time,omitempty"`

	// local end time contains
	LocalEndTimeContains *string `json:"local_end_time_contains,omitempty"`

	// local end time ends with
	LocalEndTimeEndsWith *string `json:"local_end_time_ends_with,omitempty"`

	// local end time gt
	LocalEndTimeGt *string `json:"local_end_time_gt,omitempty"`

	// local end time gte
	LocalEndTimeGte *string `json:"local_end_time_gte,omitempty"`

	// local end time in
	LocalEndTimeIn []string `json:"local_end_time_in,omitempty"`

	// local end time lt
	LocalEndTimeLt *string `json:"local_end_time_lt,omitempty"`

	// local end time lte
	LocalEndTimeLte *string `json:"local_end_time_lte,omitempty"`

	// local end time not
	LocalEndTimeNot *string `json:"local_end_time_not,omitempty"`

	// local end time not contains
	LocalEndTimeNotContains *string `json:"local_end_time_not_contains,omitempty"`

	// local end time not ends with
	LocalEndTimeNotEndsWith *string `json:"local_end_time_not_ends_with,omitempty"`

	// local end time not in
	LocalEndTimeNotIn []string `json:"local_end_time_not_in,omitempty"`

	// local end time not starts with
	LocalEndTimeNotStartsWith *string `json:"local_end_time_not_starts_with,omitempty"`

	// local end time starts with
	LocalEndTimeStartsWith *string `json:"local_end_time_starts_with,omitempty"`

	// local id
	LocalID *string `json:"local_id,omitempty"`

	// local id contains
	LocalIDContains *string `json:"local_id_contains,omitempty"`

	// local id ends with
	LocalIDEndsWith *string `json:"local_id_ends_with,omitempty"`

	// local id gt
	LocalIDGt *string `json:"local_id_gt,omitempty"`

	// local id gte
	LocalIDGte *string `json:"local_id_gte,omitempty"`

	// local id in
	LocalIDIn []string `json:"local_id_in,omitempty"`

	// local id lt
	LocalIDLt *string `json:"local_id_lt,omitempty"`

	// local id lte
	LocalIDLte *string `json:"local_id_lte,omitempty"`

	// local id not
	LocalIDNot *string `json:"local_id_not,omitempty"`

	// local id not contains
	LocalIDNotContains *string `json:"local_id_not_contains,omitempty"`

	// local id not ends with
	LocalIDNotEndsWith *string `json:"local_id_not_ends_with,omitempty"`

	// local id not in
	LocalIDNotIn []string `json:"local_id_not_in,omitempty"`

	// local id not starts with
	LocalIDNotStartsWith *string `json:"local_id_not_starts_with,omitempty"`

	// local id starts with
	LocalIDStartsWith *string `json:"local_id_starts_with,omitempty"`

	// local start time
	LocalStartTime *string `json:"local_start_time,omitempty"`

	// local start time contains
	LocalStartTimeContains *string `json:"local_start_time_contains,omitempty"`

	// local start time ends with
	LocalStartTimeEndsWith *string `json:"local_start_time_ends_with,omitempty"`

	// local start time gt
	LocalStartTimeGt *string `json:"local_start_time_gt,omitempty"`

	// local start time gte
	LocalStartTimeGte *string `json:"local_start_time_gte,omitempty"`

	// local start time in
	LocalStartTimeIn []string `json:"local_start_time_in,omitempty"`

	// local start time lt
	LocalStartTimeLt *string `json:"local_start_time_lt,omitempty"`

	// local start time lte
	LocalStartTimeLte *string `json:"local_start_time_lte,omitempty"`

	// local start time not
	LocalStartTimeNot *string `json:"local_start_time_not,omitempty"`

	// local start time not contains
	LocalStartTimeNotContains *string `json:"local_start_time_not_contains,omitempty"`

	// local start time not ends with
	LocalStartTimeNotEndsWith *string `json:"local_start_time_not_ends_with,omitempty"`

	// local start time not in
	LocalStartTimeNotIn []string `json:"local_start_time_not_in,omitempty"`

	// local start time not starts with
	LocalStartTimeNotStartsWith *string `json:"local_start_time_not_starts_with,omitempty"`

	// local start time starts with
	LocalStartTimeStartsWith *string `json:"local_start_time_starts_with,omitempty"`

	// local update time
	LocalUpdateTime *string `json:"local_update_time,omitempty"`

	// local update time contains
	LocalUpdateTimeContains *string `json:"local_update_time_contains,omitempty"`

	// local update time ends with
	LocalUpdateTimeEndsWith *string `json:"local_update_time_ends_with,omitempty"`

	// local update time gt
	LocalUpdateTimeGt *string `json:"local_update_time_gt,omitempty"`

	// local update time gte
	LocalUpdateTimeGte *string `json:"local_update_time_gte,omitempty"`

	// local update time in
	LocalUpdateTimeIn []string `json:"local_update_time_in,omitempty"`

	// local update time lt
	LocalUpdateTimeLt *string `json:"local_update_time_lt,omitempty"`

	// local update time lte
	LocalUpdateTimeLte *string `json:"local_update_time_lte,omitempty"`

	// local update time not
	LocalUpdateTimeNot *string `json:"local_update_time_not,omitempty"`

	// local update time not contains
	LocalUpdateTimeNotContains *string `json:"local_update_time_not_contains,omitempty"`

	// local update time not ends with
	LocalUpdateTimeNotEndsWith *string `json:"local_update_time_not_ends_with,omitempty"`

	// local update time not in
	LocalUpdateTimeNotIn []string `json:"local_update_time_not_in,omitempty"`

	// local update time not starts with
	LocalUpdateTimeNotStartsWith *string `json:"local_update_time_not_starts_with,omitempty"`

	// local update time starts with
	LocalUpdateTimeStartsWith *string `json:"local_update_time_starts_with,omitempty"`

	// message
	Message *string `json:"message,omitempty"`

	// message contains
	MessageContains *string `json:"message_contains,omitempty"`

	// message ends with
	MessageEndsWith *string `json:"message_ends_with,omitempty"`

	// message gt
	MessageGt *string `json:"message_gt,omitempty"`

	// message gte
	MessageGte *string `json:"message_gte,omitempty"`

	// message in
	MessageIn []string `json:"message_in,omitempty"`

	// message lt
	MessageLt *string `json:"message_lt,omitempty"`

	// message lte
	MessageLte *string `json:"message_lte,omitempty"`

	// message not
	MessageNot *string `json:"message_not,omitempty"`

	// message not contains
	MessageNotContains *string `json:"message_not_contains,omitempty"`

	// message not ends with
	MessageNotEndsWith *string `json:"message_not_ends_with,omitempty"`

	// message not in
	MessageNotIn []string `json:"message_not_in,omitempty"`

	// message not starts with
	MessageNotStartsWith *string `json:"message_not_starts_with,omitempty"`

	// message starts with
	MessageStartsWith *string `json:"message_starts_with,omitempty"`

	// severity
	Severity *string `json:"severity,omitempty"`

	// severity contains
	SeverityContains *string `json:"severity_contains,omitempty"`

	// severity ends with
	SeverityEndsWith *string `json:"severity_ends_with,omitempty"`

	// severity gt
	SeverityGt *string `json:"severity_gt,omitempty"`

	// severity gte
	SeverityGte *string `json:"severity_gte,omitempty"`

	// severity in
	SeverityIn []string `json:"severity_in,omitempty"`

	// severity lt
	SeverityLt *string `json:"severity_lt,omitempty"`

	// severity lte
	SeverityLte *string `json:"severity_lte,omitempty"`

	// severity not
	SeverityNot *string `json:"severity_not,omitempty"`

	// severity not contains
	SeverityNotContains *string `json:"severity_not_contains,omitempty"`

	// severity not ends with
	SeverityNotEndsWith *string `json:"severity_not_ends_with,omitempty"`

	// severity not in
	SeverityNotIn []string `json:"severity_not_in,omitempty"`

	// severity not starts with
	SeverityNotStartsWith *string `json:"severity_not_starts_with,omitempty"`

	// severity starts with
	SeverityStartsWith *string `json:"severity_starts_with,omitempty"`

	// solution
	Solution *string `json:"solution,omitempty"`

	// solution contains
	SolutionContains *string `json:"solution_contains,omitempty"`

	// solution ends with
	SolutionEndsWith *string `json:"solution_ends_with,omitempty"`

	// solution gt
	SolutionGt *string `json:"solution_gt,omitempty"`

	// solution gte
	SolutionGte *string `json:"solution_gte,omitempty"`

	// solution in
	SolutionIn []string `json:"solution_in,omitempty"`

	// solution lt
	SolutionLt *string `json:"solution_lt,omitempty"`

	// solution lte
	SolutionLte *string `json:"solution_lte,omitempty"`

	// solution not
	SolutionNot *string `json:"solution_not,omitempty"`

	// solution not contains
	SolutionNotContains *string `json:"solution_not_contains,omitempty"`

	// solution not ends with
	SolutionNotEndsWith *string `json:"solution_not_ends_with,omitempty"`

	// solution not in
	SolutionNotIn []string `json:"solution_not_in,omitempty"`

	// solution not starts with
	SolutionNotStartsWith *string `json:"solution_not_starts_with,omitempty"`

	// solution starts with
	SolutionStartsWith *string `json:"solution_starts_with,omitempty"`

	// threshold
	Threshold *float64 `json:"threshold,omitempty"`

	// threshold gt
	ThresholdGt *float64 `json:"threshold_gt,omitempty"`

	// threshold gte
	ThresholdGte *float64 `json:"threshold_gte,omitempty"`

	// threshold in
	ThresholdIn []float64 `json:"threshold_in,omitempty"`

	// threshold lt
	ThresholdLt *float64 `json:"threshold_lt,omitempty"`

	// threshold lte
	ThresholdLte *float64 `json:"threshold_lte,omitempty"`

	// threshold not
	ThresholdNot *float64 `json:"threshold_not,omitempty"`

	// threshold not in
	ThresholdNotIn []float64 `json:"threshold_not_in,omitempty"`

	// value
	Value *float64 `json:"value,omitempty"`

	// value gt
	ValueGt *float64 `json:"value_gt,omitempty"`

	// value gte
	ValueGte *float64 `json:"value_gte,omitempty"`

	// value in
	ValueIn []float64 `json:"value_in,omitempty"`

	// value lt
	ValueLt *float64 `json:"value_lt,omitempty"`

	// value lte
	ValueLte *float64 `json:"value_lte,omitempty"`

	// value not
	ValueNot *float64 `json:"value_not,omitempty"`

	// value not in
	ValueNotIn []float64 `json:"value_not_in,omitempty"`

	// vms every
	VmsEvery *VMWhereInput `json:"vms_every,omitempty"`

	// vms none
	VmsNone *VMWhereInput `json:"vms_none,omitempty"`

	// vms some
	VmsSome *VMWhereInput `json:"vms_some,omitempty"`

	MarshalOpts *AlertWhereInputMarshalOpts `json:"-"`
}

type AlertWhereInputMarshalOpts struct {
	AND_Explicit_Null_When_Empty bool

	NOT_Explicit_Null_When_Empty bool

	OR_Explicit_Null_When_Empty bool

	AlertRule_Explicit_Null_When_Empty bool

	Cause_Explicit_Null_When_Empty bool

	CauseContains_Explicit_Null_When_Empty bool

	CauseEndsWith_Explicit_Null_When_Empty bool

	CauseGt_Explicit_Null_When_Empty bool

	CauseGte_Explicit_Null_When_Empty bool

	CauseIn_Explicit_Null_When_Empty bool

	CauseLt_Explicit_Null_When_Empty bool

	CauseLte_Explicit_Null_When_Empty bool

	CauseNot_Explicit_Null_When_Empty bool

	CauseNotContains_Explicit_Null_When_Empty bool

	CauseNotEndsWith_Explicit_Null_When_Empty bool

	CauseNotIn_Explicit_Null_When_Empty bool

	CauseNotStartsWith_Explicit_Null_When_Empty bool

	CauseStartsWith_Explicit_Null_When_Empty bool

	Cluster_Explicit_Null_When_Empty bool

	CreateTime_Explicit_Null_When_Empty bool

	CreateTimeGt_Explicit_Null_When_Empty bool

	CreateTimeGte_Explicit_Null_When_Empty bool

	CreateTimeIn_Explicit_Null_When_Empty bool

	CreateTimeLt_Explicit_Null_When_Empty bool

	CreateTimeLte_Explicit_Null_When_Empty bool

	CreateTimeNot_Explicit_Null_When_Empty bool

	CreateTimeNotIn_Explicit_Null_When_Empty bool

	Disk_Explicit_Null_When_Empty bool

	Ended_Explicit_Null_When_Empty bool

	EndedNot_Explicit_Null_When_Empty bool

	Host_Explicit_Null_When_Empty bool

	ID_Explicit_Null_When_Empty bool

	IDContains_Explicit_Null_When_Empty bool

	IDEndsWith_Explicit_Null_When_Empty bool

	IDGt_Explicit_Null_When_Empty bool

	IDGte_Explicit_Null_When_Empty bool

	IDIn_Explicit_Null_When_Empty bool

	IDLt_Explicit_Null_When_Empty bool

	IDLte_Explicit_Null_When_Empty bool

	IDNot_Explicit_Null_When_Empty bool

	IDNotContains_Explicit_Null_When_Empty bool

	IDNotEndsWith_Explicit_Null_When_Empty bool

	IDNotIn_Explicit_Null_When_Empty bool

	IDNotStartsWith_Explicit_Null_When_Empty bool

	IDStartsWith_Explicit_Null_When_Empty bool

	Impact_Explicit_Null_When_Empty bool

	ImpactContains_Explicit_Null_When_Empty bool

	ImpactEndsWith_Explicit_Null_When_Empty bool

	ImpactGt_Explicit_Null_When_Empty bool

	ImpactGte_Explicit_Null_When_Empty bool

	ImpactIn_Explicit_Null_When_Empty bool

	ImpactLt_Explicit_Null_When_Empty bool

	ImpactLte_Explicit_Null_When_Empty bool

	ImpactNot_Explicit_Null_When_Empty bool

	ImpactNotContains_Explicit_Null_When_Empty bool

	ImpactNotEndsWith_Explicit_Null_When_Empty bool

	ImpactNotIn_Explicit_Null_When_Empty bool

	ImpactNotStartsWith_Explicit_Null_When_Empty bool

	ImpactStartsWith_Explicit_Null_When_Empty bool

	LocalCreateTime_Explicit_Null_When_Empty bool

	LocalCreateTimeGt_Explicit_Null_When_Empty bool

	LocalCreateTimeGte_Explicit_Null_When_Empty bool

	LocalCreateTimeIn_Explicit_Null_When_Empty bool

	LocalCreateTimeLt_Explicit_Null_When_Empty bool

	LocalCreateTimeLte_Explicit_Null_When_Empty bool

	LocalCreateTimeNot_Explicit_Null_When_Empty bool

	LocalCreateTimeNotIn_Explicit_Null_When_Empty bool

	LocalEndTime_Explicit_Null_When_Empty bool

	LocalEndTimeContains_Explicit_Null_When_Empty bool

	LocalEndTimeEndsWith_Explicit_Null_When_Empty bool

	LocalEndTimeGt_Explicit_Null_When_Empty bool

	LocalEndTimeGte_Explicit_Null_When_Empty bool

	LocalEndTimeIn_Explicit_Null_When_Empty bool

	LocalEndTimeLt_Explicit_Null_When_Empty bool

	LocalEndTimeLte_Explicit_Null_When_Empty bool

	LocalEndTimeNot_Explicit_Null_When_Empty bool

	LocalEndTimeNotContains_Explicit_Null_When_Empty bool

	LocalEndTimeNotEndsWith_Explicit_Null_When_Empty bool

	LocalEndTimeNotIn_Explicit_Null_When_Empty bool

	LocalEndTimeNotStartsWith_Explicit_Null_When_Empty bool

	LocalEndTimeStartsWith_Explicit_Null_When_Empty bool

	LocalID_Explicit_Null_When_Empty bool

	LocalIDContains_Explicit_Null_When_Empty bool

	LocalIDEndsWith_Explicit_Null_When_Empty bool

	LocalIDGt_Explicit_Null_When_Empty bool

	LocalIDGte_Explicit_Null_When_Empty bool

	LocalIDIn_Explicit_Null_When_Empty bool

	LocalIDLt_Explicit_Null_When_Empty bool

	LocalIDLte_Explicit_Null_When_Empty bool

	LocalIDNot_Explicit_Null_When_Empty bool

	LocalIDNotContains_Explicit_Null_When_Empty bool

	LocalIDNotEndsWith_Explicit_Null_When_Empty bool

	LocalIDNotIn_Explicit_Null_When_Empty bool

	LocalIDNotStartsWith_Explicit_Null_When_Empty bool

	LocalIDStartsWith_Explicit_Null_When_Empty bool

	LocalStartTime_Explicit_Null_When_Empty bool

	LocalStartTimeContains_Explicit_Null_When_Empty bool

	LocalStartTimeEndsWith_Explicit_Null_When_Empty bool

	LocalStartTimeGt_Explicit_Null_When_Empty bool

	LocalStartTimeGte_Explicit_Null_When_Empty bool

	LocalStartTimeIn_Explicit_Null_When_Empty bool

	LocalStartTimeLt_Explicit_Null_When_Empty bool

	LocalStartTimeLte_Explicit_Null_When_Empty bool

	LocalStartTimeNot_Explicit_Null_When_Empty bool

	LocalStartTimeNotContains_Explicit_Null_When_Empty bool

	LocalStartTimeNotEndsWith_Explicit_Null_When_Empty bool

	LocalStartTimeNotIn_Explicit_Null_When_Empty bool

	LocalStartTimeNotStartsWith_Explicit_Null_When_Empty bool

	LocalStartTimeStartsWith_Explicit_Null_When_Empty bool

	LocalUpdateTime_Explicit_Null_When_Empty bool

	LocalUpdateTimeContains_Explicit_Null_When_Empty bool

	LocalUpdateTimeEndsWith_Explicit_Null_When_Empty bool

	LocalUpdateTimeGt_Explicit_Null_When_Empty bool

	LocalUpdateTimeGte_Explicit_Null_When_Empty bool

	LocalUpdateTimeIn_Explicit_Null_When_Empty bool

	LocalUpdateTimeLt_Explicit_Null_When_Empty bool

	LocalUpdateTimeLte_Explicit_Null_When_Empty bool

	LocalUpdateTimeNot_Explicit_Null_When_Empty bool

	LocalUpdateTimeNotContains_Explicit_Null_When_Empty bool

	LocalUpdateTimeNotEndsWith_Explicit_Null_When_Empty bool

	LocalUpdateTimeNotIn_Explicit_Null_When_Empty bool

	LocalUpdateTimeNotStartsWith_Explicit_Null_When_Empty bool

	LocalUpdateTimeStartsWith_Explicit_Null_When_Empty bool

	Message_Explicit_Null_When_Empty bool

	MessageContains_Explicit_Null_When_Empty bool

	MessageEndsWith_Explicit_Null_When_Empty bool

	MessageGt_Explicit_Null_When_Empty bool

	MessageGte_Explicit_Null_When_Empty bool

	MessageIn_Explicit_Null_When_Empty bool

	MessageLt_Explicit_Null_When_Empty bool

	MessageLte_Explicit_Null_When_Empty bool

	MessageNot_Explicit_Null_When_Empty bool

	MessageNotContains_Explicit_Null_When_Empty bool

	MessageNotEndsWith_Explicit_Null_When_Empty bool

	MessageNotIn_Explicit_Null_When_Empty bool

	MessageNotStartsWith_Explicit_Null_When_Empty bool

	MessageStartsWith_Explicit_Null_When_Empty bool

	Severity_Explicit_Null_When_Empty bool

	SeverityContains_Explicit_Null_When_Empty bool

	SeverityEndsWith_Explicit_Null_When_Empty bool

	SeverityGt_Explicit_Null_When_Empty bool

	SeverityGte_Explicit_Null_When_Empty bool

	SeverityIn_Explicit_Null_When_Empty bool

	SeverityLt_Explicit_Null_When_Empty bool

	SeverityLte_Explicit_Null_When_Empty bool

	SeverityNot_Explicit_Null_When_Empty bool

	SeverityNotContains_Explicit_Null_When_Empty bool

	SeverityNotEndsWith_Explicit_Null_When_Empty bool

	SeverityNotIn_Explicit_Null_When_Empty bool

	SeverityNotStartsWith_Explicit_Null_When_Empty bool

	SeverityStartsWith_Explicit_Null_When_Empty bool

	Solution_Explicit_Null_When_Empty bool

	SolutionContains_Explicit_Null_When_Empty bool

	SolutionEndsWith_Explicit_Null_When_Empty bool

	SolutionGt_Explicit_Null_When_Empty bool

	SolutionGte_Explicit_Null_When_Empty bool

	SolutionIn_Explicit_Null_When_Empty bool

	SolutionLt_Explicit_Null_When_Empty bool

	SolutionLte_Explicit_Null_When_Empty bool

	SolutionNot_Explicit_Null_When_Empty bool

	SolutionNotContains_Explicit_Null_When_Empty bool

	SolutionNotEndsWith_Explicit_Null_When_Empty bool

	SolutionNotIn_Explicit_Null_When_Empty bool

	SolutionNotStartsWith_Explicit_Null_When_Empty bool

	SolutionStartsWith_Explicit_Null_When_Empty bool

	Threshold_Explicit_Null_When_Empty bool

	ThresholdGt_Explicit_Null_When_Empty bool

	ThresholdGte_Explicit_Null_When_Empty bool

	ThresholdIn_Explicit_Null_When_Empty bool

	ThresholdLt_Explicit_Null_When_Empty bool

	ThresholdLte_Explicit_Null_When_Empty bool

	ThresholdNot_Explicit_Null_When_Empty bool

	ThresholdNotIn_Explicit_Null_When_Empty bool

	Value_Explicit_Null_When_Empty bool

	ValueGt_Explicit_Null_When_Empty bool

	ValueGte_Explicit_Null_When_Empty bool

	ValueIn_Explicit_Null_When_Empty bool

	ValueLt_Explicit_Null_When_Empty bool

	ValueLte_Explicit_Null_When_Empty bool

	ValueNot_Explicit_Null_When_Empty bool

	ValueNotIn_Explicit_Null_When_Empty bool

	VmsEvery_Explicit_Null_When_Empty bool

	VmsNone_Explicit_Null_When_Empty bool

	VmsSome_Explicit_Null_When_Empty bool
}

func (m AlertWhereInput) MarshalJSON() ([]byte, error) {
	var b bytes.Buffer
	b.WriteString("{")

	first := true

	// handle non nullable field AND with omitempty
	if !swag.IsZero(m.AND) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"AND\":")
		bytes, err := swag.WriteJSON(m.AND)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle non nullable field NOT with omitempty
	if !swag.IsZero(m.NOT) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"NOT\":")
		bytes, err := swag.WriteJSON(m.NOT)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle non nullable field OR with omitempty
	if !swag.IsZero(m.OR) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"OR\":")
		bytes, err := swag.WriteJSON(m.OR)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field alert_rule
	if m.AlertRule != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"alert_rule\":")
		bytes, err := swag.WriteJSON(m.AlertRule)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.AlertRule_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"alert_rule\":null")
		first = false
	}

	// handle nullable field cause
	if m.Cause != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause\":")
		bytes, err := swag.WriteJSON(m.Cause)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Cause_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause\":null")
		first = false
	}

	// handle nullable field cause_contains
	if m.CauseContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_contains\":")
		bytes, err := swag.WriteJSON(m.CauseContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_contains\":null")
		first = false
	}

	// handle nullable field cause_ends_with
	if m.CauseEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_ends_with\":")
		bytes, err := swag.WriteJSON(m.CauseEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_ends_with\":null")
		first = false
	}

	// handle nullable field cause_gt
	if m.CauseGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_gt\":")
		bytes, err := swag.WriteJSON(m.CauseGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_gt\":null")
		first = false
	}

	// handle nullable field cause_gte
	if m.CauseGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_gte\":")
		bytes, err := swag.WriteJSON(m.CauseGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_gte\":null")
		first = false
	}

	// handle non nullable field cause_in with omitempty
	if !swag.IsZero(m.CauseIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_in\":")
		bytes, err := swag.WriteJSON(m.CauseIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field cause_lt
	if m.CauseLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_lt\":")
		bytes, err := swag.WriteJSON(m.CauseLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_lt\":null")
		first = false
	}

	// handle nullable field cause_lte
	if m.CauseLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_lte\":")
		bytes, err := swag.WriteJSON(m.CauseLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_lte\":null")
		first = false
	}

	// handle nullable field cause_not
	if m.CauseNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_not\":")
		bytes, err := swag.WriteJSON(m.CauseNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_not\":null")
		first = false
	}

	// handle nullable field cause_not_contains
	if m.CauseNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_not_contains\":")
		bytes, err := swag.WriteJSON(m.CauseNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_not_contains\":null")
		first = false
	}

	// handle nullable field cause_not_ends_with
	if m.CauseNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.CauseNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_not_ends_with\":null")
		first = false
	}

	// handle non nullable field cause_not_in with omitempty
	if !swag.IsZero(m.CauseNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_not_in\":")
		bytes, err := swag.WriteJSON(m.CauseNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field cause_not_starts_with
	if m.CauseNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.CauseNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_not_starts_with\":null")
		first = false
	}

	// handle nullable field cause_starts_with
	if m.CauseStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_starts_with\":")
		bytes, err := swag.WriteJSON(m.CauseStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CauseStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cause_starts_with\":null")
		first = false
	}

	// handle nullable field cluster
	if m.Cluster != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cluster\":")
		bytes, err := swag.WriteJSON(m.Cluster)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Cluster_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"cluster\":null")
		first = false
	}

	// handle nullable field create_time
	if m.CreateTime != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time\":")
		bytes, err := swag.WriteJSON(m.CreateTime)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CreateTime_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time\":null")
		first = false
	}

	// handle nullable field create_time_gt
	if m.CreateTimeGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_gt\":")
		bytes, err := swag.WriteJSON(m.CreateTimeGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CreateTimeGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_gt\":null")
		first = false
	}

	// handle nullable field create_time_gte
	if m.CreateTimeGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_gte\":")
		bytes, err := swag.WriteJSON(m.CreateTimeGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CreateTimeGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_gte\":null")
		first = false
	}

	// handle non nullable field create_time_in with omitempty
	if !swag.IsZero(m.CreateTimeIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_in\":")
		bytes, err := swag.WriteJSON(m.CreateTimeIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field create_time_lt
	if m.CreateTimeLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_lt\":")
		bytes, err := swag.WriteJSON(m.CreateTimeLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CreateTimeLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_lt\":null")
		first = false
	}

	// handle nullable field create_time_lte
	if m.CreateTimeLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_lte\":")
		bytes, err := swag.WriteJSON(m.CreateTimeLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CreateTimeLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_lte\":null")
		first = false
	}

	// handle nullable field create_time_not
	if m.CreateTimeNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_not\":")
		bytes, err := swag.WriteJSON(m.CreateTimeNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.CreateTimeNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_not\":null")
		first = false
	}

	// handle non nullable field create_time_not_in with omitempty
	if !swag.IsZero(m.CreateTimeNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"create_time_not_in\":")
		bytes, err := swag.WriteJSON(m.CreateTimeNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field disk
	if m.Disk != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"disk\":")
		bytes, err := swag.WriteJSON(m.Disk)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Disk_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"disk\":null")
		first = false
	}

	// handle nullable field ended
	if m.Ended != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"ended\":")
		bytes, err := swag.WriteJSON(m.Ended)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Ended_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"ended\":null")
		first = false
	}

	// handle nullable field ended_not
	if m.EndedNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"ended_not\":")
		bytes, err := swag.WriteJSON(m.EndedNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.EndedNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"ended_not\":null")
		first = false
	}

	// handle nullable field host
	if m.Host != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"host\":")
		bytes, err := swag.WriteJSON(m.Host)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Host_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"host\":null")
		first = false
	}

	// handle nullable field id
	if m.ID != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id\":")
		bytes, err := swag.WriteJSON(m.ID)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ID_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id\":null")
		first = false
	}

	// handle nullable field id_contains
	if m.IDContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_contains\":")
		bytes, err := swag.WriteJSON(m.IDContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_contains\":null")
		first = false
	}

	// handle nullable field id_ends_with
	if m.IDEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_ends_with\":")
		bytes, err := swag.WriteJSON(m.IDEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_ends_with\":null")
		first = false
	}

	// handle nullable field id_gt
	if m.IDGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_gt\":")
		bytes, err := swag.WriteJSON(m.IDGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_gt\":null")
		first = false
	}

	// handle nullable field id_gte
	if m.IDGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_gte\":")
		bytes, err := swag.WriteJSON(m.IDGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_gte\":null")
		first = false
	}

	// handle non nullable field id_in with omitempty
	if !swag.IsZero(m.IDIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_in\":")
		bytes, err := swag.WriteJSON(m.IDIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field id_lt
	if m.IDLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_lt\":")
		bytes, err := swag.WriteJSON(m.IDLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_lt\":null")
		first = false
	}

	// handle nullable field id_lte
	if m.IDLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_lte\":")
		bytes, err := swag.WriteJSON(m.IDLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_lte\":null")
		first = false
	}

	// handle nullable field id_not
	if m.IDNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_not\":")
		bytes, err := swag.WriteJSON(m.IDNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_not\":null")
		first = false
	}

	// handle nullable field id_not_contains
	if m.IDNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_not_contains\":")
		bytes, err := swag.WriteJSON(m.IDNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_not_contains\":null")
		first = false
	}

	// handle nullable field id_not_ends_with
	if m.IDNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.IDNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_not_ends_with\":null")
		first = false
	}

	// handle non nullable field id_not_in with omitempty
	if !swag.IsZero(m.IDNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_not_in\":")
		bytes, err := swag.WriteJSON(m.IDNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field id_not_starts_with
	if m.IDNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.IDNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_not_starts_with\":null")
		first = false
	}

	// handle nullable field id_starts_with
	if m.IDStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_starts_with\":")
		bytes, err := swag.WriteJSON(m.IDStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.IDStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"id_starts_with\":null")
		first = false
	}

	// handle nullable field impact
	if m.Impact != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact\":")
		bytes, err := swag.WriteJSON(m.Impact)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Impact_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact\":null")
		first = false
	}

	// handle nullable field impact_contains
	if m.ImpactContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_contains\":")
		bytes, err := swag.WriteJSON(m.ImpactContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_contains\":null")
		first = false
	}

	// handle nullable field impact_ends_with
	if m.ImpactEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_ends_with\":")
		bytes, err := swag.WriteJSON(m.ImpactEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_ends_with\":null")
		first = false
	}

	// handle nullable field impact_gt
	if m.ImpactGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_gt\":")
		bytes, err := swag.WriteJSON(m.ImpactGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_gt\":null")
		first = false
	}

	// handle nullable field impact_gte
	if m.ImpactGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_gte\":")
		bytes, err := swag.WriteJSON(m.ImpactGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_gte\":null")
		first = false
	}

	// handle non nullable field impact_in with omitempty
	if !swag.IsZero(m.ImpactIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_in\":")
		bytes, err := swag.WriteJSON(m.ImpactIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field impact_lt
	if m.ImpactLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_lt\":")
		bytes, err := swag.WriteJSON(m.ImpactLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_lt\":null")
		first = false
	}

	// handle nullable field impact_lte
	if m.ImpactLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_lte\":")
		bytes, err := swag.WriteJSON(m.ImpactLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_lte\":null")
		first = false
	}

	// handle nullable field impact_not
	if m.ImpactNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_not\":")
		bytes, err := swag.WriteJSON(m.ImpactNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_not\":null")
		first = false
	}

	// handle nullable field impact_not_contains
	if m.ImpactNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_not_contains\":")
		bytes, err := swag.WriteJSON(m.ImpactNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_not_contains\":null")
		first = false
	}

	// handle nullable field impact_not_ends_with
	if m.ImpactNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.ImpactNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_not_ends_with\":null")
		first = false
	}

	// handle non nullable field impact_not_in with omitempty
	if !swag.IsZero(m.ImpactNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_not_in\":")
		bytes, err := swag.WriteJSON(m.ImpactNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field impact_not_starts_with
	if m.ImpactNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.ImpactNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_not_starts_with\":null")
		first = false
	}

	// handle nullable field impact_starts_with
	if m.ImpactStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_starts_with\":")
		bytes, err := swag.WriteJSON(m.ImpactStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ImpactStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"impact_starts_with\":null")
		first = false
	}

	// handle nullable field local_create_time
	if m.LocalCreateTime != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time\":")
		bytes, err := swag.WriteJSON(m.LocalCreateTime)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalCreateTime_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time\":null")
		first = false
	}

	// handle nullable field local_create_time_gt
	if m.LocalCreateTimeGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_gt\":")
		bytes, err := swag.WriteJSON(m.LocalCreateTimeGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalCreateTimeGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_gt\":null")
		first = false
	}

	// handle nullable field local_create_time_gte
	if m.LocalCreateTimeGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_gte\":")
		bytes, err := swag.WriteJSON(m.LocalCreateTimeGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalCreateTimeGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_gte\":null")
		first = false
	}

	// handle non nullable field local_create_time_in with omitempty
	if !swag.IsZero(m.LocalCreateTimeIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_in\":")
		bytes, err := swag.WriteJSON(m.LocalCreateTimeIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_create_time_lt
	if m.LocalCreateTimeLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_lt\":")
		bytes, err := swag.WriteJSON(m.LocalCreateTimeLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalCreateTimeLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_lt\":null")
		first = false
	}

	// handle nullable field local_create_time_lte
	if m.LocalCreateTimeLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_lte\":")
		bytes, err := swag.WriteJSON(m.LocalCreateTimeLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalCreateTimeLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_lte\":null")
		first = false
	}

	// handle nullable field local_create_time_not
	if m.LocalCreateTimeNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_not\":")
		bytes, err := swag.WriteJSON(m.LocalCreateTimeNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalCreateTimeNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_not\":null")
		first = false
	}

	// handle non nullable field local_create_time_not_in with omitempty
	if !swag.IsZero(m.LocalCreateTimeNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_create_time_not_in\":")
		bytes, err := swag.WriteJSON(m.LocalCreateTimeNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_end_time
	if m.LocalEndTime != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time\":")
		bytes, err := swag.WriteJSON(m.LocalEndTime)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTime_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time\":null")
		first = false
	}

	// handle nullable field local_end_time_contains
	if m.LocalEndTimeContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_contains\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_contains\":null")
		first = false
	}

	// handle nullable field local_end_time_ends_with
	if m.LocalEndTimeEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_ends_with\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_ends_with\":null")
		first = false
	}

	// handle nullable field local_end_time_gt
	if m.LocalEndTimeGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_gt\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_gt\":null")
		first = false
	}

	// handle nullable field local_end_time_gte
	if m.LocalEndTimeGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_gte\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_gte\":null")
		first = false
	}

	// handle non nullable field local_end_time_in with omitempty
	if !swag.IsZero(m.LocalEndTimeIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_in\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_end_time_lt
	if m.LocalEndTimeLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_lt\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_lt\":null")
		first = false
	}

	// handle nullable field local_end_time_lte
	if m.LocalEndTimeLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_lte\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_lte\":null")
		first = false
	}

	// handle nullable field local_end_time_not
	if m.LocalEndTimeNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_not\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_not\":null")
		first = false
	}

	// handle nullable field local_end_time_not_contains
	if m.LocalEndTimeNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_not_contains\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_not_contains\":null")
		first = false
	}

	// handle nullable field local_end_time_not_ends_with
	if m.LocalEndTimeNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_not_ends_with\":null")
		first = false
	}

	// handle non nullable field local_end_time_not_in with omitempty
	if !swag.IsZero(m.LocalEndTimeNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_not_in\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_end_time_not_starts_with
	if m.LocalEndTimeNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_not_starts_with\":null")
		first = false
	}

	// handle nullable field local_end_time_starts_with
	if m.LocalEndTimeStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_starts_with\":")
		bytes, err := swag.WriteJSON(m.LocalEndTimeStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalEndTimeStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_end_time_starts_with\":null")
		first = false
	}

	// handle nullable field local_id
	if m.LocalID != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id\":")
		bytes, err := swag.WriteJSON(m.LocalID)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalID_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id\":null")
		first = false
	}

	// handle nullable field local_id_contains
	if m.LocalIDContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_contains\":")
		bytes, err := swag.WriteJSON(m.LocalIDContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_contains\":null")
		first = false
	}

	// handle nullable field local_id_ends_with
	if m.LocalIDEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_ends_with\":")
		bytes, err := swag.WriteJSON(m.LocalIDEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_ends_with\":null")
		first = false
	}

	// handle nullable field local_id_gt
	if m.LocalIDGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_gt\":")
		bytes, err := swag.WriteJSON(m.LocalIDGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_gt\":null")
		first = false
	}

	// handle nullable field local_id_gte
	if m.LocalIDGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_gte\":")
		bytes, err := swag.WriteJSON(m.LocalIDGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_gte\":null")
		first = false
	}

	// handle non nullable field local_id_in with omitempty
	if !swag.IsZero(m.LocalIDIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_in\":")
		bytes, err := swag.WriteJSON(m.LocalIDIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_id_lt
	if m.LocalIDLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_lt\":")
		bytes, err := swag.WriteJSON(m.LocalIDLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_lt\":null")
		first = false
	}

	// handle nullable field local_id_lte
	if m.LocalIDLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_lte\":")
		bytes, err := swag.WriteJSON(m.LocalIDLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_lte\":null")
		first = false
	}

	// handle nullable field local_id_not
	if m.LocalIDNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_not\":")
		bytes, err := swag.WriteJSON(m.LocalIDNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_not\":null")
		first = false
	}

	// handle nullable field local_id_not_contains
	if m.LocalIDNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_not_contains\":")
		bytes, err := swag.WriteJSON(m.LocalIDNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_not_contains\":null")
		first = false
	}

	// handle nullable field local_id_not_ends_with
	if m.LocalIDNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.LocalIDNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_not_ends_with\":null")
		first = false
	}

	// handle non nullable field local_id_not_in with omitempty
	if !swag.IsZero(m.LocalIDNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_not_in\":")
		bytes, err := swag.WriteJSON(m.LocalIDNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_id_not_starts_with
	if m.LocalIDNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.LocalIDNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_not_starts_with\":null")
		first = false
	}

	// handle nullable field local_id_starts_with
	if m.LocalIDStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_starts_with\":")
		bytes, err := swag.WriteJSON(m.LocalIDStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalIDStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_id_starts_with\":null")
		first = false
	}

	// handle nullable field local_start_time
	if m.LocalStartTime != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time\":")
		bytes, err := swag.WriteJSON(m.LocalStartTime)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTime_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time\":null")
		first = false
	}

	// handle nullable field local_start_time_contains
	if m.LocalStartTimeContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_contains\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_contains\":null")
		first = false
	}

	// handle nullable field local_start_time_ends_with
	if m.LocalStartTimeEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_ends_with\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_ends_with\":null")
		first = false
	}

	// handle nullable field local_start_time_gt
	if m.LocalStartTimeGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_gt\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_gt\":null")
		first = false
	}

	// handle nullable field local_start_time_gte
	if m.LocalStartTimeGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_gte\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_gte\":null")
		first = false
	}

	// handle non nullable field local_start_time_in with omitempty
	if !swag.IsZero(m.LocalStartTimeIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_in\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_start_time_lt
	if m.LocalStartTimeLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_lt\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_lt\":null")
		first = false
	}

	// handle nullable field local_start_time_lte
	if m.LocalStartTimeLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_lte\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_lte\":null")
		first = false
	}

	// handle nullable field local_start_time_not
	if m.LocalStartTimeNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_not\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_not\":null")
		first = false
	}

	// handle nullable field local_start_time_not_contains
	if m.LocalStartTimeNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_not_contains\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_not_contains\":null")
		first = false
	}

	// handle nullable field local_start_time_not_ends_with
	if m.LocalStartTimeNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_not_ends_with\":null")
		first = false
	}

	// handle non nullable field local_start_time_not_in with omitempty
	if !swag.IsZero(m.LocalStartTimeNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_not_in\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_start_time_not_starts_with
	if m.LocalStartTimeNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_not_starts_with\":null")
		first = false
	}

	// handle nullable field local_start_time_starts_with
	if m.LocalStartTimeStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_starts_with\":")
		bytes, err := swag.WriteJSON(m.LocalStartTimeStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalStartTimeStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_start_time_starts_with\":null")
		first = false
	}

	// handle nullable field local_update_time
	if m.LocalUpdateTime != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTime)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTime_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time\":null")
		first = false
	}

	// handle nullable field local_update_time_contains
	if m.LocalUpdateTimeContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_contains\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_contains\":null")
		first = false
	}

	// handle nullable field local_update_time_ends_with
	if m.LocalUpdateTimeEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_ends_with\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_ends_with\":null")
		first = false
	}

	// handle nullable field local_update_time_gt
	if m.LocalUpdateTimeGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_gt\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_gt\":null")
		first = false
	}

	// handle nullable field local_update_time_gte
	if m.LocalUpdateTimeGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_gte\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_gte\":null")
		first = false
	}

	// handle non nullable field local_update_time_in with omitempty
	if !swag.IsZero(m.LocalUpdateTimeIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_in\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_update_time_lt
	if m.LocalUpdateTimeLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_lt\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_lt\":null")
		first = false
	}

	// handle nullable field local_update_time_lte
	if m.LocalUpdateTimeLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_lte\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_lte\":null")
		first = false
	}

	// handle nullable field local_update_time_not
	if m.LocalUpdateTimeNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_not\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_not\":null")
		first = false
	}

	// handle nullable field local_update_time_not_contains
	if m.LocalUpdateTimeNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_not_contains\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_not_contains\":null")
		first = false
	}

	// handle nullable field local_update_time_not_ends_with
	if m.LocalUpdateTimeNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_not_ends_with\":null")
		first = false
	}

	// handle non nullable field local_update_time_not_in with omitempty
	if !swag.IsZero(m.LocalUpdateTimeNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_not_in\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field local_update_time_not_starts_with
	if m.LocalUpdateTimeNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_not_starts_with\":null")
		first = false
	}

	// handle nullable field local_update_time_starts_with
	if m.LocalUpdateTimeStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_starts_with\":")
		bytes, err := swag.WriteJSON(m.LocalUpdateTimeStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.LocalUpdateTimeStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"local_update_time_starts_with\":null")
		first = false
	}

	// handle nullable field message
	if m.Message != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message\":")
		bytes, err := swag.WriteJSON(m.Message)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Message_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message\":null")
		first = false
	}

	// handle nullable field message_contains
	if m.MessageContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_contains\":")
		bytes, err := swag.WriteJSON(m.MessageContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_contains\":null")
		first = false
	}

	// handle nullable field message_ends_with
	if m.MessageEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_ends_with\":")
		bytes, err := swag.WriteJSON(m.MessageEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_ends_with\":null")
		first = false
	}

	// handle nullable field message_gt
	if m.MessageGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_gt\":")
		bytes, err := swag.WriteJSON(m.MessageGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_gt\":null")
		first = false
	}

	// handle nullable field message_gte
	if m.MessageGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_gte\":")
		bytes, err := swag.WriteJSON(m.MessageGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_gte\":null")
		first = false
	}

	// handle non nullable field message_in with omitempty
	if !swag.IsZero(m.MessageIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_in\":")
		bytes, err := swag.WriteJSON(m.MessageIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field message_lt
	if m.MessageLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_lt\":")
		bytes, err := swag.WriteJSON(m.MessageLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_lt\":null")
		first = false
	}

	// handle nullable field message_lte
	if m.MessageLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_lte\":")
		bytes, err := swag.WriteJSON(m.MessageLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_lte\":null")
		first = false
	}

	// handle nullable field message_not
	if m.MessageNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_not\":")
		bytes, err := swag.WriteJSON(m.MessageNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_not\":null")
		first = false
	}

	// handle nullable field message_not_contains
	if m.MessageNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_not_contains\":")
		bytes, err := swag.WriteJSON(m.MessageNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_not_contains\":null")
		first = false
	}

	// handle nullable field message_not_ends_with
	if m.MessageNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.MessageNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_not_ends_with\":null")
		first = false
	}

	// handle non nullable field message_not_in with omitempty
	if !swag.IsZero(m.MessageNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_not_in\":")
		bytes, err := swag.WriteJSON(m.MessageNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field message_not_starts_with
	if m.MessageNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.MessageNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_not_starts_with\":null")
		first = false
	}

	// handle nullable field message_starts_with
	if m.MessageStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_starts_with\":")
		bytes, err := swag.WriteJSON(m.MessageStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.MessageStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"message_starts_with\":null")
		first = false
	}

	// handle nullable field severity
	if m.Severity != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity\":")
		bytes, err := swag.WriteJSON(m.Severity)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Severity_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity\":null")
		first = false
	}

	// handle nullable field severity_contains
	if m.SeverityContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_contains\":")
		bytes, err := swag.WriteJSON(m.SeverityContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_contains\":null")
		first = false
	}

	// handle nullable field severity_ends_with
	if m.SeverityEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_ends_with\":")
		bytes, err := swag.WriteJSON(m.SeverityEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_ends_with\":null")
		first = false
	}

	// handle nullable field severity_gt
	if m.SeverityGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_gt\":")
		bytes, err := swag.WriteJSON(m.SeverityGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_gt\":null")
		first = false
	}

	// handle nullable field severity_gte
	if m.SeverityGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_gte\":")
		bytes, err := swag.WriteJSON(m.SeverityGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_gte\":null")
		first = false
	}

	// handle non nullable field severity_in with omitempty
	if !swag.IsZero(m.SeverityIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_in\":")
		bytes, err := swag.WriteJSON(m.SeverityIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field severity_lt
	if m.SeverityLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_lt\":")
		bytes, err := swag.WriteJSON(m.SeverityLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_lt\":null")
		first = false
	}

	// handle nullable field severity_lte
	if m.SeverityLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_lte\":")
		bytes, err := swag.WriteJSON(m.SeverityLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_lte\":null")
		first = false
	}

	// handle nullable field severity_not
	if m.SeverityNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_not\":")
		bytes, err := swag.WriteJSON(m.SeverityNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_not\":null")
		first = false
	}

	// handle nullable field severity_not_contains
	if m.SeverityNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_not_contains\":")
		bytes, err := swag.WriteJSON(m.SeverityNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_not_contains\":null")
		first = false
	}

	// handle nullable field severity_not_ends_with
	if m.SeverityNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.SeverityNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_not_ends_with\":null")
		first = false
	}

	// handle non nullable field severity_not_in with omitempty
	if !swag.IsZero(m.SeverityNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_not_in\":")
		bytes, err := swag.WriteJSON(m.SeverityNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field severity_not_starts_with
	if m.SeverityNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.SeverityNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_not_starts_with\":null")
		first = false
	}

	// handle nullable field severity_starts_with
	if m.SeverityStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_starts_with\":")
		bytes, err := swag.WriteJSON(m.SeverityStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SeverityStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"severity_starts_with\":null")
		first = false
	}

	// handle nullable field solution
	if m.Solution != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution\":")
		bytes, err := swag.WriteJSON(m.Solution)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Solution_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution\":null")
		first = false
	}

	// handle nullable field solution_contains
	if m.SolutionContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_contains\":")
		bytes, err := swag.WriteJSON(m.SolutionContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_contains\":null")
		first = false
	}

	// handle nullable field solution_ends_with
	if m.SolutionEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_ends_with\":")
		bytes, err := swag.WriteJSON(m.SolutionEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_ends_with\":null")
		first = false
	}

	// handle nullable field solution_gt
	if m.SolutionGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_gt\":")
		bytes, err := swag.WriteJSON(m.SolutionGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_gt\":null")
		first = false
	}

	// handle nullable field solution_gte
	if m.SolutionGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_gte\":")
		bytes, err := swag.WriteJSON(m.SolutionGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_gte\":null")
		first = false
	}

	// handle non nullable field solution_in with omitempty
	if !swag.IsZero(m.SolutionIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_in\":")
		bytes, err := swag.WriteJSON(m.SolutionIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field solution_lt
	if m.SolutionLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_lt\":")
		bytes, err := swag.WriteJSON(m.SolutionLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_lt\":null")
		first = false
	}

	// handle nullable field solution_lte
	if m.SolutionLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_lte\":")
		bytes, err := swag.WriteJSON(m.SolutionLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_lte\":null")
		first = false
	}

	// handle nullable field solution_not
	if m.SolutionNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_not\":")
		bytes, err := swag.WriteJSON(m.SolutionNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_not\":null")
		first = false
	}

	// handle nullable field solution_not_contains
	if m.SolutionNotContains != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_not_contains\":")
		bytes, err := swag.WriteJSON(m.SolutionNotContains)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionNotContains_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_not_contains\":null")
		first = false
	}

	// handle nullable field solution_not_ends_with
	if m.SolutionNotEndsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_not_ends_with\":")
		bytes, err := swag.WriteJSON(m.SolutionNotEndsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionNotEndsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_not_ends_with\":null")
		first = false
	}

	// handle non nullable field solution_not_in with omitempty
	if !swag.IsZero(m.SolutionNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_not_in\":")
		bytes, err := swag.WriteJSON(m.SolutionNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field solution_not_starts_with
	if m.SolutionNotStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_not_starts_with\":")
		bytes, err := swag.WriteJSON(m.SolutionNotStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionNotStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_not_starts_with\":null")
		first = false
	}

	// handle nullable field solution_starts_with
	if m.SolutionStartsWith != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_starts_with\":")
		bytes, err := swag.WriteJSON(m.SolutionStartsWith)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.SolutionStartsWith_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"solution_starts_with\":null")
		first = false
	}

	// handle nullable field threshold
	if m.Threshold != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold\":")
		bytes, err := swag.WriteJSON(m.Threshold)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Threshold_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold\":null")
		first = false
	}

	// handle nullable field threshold_gt
	if m.ThresholdGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_gt\":")
		bytes, err := swag.WriteJSON(m.ThresholdGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ThresholdGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_gt\":null")
		first = false
	}

	// handle nullable field threshold_gte
	if m.ThresholdGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_gte\":")
		bytes, err := swag.WriteJSON(m.ThresholdGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ThresholdGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_gte\":null")
		first = false
	}

	// handle non nullable field threshold_in with omitempty
	if !swag.IsZero(m.ThresholdIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_in\":")
		bytes, err := swag.WriteJSON(m.ThresholdIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field threshold_lt
	if m.ThresholdLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_lt\":")
		bytes, err := swag.WriteJSON(m.ThresholdLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ThresholdLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_lt\":null")
		first = false
	}

	// handle nullable field threshold_lte
	if m.ThresholdLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_lte\":")
		bytes, err := swag.WriteJSON(m.ThresholdLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ThresholdLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_lte\":null")
		first = false
	}

	// handle nullable field threshold_not
	if m.ThresholdNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_not\":")
		bytes, err := swag.WriteJSON(m.ThresholdNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ThresholdNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_not\":null")
		first = false
	}

	// handle non nullable field threshold_not_in with omitempty
	if !swag.IsZero(m.ThresholdNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"threshold_not_in\":")
		bytes, err := swag.WriteJSON(m.ThresholdNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field value
	if m.Value != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value\":")
		bytes, err := swag.WriteJSON(m.Value)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.Value_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value\":null")
		first = false
	}

	// handle nullable field value_gt
	if m.ValueGt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_gt\":")
		bytes, err := swag.WriteJSON(m.ValueGt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ValueGt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_gt\":null")
		first = false
	}

	// handle nullable field value_gte
	if m.ValueGte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_gte\":")
		bytes, err := swag.WriteJSON(m.ValueGte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ValueGte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_gte\":null")
		first = false
	}

	// handle non nullable field value_in with omitempty
	if !swag.IsZero(m.ValueIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_in\":")
		bytes, err := swag.WriteJSON(m.ValueIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field value_lt
	if m.ValueLt != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_lt\":")
		bytes, err := swag.WriteJSON(m.ValueLt)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ValueLt_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_lt\":null")
		first = false
	}

	// handle nullable field value_lte
	if m.ValueLte != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_lte\":")
		bytes, err := swag.WriteJSON(m.ValueLte)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ValueLte_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_lte\":null")
		first = false
	}

	// handle nullable field value_not
	if m.ValueNot != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_not\":")
		bytes, err := swag.WriteJSON(m.ValueNot)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.ValueNot_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_not\":null")
		first = false
	}

	// handle non nullable field value_not_in with omitempty
	if !swag.IsZero(m.ValueNotIn) {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"value_not_in\":")
		bytes, err := swag.WriteJSON(m.ValueNotIn)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	}

	// handle nullable field vms_every
	if m.VmsEvery != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vms_every\":")
		bytes, err := swag.WriteJSON(m.VmsEvery)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.VmsEvery_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vms_every\":null")
		first = false
	}

	// handle nullable field vms_none
	if m.VmsNone != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vms_none\":")
		bytes, err := swag.WriteJSON(m.VmsNone)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.VmsNone_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vms_none\":null")
		first = false
	}

	// handle nullable field vms_some
	if m.VmsSome != nil {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vms_some\":")
		bytes, err := swag.WriteJSON(m.VmsSome)
		if err != nil {
			return nil, err
		}
		b.Write(bytes)
		first = false
	} else if m.MarshalOpts != nil && m.MarshalOpts.VmsSome_Explicit_Null_When_Empty {
		if !first {
			b.WriteString(",")
		}
		b.WriteString("\"vms_some\":null")
		first = false
	}

	b.WriteString("}")
	return b.Bytes(), nil
}

// Validate validates this alert where input
func (m *AlertWhereInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAND(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNOT(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOR(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAlertRule(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCluster(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDisk(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHost(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVmsEvery(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVmsNone(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVmsSome(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AlertWhereInput) validateAND(formats strfmt.Registry) error {
	if swag.IsZero(m.AND) { // not required
		return nil
	}

	for i := 0; i < len(m.AND); i++ {
		if swag.IsZero(m.AND[i]) { // not required
			continue
		}

		if m.AND[i] != nil {
			if err := m.AND[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AND" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("AND" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AlertWhereInput) validateNOT(formats strfmt.Registry) error {
	if swag.IsZero(m.NOT) { // not required
		return nil
	}

	for i := 0; i < len(m.NOT); i++ {
		if swag.IsZero(m.NOT[i]) { // not required
			continue
		}

		if m.NOT[i] != nil {
			if err := m.NOT[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("NOT" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("NOT" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AlertWhereInput) validateOR(formats strfmt.Registry) error {
	if swag.IsZero(m.OR) { // not required
		return nil
	}

	for i := 0; i < len(m.OR); i++ {
		if swag.IsZero(m.OR[i]) { // not required
			continue
		}

		if m.OR[i] != nil {
			if err := m.OR[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("OR" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("OR" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AlertWhereInput) validateAlertRule(formats strfmt.Registry) error {
	if swag.IsZero(m.AlertRule) { // not required
		return nil
	}

	if m.AlertRule != nil {
		if err := m.AlertRule.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("alert_rule")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("alert_rule")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) validateCluster(formats strfmt.Registry) error {
	if swag.IsZero(m.Cluster) { // not required
		return nil
	}

	if m.Cluster != nil {
		if err := m.Cluster.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cluster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cluster")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) validateDisk(formats strfmt.Registry) error {
	if swag.IsZero(m.Disk) { // not required
		return nil
	}

	if m.Disk != nil {
		if err := m.Disk.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("disk")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("disk")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) validateHost(formats strfmt.Registry) error {
	if swag.IsZero(m.Host) { // not required
		return nil
	}

	if m.Host != nil {
		if err := m.Host.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("host")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("host")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) validateVmsEvery(formats strfmt.Registry) error {
	if swag.IsZero(m.VmsEvery) { // not required
		return nil
	}

	if m.VmsEvery != nil {
		if err := m.VmsEvery.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vms_every")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vms_every")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) validateVmsNone(formats strfmt.Registry) error {
	if swag.IsZero(m.VmsNone) { // not required
		return nil
	}

	if m.VmsNone != nil {
		if err := m.VmsNone.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vms_none")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vms_none")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) validateVmsSome(formats strfmt.Registry) error {
	if swag.IsZero(m.VmsSome) { // not required
		return nil
	}

	if m.VmsSome != nil {
		if err := m.VmsSome.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vms_some")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vms_some")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this alert where input based on the context it is used
func (m *AlertWhereInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAND(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateNOT(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateOR(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateAlertRule(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCluster(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateDisk(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateHost(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateVmsEvery(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateVmsNone(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateVmsSome(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AlertWhereInput) contextValidateAND(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.AND); i++ {

		if m.AND[i] != nil {
			if err := m.AND[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AND" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("AND" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AlertWhereInput) contextValidateNOT(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.NOT); i++ {

		if m.NOT[i] != nil {
			if err := m.NOT[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("NOT" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("NOT" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AlertWhereInput) contextValidateOR(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.OR); i++ {

		if m.OR[i] != nil {
			if err := m.OR[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("OR" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("OR" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AlertWhereInput) contextValidateAlertRule(ctx context.Context, formats strfmt.Registry) error {

	if m.AlertRule != nil {
		if err := m.AlertRule.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("alert_rule")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("alert_rule")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) contextValidateCluster(ctx context.Context, formats strfmt.Registry) error {

	if m.Cluster != nil {
		if err := m.Cluster.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cluster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cluster")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) contextValidateDisk(ctx context.Context, formats strfmt.Registry) error {

	if m.Disk != nil {
		if err := m.Disk.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("disk")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("disk")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) contextValidateHost(ctx context.Context, formats strfmt.Registry) error {

	if m.Host != nil {
		if err := m.Host.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("host")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("host")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) contextValidateVmsEvery(ctx context.Context, formats strfmt.Registry) error {

	if m.VmsEvery != nil {
		if err := m.VmsEvery.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vms_every")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vms_every")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) contextValidateVmsNone(ctx context.Context, formats strfmt.Registry) error {

	if m.VmsNone != nil {
		if err := m.VmsNone.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vms_none")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vms_none")
			}
			return err
		}
	}

	return nil
}

func (m *AlertWhereInput) contextValidateVmsSome(ctx context.Context, formats strfmt.Registry) error {

	if m.VmsSome != nil {
		if err := m.VmsSome.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vms_some")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vms_some")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AlertWhereInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AlertWhereInput) UnmarshalBinary(b []byte) error {
	var res AlertWhereInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
